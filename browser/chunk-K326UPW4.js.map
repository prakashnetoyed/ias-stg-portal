{
  "version": 3,
  "sources": ["src/app/user-portal/pages/user-home/user-home.component.ts", "src/app/user-portal/pages/user-home/user-home.component.html"],
  "sourcesContent": ["import { CommonModule } from '@angular/common';\nimport { Component, ElementRef, ViewChild } from '@angular/core';\nimport { User, UserService } from '../../../services/user.service';\nimport { Router, RouterLink } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../../../environments/environment';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { io, Socket } from 'socket.io-client';\nimport { TimeAgoPipe } from \"../../../common/time-ago.pipe\";\nimport { ToastService } from '../../../common/toast.service';\ndeclare var bootstrap: any;\n\n@Component({\n  selector: 'app-user-home',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, TimeAgoPipe, RouterLink],\n  templateUrl: './user-home.component.html',\n  styleUrl: './user-home.component.scss'\n})\nexport class UserHomeComponent {\n  postForm: FormGroup;\n  liked = false;\n  uploadedUrls: string[] = [];\n  previewUrls: (string | ArrayBuffer | null)[] = [];\n  selectedFiles: File[] = [];\n  @ViewChild('offcanvasEl') offcanvasEl!: ElementRef;\n  toastType: string = 'primary';\n  mediaupload: boolean = false;\n  validTill: any;\n  toggleLike(post: any) {\n    if (!post) return;\n\n    // trigger animation\n    post.animate = true;\n\n    // optimistic UI update\n    const prevLiked = post.isLiked;\n    post.isLiked = !prevLiked;\n    post.likes += post.isLiked ? 1 : -1;\n\n    // call API\n    this.http.post<any>(`${environment.apiUrl}/communities/likes`, { communityId: post.id })\n      .subscribe({\n        next: (res) => {\n          console.log(\"Like API success:\", res);\n          if (this.user?.id) {\n            this.communityuseridposts(this.user.id);\n          }\n          this.communityposts();\n\n        },\n        error: (err) => {\n          console.error(\"Error in Like post:\", err);\n          // revert if failed\n          post.isLiked = prevLiked;\n          post.likes += post.isLiked ? 1 : -1;\n        }\n      });\n\n    // reset animate flag after animation\n    setTimeout(() => { post.animate = false; }, 300);\n  }\n\n\n  user: any | null = null;\n  hasSubscription: boolean = false;\n  toastMessage: string = '';\n  eventsList: any[] = [];\n  tagsList: any[] = [];\n  uploadProgress: number[] = [];\n  socket!: Socket;\n  uploadId: string = Date.now().toString();\n  posts: any[] = [];\n  userposts: any = null;\n  s3Url = environment.s3Url;\n\n  @ViewChild('errorToast', { static: false }) errorToast!: ElementRef;\n  ngOnInit(): void {\n    this.userService.getUser().subscribe(user => {\n      this.user = user;\n      console.log(\"user in home\", this.user);\n      this.hasSubscription = user?.hasSubscription || false;\n      if (this.user?.subscriptionType === 'annual' && this.user?.memberShipStartedAt) {\n        const start = new Date(this.user.memberShipStartedAt);\n        const expiry = new Date(start);\n        expiry.setFullYear(start.getFullYear() + 1);\n        this.validTill = expiry.toISOString(); // store as ISO string\n      } else if (this.user?.subscriptionType === 'lifetime') {\n        this.validTill = 'lifetime';\n      } else {\n        this.validTill = null; // for safety, if no subscription\n      }\n      \n      if (this.user?.id) {\n        this.communityuseridposts(this.user.id);\n      }\n    });\n    this.loadEvents();\n    this.loadtags();\n    this.communityposts();\n    // this.socket = io('https://stg.iasca.netoyed.com/api');\n\n    // this.socket.on('connect', () => {\n    //   console.log('✅ Connected to socket:', this.socket.id);\n    //   this.socket.emit('joinUpload', this.uploadId);\n    // });\n\n    // this.socket.on('uploadProgress', (data: any) => {\n    //   console.log('📦 Upload Progress:', data);\n\n    //   const index = this.selectedFiles.findIndex(f => f.name === data.fileName);\n    //   if (index !== -1) {\n    //     this.uploadProgress[index] = data.progress;\n    //   }\n    // });\n  }\n  ngOnDestroy(): void {\n    if (this.socket) this.socket.disconnect();\n  }\n  ngAfterViewChecked() {\n    const left = document.querySelector('.left-side-modules') as HTMLElement;\n    const right = document.querySelector('.right-side-modules') as HTMLElement;\n\n    if (left && right) {\n      right.style.height = left.offsetHeight + \"px\";\n      right.style.overflowY = \"auto\";\n    }\n  }\n\n\n\n  constructor(private userService: UserService, private http: HttpClient, private fb: FormBuilder, private toastService: ToastService\n  ) {\n    this.postForm = this.fb.group({\n      caption: ['', [Validators.required, Validators.maxLength(100)]],\n      description: [''],\n      postTagId: [0, [Validators.required, this.nonZeroValidator]],\n      mediaFile: [[]]\n    });\n\n  }\n  nonZeroValidator(control: any) {\n    return control.value && control.value !== 0 ? null : { nonZero: true };\n  }\n  loadEvents() {\n    const token = localStorage.getItem('authToken');\n    console.log(token);\n\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`,\n      'Content-Type': 'application/json'\n    });\n\n    this.http.get<any>(`${environment.apiUrl}/events?isActive=true&limit=2`, { headers })\n      .subscribe({\n        next: (res) => {\n          console.log(res);\n          this.eventsList = res.data.data;\n          console.log(this.eventsList);\n        },\n        error: (err) => {\n          console.error('Error fetching Events:', err);\n        }\n      });\n  }\n  loadtags() {\n    const token = localStorage.getItem('authToken');\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`,\n      'Content-Type': 'application/json'\n    });\n\n    this.http.get<any>(`${environment.apiUrl}/post-tags?limit=0`, { headers })\n      .subscribe({\n        next: (res) => {\n          console.log(res);\n          this.tagsList = res.data.data;\n          console.log(this.tagsList);\n        },\n        error: (err) => {\n          console.error('Error fetching Events:', err);\n        }\n      });\n  }\n  copyPostLink(postId: string) {\n    const url = `${window.location.origin}/post?id=${postId}`;\n\n    navigator.clipboard.writeText(url).then(() => {\n      this.toastService.showToast('Link copied to clipboard ✅', 'success');\n    }).catch(err => {\n      console.error('Failed to copy link: ', err);\n    });\n  }\n  communityposts() {\n    const token = localStorage.getItem('authToken');\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n\n    this.http.get<any>(`${environment.apiUrl}/communities/users?populate=createdBy&limit=50`, { headers })\n      .subscribe({\n        next: (res) => {\n          console.log(res);\n          this.posts = res.data.data;\n          console.log(\"postsssss\", this.posts);\n        },\n        error: (err) => {\n          console.error('Error fetching posts:', err);\n        }\n      });\n  }\n  communityuseridposts(id: number | undefined) {\n    const token = localStorage.getItem('authToken');\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n    console.log(\"id\", id);\n\n    this.http.get<any>(`${environment.apiUrl}/communities/users?populate=postTag&populate=createdBy&createdBy=${id}&limit=1`, { headers })\n      .subscribe({\n        next: (res) => {\n          console.log(res);\n          this.userposts = res.data.data[0];\n          console.log(\"userrr posts\", this.userposts);\n        },\n        error: (err) => {\n          console.error('Error fetching posts:', err);\n        }\n      });\n  }\n\n  getInitials(user: User | null): string {\n    if (!user?.doptOfficer?.englishName) return 'NA';\n\n    // ✅ List of honorifics / prefixes to ignore\n    const ignoreList = ['shri', 'mr', 'mrs', 'ms', 'dr', 'prof', 'sir'];\n\n    // ✅ Clean up the name\n    const names = user.doptOfficer.englishName\n      .trim()\n      .split(/\\s+/)\n      .filter((n: string) => !ignoreList.includes(n.toLowerCase()));\n\n    if (names.length === 0) return 'NA';\n\n    let initials = '';\n\n    if (names.length === 1) {\n      // Single word → take first 2 letters\n      initials = names[0].substring(0, 2).toUpperCase();\n    } else {\n      // Multi-word → take first and last\n      initials = names[0][0].toUpperCase() + names[names.length - 1][0].toUpperCase();\n    }\n\n    return initials;\n  }\n\n  onFileSelected(event: Event): void {\n    const input = event.target as HTMLInputElement;\n    const files = input.files;\n    if (!files || files.length === 0) return;\n\n    Array.from(files).forEach(file => {\n      // ✅ Only allow images or videos\n      if (!(file.type.startsWith('image/') || file.type.startsWith('video/'))) {\n        this.toastService.showToast(\n          `Only images and videos are accepted.`,\n          'danger'\n        );\n        return;\n      }\n\n      // ✅ Max size 256MB\n      if (file.size > 256 * 1024 * 1024) {\n        this.toastService.showToast(\n          `\"${file.name}\" exceeds 256MB, Failed to upload.`,\n          'danger'\n        );\n        return;\n      }\n\n      // ✅ Prevent duplicates\n      if (this.selectedFiles.some(f => f.name === file.name && f.size === file.size)) {\n        this.toastService.showToast(\n          `\"${file.name}\" is already selected.`,\n          'warning'\n        );\n        return;\n      }\n\n      // Add file\n      this.selectedFiles.push(file);\n\n      // Preview\n      const reader = new FileReader();\n      reader.onload = () => {\n        this.previewUrls.push(reader.result as string);\n      };\n      reader.readAsDataURL(file);\n\n      // 🚀 Upload immediately\n      this.uploadFile(file);\n    });\n\n    // Reset input so same file can be chosen again\n    input.value = '';\n  }\n\n\n\n  removeFile(index: number): void {\n    this.selectedFiles.splice(index, 1);\n    this.previewUrls.splice(index, 1);\n    this.uploadProgress.splice(index, 1);\n\n    // ❌ Previously you used file.name\n    // ✅ Now use uploadedUrls (API response URLs)\n    this.uploadedUrls.splice(index, 1);\n\n    this.postForm.patchValue({ mediaFile: [...this.uploadedUrls] });\n  }\n\n  uploadFile(file: File): void {\n    if (!file) return;\n\n\n    const formData = new FormData();\n    formData.append('file', file);\n\n    this.mediaupload = true;\n    const token = localStorage.getItem('authToken');\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n\n\n    this.http.post<any>(`${environment.apiUrl}/upload`, formData, { headers }).subscribe({\n      next: (result) => {\n        console.log('✅ File Uploaded:', result);\n        if (result.success && result.data?.url) {\n          // Always treat mediaFile as array\n          this.mediaupload = false;\n          this.uploadedUrls.push(result.data.url);\n          this.postForm.patchValue({ mediaFile: [...this.uploadedUrls] });\n        }\n      },\n      error: (err) => {\n        console.error('❌ Upload failed:', err);\n      }\n    });\n  }\n\n\n  // ✅ Submit\n  onSubmit(): void {\n    if (this.postForm.invalid) {\n      this.postForm.markAllAsTouched();\n      return;\n    }\n    const desc = this.postForm.get('description')?.value;\n    const payload = {\n      isActive: true,\n      caption: this.postForm.get('caption')?.value,\n      description: desc && desc.trim() !== '' ? desc.trim() : null,\n      postTagId: Number(this.postForm.get('postTagId')?.value),\n      mediaFile: this.postForm.get('mediaFile')?.value // array of file names\n    };\n\n    console.log('Form submitted ✅', payload);\n\n    const token = localStorage.getItem('authToken');\n    console.log(token);\n\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`,\n      'Content-Type': 'application/json'\n    });\n\n    this.http.post<any>(`${environment.apiUrl}/communities`, payload, { headers })\n      .subscribe({\n        next: (res) => {\n          console.log(res);\n          this.postForm.reset();\n          this.selectedFiles = [];\n          this.previewUrls = [];\n          this.uploadedUrls = [];\n          this.postForm.get('postTagId')?.setValue(0);\n          this.showToast('✅ Post Submitted Successfully', 'success');\n          this.communityposts();\n          if (this.user?.id) {\n            this.communityuseridposts(this.user.id);\n          }\n          // close offcanvas\n          const offcanvas = bootstrap.Offcanvas.getInstance(this.offcanvasEl.nativeElement);\n          offcanvas?.hide();\n        },\n        error: (err) => {\n          console.error('Error fetching communities:', err);\n          this.showToast(err.error.message, 'danger');\n        }\n      });\n\n  }\n  showToast(message: string, type: string = 'primary') {\n    this.toastMessage = message;\n    this.toastType = type;\n\n    const toastEl = document.getElementById('liveToast');\n    if (toastEl) {\n      const toast = new bootstrap.Toast(toastEl, { delay: 3000 });\n      toast.show();\n    }\n  }\n  openEvent(url: string) {\n    window.open(url, '_blank'); // opens in new tab\n  }\n  showErrorToast(message: string): void {\n    this.toastMessage = message;\n\n    const toastElement = this.errorToast.nativeElement;\n    const toast = new bootstrap.Toast(toastElement);\n    toast.show();\n  }\n}\n", "<div class=\"toast-container position-fixed top-0 end-0 p-3\">\n    <div id=\"liveToast\" class=\"toast align-items-center text-bg-{{ toastType }} border-0\" role=\"alert\"\n        aria-live=\"assertive\" aria-atomic=\"true\">\n        <div class=\"d-flex\">\n            <div class=\"toast-body\">\n                {{ toastMessage }}\n            </div>\n            <button type=\"button\" class=\"btn-close btn-close-white me-2 m-auto\" data-bs-dismiss=\"toast\"\n                aria-label=\"Close\"></button>\n        </div>\n    </div>\n</div>\n<div class=\"main-user-home-div\">\n    <div class=\"name-image-div d-flex align-items-center gap-3\" *ngIf=\"user\">\n        <div class=\"avatar\">\n            <ng-container>\n                <ng-container *ngIf=\"user.doptOfficer?.profilePic; else initialsBlock\">\n                    <img [src]=\"user.doptOfficer?.profilePic\" alt=\"Avatar\" />\n                </ng-container>\n                <ng-template #initialsBlock>\n                    {{ getInitials(user) }}\n                </ng-template>\n            </ng-container>\n        </div>\n        <h1 class=\"invite-text\">Hi, {{user.doptOfficer?.englishName}}!</h1>\n\n        <div *ngIf=\"hasSubscription\" class=\"membership-status\">\n            Membership Status Active\n        </div>\n    </div>\n\n    <div class=\"other-content-div mt-4 \">\n        <div class=\"left-side-modules\">\n            <div class=\"recent-post-module\">\n                <div class=\"head d-flex align-items-center justify-content-between\">\n                    <h1>Recent Posts</h1>\n                    <button class=\"btn btn-donate d-flex align-items-center py-2\" data-bs-toggle=\"offcanvas\"\n                        data-bs-target=\"#postFormCanvas\">Add Post\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"24\" viewBox=\"0 0 25 24\" fill=\"none\">\n                            <mask id=\"mask0_51469_6408\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\"\n                                width=\"25\" height=\"24\">\n                                <rect x=\"0.5\" width=\"24\" height=\"24\" fill=\"#D9D9D9\" />\n                            </mask>\n                            <g mask=\"url(#mask0_51469_6408)\">\n                                <path d=\"M11.5 13H5.5V11H11.5V5H13.5V11H19.5V13H13.5V19H11.5V13Z\" fill=\"white\" />\n                            </g>\n                        </svg></button>\n                </div>\n                <div *ngIf=\"userposts !== undefined \" class=\"mb-2\">\n                    <div class=\"d-flex align-items-center mb-2\">\n                        <div>\n                            <small class=\"text-muted\">{{ userposts?.createdAt | timeAgo }}</small>\n                        </div>\n                    </div>\n\n                    <!-- Post Image (only if available) -->\n                    <div *ngIf=\"userposts?.mediaFile?.length >0\"\n                        class=\"position-relative imgcontainer overflow-auto d-flex gap-2 w-100 pb-2\">\n                        <ng-container *ngFor=\"let file of userposts.mediaFile\">\n                            <!-- Check if file is an image -->\n                            <img *ngIf=\"file.endsWith('.jpg') || file.endsWith('.jpeg') || file.endsWith('.png')\"\n                                [src]='s3Url+file' class=\"img-fluid rounded\" alt=\"Post Image\">\n\n                            <!-- Check if file is a video -->\n                            <video *ngIf=\"file.endsWith('.mp4')\" [src]=\"s3Url+file\" class=\"img-fluid rounded\" controls>\n                            </video>\n                        </ng-container>\n                    </div>\n\n\n                    <!-- Post Text -->\n                    <p class=\"mb-2\">{{ userposts?.caption }}</p>\n                    <hr class=\"my-1\">\n\n                    <div class=\"like-share-div my-3 z-1 d-flex align-items-center gap-3\">\n                        <div class=\"like-div d-flex align-items-center\">\n                            <div class=\"like-button overflow-visible\" [class.liked]=\"userposts?.isLiked\"\n                                [class.animate]=\"userposts?.animate\" (click)=\"toggleLike(userposts)\">\n                                <!-- Heart Icon -->\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"21\" height=\"19\" viewBox=\"0 0 21 19\"\n                                    fill=\"none\">\n                                    <path\n                                        d=\"M10.293 19L8.84297 17.7C7.15964 16.1834 5.76797 14.875 4.66797 13.775C3.56797 12.675 2.69297 11.6875 2.04297 10.8125C1.39297 9.93752 0.938802 9.13336 0.680469 8.40002C0.422135 7.66669 0.292969 6.91669 0.292969 6.15002C0.292969 4.58336 0.817969 3.27502 1.86797 2.22502C2.91797 1.17502 4.2263 0.650024 5.79297 0.650024C6.65964 0.650024 7.48464 0.833358 8.26797 1.20002C9.0513 1.56669 9.7263 2.08336 10.293 2.75002C10.8596 2.08336 11.5346 1.56669 12.318 1.20002C13.1013 0.833358 13.9263 0.650024 14.793 0.650024C16.3596 0.650024 17.668 1.17502 18.718 2.22502C19.768 3.27502 20.293 4.58336 20.293 6.15002C20.293 6.91669 20.1638 7.66669 19.9055 8.40002C19.6471 9.13336 19.193 9.93752 18.543 10.8125C17.893 11.6875 17.018 12.675 15.918 13.775C14.818 14.875 13.4263 16.1834 11.743 17.7L10.293 19ZM10.293 16.3C11.893 14.8667 13.2096 13.6375 14.243 12.6125C15.2763 11.5875 16.093 10.6959 16.693 9.93752C17.293 9.17919 17.7096 8.50419 17.943 7.91252C18.1763 7.32086 18.293 6.73336 18.293 6.15002C18.293 5.15002 17.9596 4.31669 17.293 3.65002C16.6263 2.98336 15.793 2.65002 14.793 2.65002C14.0096 2.65002 13.2846 2.87086 12.618 3.31252C11.9513 3.75419 11.493 4.31669 11.243 5.00002H9.34297C9.09297 4.31669 8.63464 3.75419 7.96797 3.31252C7.3013 2.87086 6.5763 2.65002 5.79297 2.65002C4.79297 2.65002 3.95964 2.98336 3.29297 3.65002C2.6263 4.31669 2.29297 5.15002 2.29297 6.15002C2.29297 6.73336 2.40964 7.32086 2.64297 7.91252C2.8763 8.50419 3.29297 9.17919 3.89297 9.93752C4.49297 10.6959 5.30964 11.5875 6.34297 12.6125C7.3763 13.6375 8.69297 14.8667 10.293 16.3Z\"\n                                        fill=\"black\" />\n                                </svg>\n                            </div>\n                            <span class=\"like-count\">{{ userposts?.likes }} Likes</span>\n\n                        </div>\n                        <div class=\"share-div\" (click)=\"copyPostLink(userposts.id)\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"19\" height=\"14\" viewBox=\"0 0 19 14\"\n                                fill=\"none\">\n                                <path\n                                    d=\"M2.29297 14V10C2.29297 9.16667 2.58464 8.45833 3.16797 7.875C3.7513 7.29167 4.45964 7 5.29297 7H14.468L10.868 10.6L12.293 12L18.293 6L12.293 0L10.868 1.4L14.468 5H5.29297C3.90964 5 2.73047 5.4875 1.75547 6.4625C0.780468 7.4375 0.292969 8.61667 0.292969 10V14H2.29297Z\"\n                                    fill=\"black\" />\n                            </svg>Copy Link\n                        </div>\n                    </div>\n                </div>\n                <div *ngIf=\"userposts === null \" class=\"mb-2\">\n                    <p class=\"mb-2\">No recent posts available.</p>\n                </div>\n            </div>\n            <div class=\"upcoming-events-module mt-4\">\n                <div class=\"head d-flex align-items-center justify-content-between mb-4 mt-2\">\n                    <h1>Upcoming Events</h1>\n                    <h4 class=\"cursur-pointer\" routerLink=\"/user-home/user-events\">View All Events</h4>\n                </div>\n                <div *ngFor=\"let event of eventsList;  let i = index\"\n                    class=\"meeting-card d-flex align-items-center shadow-sm mb-3 p-3 rounded\">\n\n                    <!-- Date Badge -->\n                    <div class=\"date-badge bg-purple me-3\" [ngClass]=\"i % 2 === 0 ? 'bg-purple' : 'bg-teal'\">\n                        <div class=\"month\">{{ event.date | date:'MMM'}}</div>\n                        <div class=\"day\">{{ event.date | date: 'dd' }}</div>\n                    </div>\n\n                    <div class=\"flex-grow-1\">\n                        <h6 class=\"mb-1\">{{ event.title }}</h6>\n                        <p class=\"mb-0\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" viewBox=\"0 0 22 22\"\n                                fill=\"none\">\n                                <mask id=\"mask0_51656_5189\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\"\n                                    y=\"0\" width=\"22\" height=\"22\">\n                                    <rect width=\"22\" height=\"22\" fill=\"#D9D9D9\" />\n                                </mask>\n                                <g mask=\"url(#mask0_51656_5189)\">\n                                    <path\n                                        d=\"M10.9997 18.3181C9.38023 18.3181 8.0587 18.0637 7.03509 17.5549C6.01148 17.0461 5.49967 16.3891 5.49967 15.5841C5.49967 15.2196 5.61044 14.8816 5.83197 14.5702C6.05349 14.2589 6.36287 13.9893 6.76009 13.7614L8.20384 15.1057C8.06634 15.1664 7.91738 15.2348 7.75697 15.3107C7.59655 15.3867 7.47051 15.4778 7.37884 15.5841C7.57745 15.8271 8.03579 16.0398 8.75384 16.222C9.4719 16.4043 10.2205 16.4954 10.9997 16.4954C11.7788 16.4954 12.5313 16.4043 13.257 16.222C13.9827 16.0398 14.4448 15.8271 14.6434 15.5841C14.5365 15.4626 14.399 15.3639 14.2309 15.2879C14.0629 15.212 13.9025 15.1436 13.7497 15.0829L15.1705 13.7159C15.5983 13.9589 15.9268 14.2361 16.1559 14.5475C16.3851 14.8588 16.4997 15.2044 16.4997 15.5841C16.4997 16.3891 15.9879 17.0461 14.9643 17.5549C13.9406 18.0637 12.6191 18.3181 10.9997 18.3181ZM11.0226 13.3058C12.5351 12.197 13.6733 11.0844 14.4372 9.96797C15.2011 8.85157 15.583 7.73138 15.583 6.6074C15.583 5.05812 15.0865 3.88856 14.0934 3.09873C13.1004 2.30891 12.0691 1.91399 10.9997 1.91399C9.93023 1.91399 8.89898 2.30891 7.90592 3.09873C6.91287 3.88856 6.41634 5.05812 6.41634 6.6074C6.41634 7.62506 6.79065 8.68449 7.53926 9.7857C8.28787 10.8869 9.44898 12.0603 11.0226 13.3058ZM10.9997 15.5841C8.84551 14.0044 7.23752 12.4704 6.17572 10.9818C5.11391 9.49331 4.58301 8.03516 4.58301 6.6074C4.58301 5.52898 4.7778 4.58346 5.16738 3.77085C5.55697 2.95824 6.05731 2.27853 6.66842 1.73172C7.27954 1.18492 7.96704 0.774814 8.73092 0.501412C9.49481 0.22801 10.2511 0.0913086 10.9997 0.0913086C11.7483 0.0913086 12.5045 0.22801 13.2684 0.501412C14.0323 0.774814 14.7198 1.18492 15.3309 1.73172C15.942 2.27853 16.4424 2.95824 16.832 3.77085C17.2215 4.58346 17.4163 5.52898 17.4163 6.6074C17.4163 8.03516 16.8854 9.49331 15.8236 10.9818C14.7618 12.4704 13.1538 14.0044 10.9997 15.5841ZM10.9997 8.29338C11.5038 8.29338 11.9354 8.11491 12.2945 7.75797C12.6535 7.40102 12.833 6.97193 12.833 6.4707C12.833 5.96946 12.6535 5.54037 12.2945 5.18343C11.9354 4.82649 11.5038 4.64801 10.9997 4.64801C10.4955 4.64801 10.0639 4.82649 9.70488 5.18343C9.34585 5.54037 9.16634 5.96946 9.16634 6.4707C9.16634 6.97193 9.34585 7.40102 9.70488 7.75797C10.0639 8.11491 10.4955 8.29338 10.9997 8.29338Z\"\n                                        fill=\"#6B6B6B\" />\n                                </g>\n                            </svg> {{ event.location }}\n                        </p>\n                    </div>\n                    <button class=\"btn btn-prime me-3\" *ngIf=\"event.url\"\n                        (click)=\"event.url && openEvent(event.url)\">Join Event Online</button>\n                </div>\n            </div>\n            <div *ngIf=\"hasSubscription\" class=\"recent-post-module mt-4 pt-4\">\n                <h1>Membership Expiring in <span class=\"text-danger\"> <p *ngIf=\"validTill\">\n                                <span>Valid Till: </span>\n                                <ng-container *ngIf=\"validTill !== 'lifetime'; else lifetimeTpl\">\n                                    {{ validTill | date:'dd MMM yyyy' }}\n                                </ng-container>\n                            </p></span></h1>\n                <hr>\n                <div class=\"row mt-4 membership\">\n                    <div class=\"col-lg-7 mb-3\">\n                        <div class=\"d-flex align-items-center gap-2\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"21\" viewBox=\"0 0 20 21\"\n                                fill=\"none\">\n                                <path\n                                    d=\"M2 20C1.45 20 0.979167 19.8042 0.5875 19.4125C0.195833 19.0208 0 18.55 0 18V4C0 3.45 0.195833 2.97917 0.5875 2.5875C0.979167 2.19583 1.45 2 2 2H3V0H5V2H13V0H15V2H16C16.55 2 17.0208 2.19583 17.4125 2.5875C17.8042 2.97917 18 3.45 18 4V10.375L16 12.375V8H2V18H8.2L10.2 20H2ZM2 6H16V4H2V6ZM13.55 20.5L10 16.95L11.4 15.55L13.525 17.675L17.775 13.425L19.175 14.85L13.55 20.5Z\"\n                                    fill=\"black\" />\n                            </svg>\n                            <p>\n                                <span>Membership Type:</span><span class=\"Camelcase\"> {{user?.subscriptionType}}</span>\n                            </p>\n                        </div>\n                    </div>\n                    <div class=\"col-lg-5 mb-3\">\n                        <div class=\"d-flex align-items-center gap-2\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" viewBox=\"0 0 22 22\"\n                                fill=\"none\">\n                                <mask id=\"mask0_51787_6416\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\"\n                                    y=\"0\" width=\"22\" height=\"22\">\n                                    <rect width=\"22\" height=\"22\" fill=\"#D9D9D9\" />\n                                </mask>\n                                <g mask=\"url(#mask0_51787_6416)\">\n                                    <path\n                                        d=\"M12.5813 19.25L6.41667 12.8333V11H9.625C10.4347 11 11.1337 10.7365 11.7219 10.2094C12.3101 9.68229 12.6653 9.02917 12.7875 8.25H5.5V6.41667H12.5125C12.2528 5.88194 11.867 5.44271 11.3552 5.09896C10.8434 4.75521 10.2667 4.58333 9.625 4.58333H5.5V2.75H16.5V4.58333H13.5208C13.7347 4.84306 13.9257 5.12569 14.0938 5.43125C14.2618 5.73681 14.3917 6.06528 14.4833 6.41667H16.5V8.25H14.6438C14.5215 9.54861 13.9868 10.6372 13.0396 11.5156C12.0924 12.3941 10.9542 12.8333 9.625 12.8333H8.96042L15.125 19.25H12.5813Z\"\n                                        fill=\"#1C1B1F\" />\n                                </g>\n                            </svg>\n                            <p>\n                                <span>Fee Paid: </span>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 48 48\"\n                                    role=\"img\" aria-labelledby=\"checkTitle checkDesc\">\n                                    <title id=\"checkTitle\">Success</title>\n                                    <desc id=\"checkDesc\">Green circle with small white tick</desc>\n\n                                    <!-- Green circle centered properly -->\n                                    <circle cx=\"24\" cy=\"24\" r=\"22\" fill=\"#28a745\" />\n\n                                    <!-- Smaller white tick -->\n                                    <path d=\"M18 24l4 4 10-10\" fill=\"none\" stroke=\"#ffffff\" stroke-width=\"3\"\n                                        stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                                </svg>\n                            </p>\n\n                        </div>\n                    </div>\n                    <div class=\"col-lg-7 mb-3\">\n                        <div class=\"d-flex align-items-center gap-2\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" viewBox=\"0 0 22 22\"\n                                fill=\"none\">\n                                <mask id=\"mask0_51782_6389\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\"\n                                    y=\"0\" width=\"22\" height=\"22\">\n                                    <rect width=\"22\" height=\"22\" fill=\"#D9D9D9\" />\n                                </mask>\n                                <g mask=\"url(#mask0_51782_6389)\">\n                                    <path\n                                        d=\"M1.83325 18.3334V15.7667C1.83325 15.2626 1.96311 14.789 2.22284 14.3459C2.48256 13.9029 2.84159 13.5667 3.29992 13.3376C4.07909 12.9404 4.95756 12.6042 5.93534 12.3292C6.91311 12.0542 7.9902 11.9167 9.16659 11.9167C9.62492 11.9167 10.0718 11.9397 10.5072 11.9855C10.9426 12.0313 11.3666 12.1001 11.7791 12.1917L10.1749 13.7959C10.0069 13.7654 9.84263 13.7501 9.68221 13.7501H9.16659C8.08186 13.7501 7.1079 13.8799 6.24471 14.1397C5.38152 14.3994 4.67492 14.682 4.12492 14.9876C3.98742 15.064 3.87665 15.1709 3.79263 15.3084C3.7086 15.4459 3.66659 15.5987 3.66659 15.7667V16.5001H9.39575L11.2291 18.3334H1.83325ZM14.2541 18.7001L11.0916 15.5376L12.3749 14.2542L14.2541 16.1334L18.8833 11.5042L20.1666 12.7876L14.2541 18.7001ZM9.16659 11.0001C8.15825 11.0001 7.29506 10.6411 6.577 9.923C5.85895 9.20494 5.49992 8.34175 5.49992 7.33341C5.49992 6.32508 5.85895 5.46189 6.577 4.74383C7.29506 4.02578 8.15825 3.66675 9.16659 3.66675C10.1749 3.66675 11.0381 4.02578 11.7562 4.74383C12.4742 5.46189 12.8333 6.32508 12.8333 7.33341C12.8333 8.34175 12.4742 9.20494 11.7562 9.923C11.0381 10.6411 10.1749 11.0001 9.16659 11.0001ZM9.16659 9.16675C9.67075 9.16675 10.1023 8.98723 10.4614 8.62821C10.8204 8.26918 10.9999 7.83758 10.9999 7.33341C10.9999 6.82925 10.8204 6.39765 10.4614 6.03862C10.1023 5.6796 9.67075 5.50008 9.16659 5.50008C8.66242 5.50008 8.23082 5.6796 7.87179 6.03862C7.51277 6.39765 7.33325 6.82925 7.33325 7.33341C7.33325 7.83758 7.51277 8.26918 7.87179 8.62821C8.23082 8.98723 8.66242 9.16675 9.16659 9.16675Z\"\n                                        fill=\"#1C1B1F\" />\n                                </g>\n                            </svg>\n                            <p>\n                                <span>Member Since:</span> {{ user?.memberShipStartedAt | date:'dd MMM yyyy'}}\n                            </p>\n                        </div>\n                    </div>\n                    <div class=\"col-lg-5 mb-3\">\n                        <div class=\"d-flex align-items-center gap-2\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" viewBox=\"0 0 22 22\"\n                                fill=\"none\">\n                                <mask id=\"mask0_51782_6378\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\"\n                                    y=\"0\" width=\"22\" height=\"22\">\n                                    <rect width=\"22\" height=\"22\" fill=\"#D9D9D9\" />\n                                </mask>\n                                <g mask=\"url(#mask0_51782_6378)\">\n                                    <path\n                                        d=\"M9.18958 22.0001C7.92153 22.0001 6.72986 21.7595 5.61458 21.2783C4.49931 20.797 3.52535 20.1401 2.69271 19.3074C1.86007 18.4748 1.20312 17.5008 0.721875 16.3856C0.240625 15.2703 0 14.0863 0 12.8335C0 11.5654 0.240625 10.3738 0.721875 9.25848C1.20312 8.1432 1.86007 7.16924 2.69271 6.3366C3.52535 5.50397 4.49931 4.84702 5.61458 4.36577C6.72986 3.88452 7.92153 3.6439 9.18958 3.6439C9.34236 3.6439 9.49132 3.64772 9.63646 3.65535C9.7816 3.66299 9.93056 3.67445 10.0833 3.68973V5.52306C9.93056 5.50778 9.7816 5.49633 9.63646 5.48869C9.49132 5.48105 9.34236 5.47723 9.18958 5.47723C7.14236 5.47723 5.40451 6.19147 3.97604 7.61994C2.54757 9.04841 1.83333 10.7863 1.83333 12.8335C1.83333 14.8654 2.54757 16.5956 3.97604 18.0241C5.40451 19.4526 7.14236 20.1668 9.18958 20.1668C11.2215 20.1668 12.9517 19.4526 14.3802 18.0241C15.8087 16.5956 16.5229 14.8654 16.5229 12.8335H18.3562C18.3562 14.0863 18.1156 15.2703 17.6344 16.3856C17.1531 17.5008 16.4962 18.4748 15.6635 19.3074C14.8309 20.1401 13.8608 20.797 12.7531 21.2783C11.6455 21.7595 10.4576 22.0001 9.18958 22.0001ZM12.1917 17.1418L8.25 13.2001V8.25015H10.0833V12.4668L13.475 15.8585L12.1917 17.1418ZM20.0292 11.0001C19.6778 8.8307 18.7611 6.94772 17.2792 5.35119C15.7972 3.75466 14.0097 2.68904 11.9167 2.15431V0.275146C14.5292 0.840424 16.7483 2.10084 18.574 4.0564C20.3997 6.01195 21.5035 8.32654 21.8854 11.0001H20.0292ZM16.2937 11.0001C16.0035 9.85431 15.4726 8.84598 14.701 7.97515C13.9295 7.10431 13.0014 6.44737 11.9167 6.00431V4.0564C13.4903 4.54529 14.8424 5.4123 15.9729 6.65744C17.1035 7.90258 17.8368 9.35015 18.1729 11.0001H16.2937Z\"\n                                        fill=\"#1C1B1F\" />\n                                </g>\n                            </svg>\n                            <p *ngIf=\"validTill\">\n                                <span>Valid Till: </span>\n                                <ng-container *ngIf=\"validTill !== 'lifetime'; else lifetimeTpl\">\n                                    {{ validTill | date:'dd MMM yyyy' }}\n                                </ng-container>\n                            </p>\n\n                            <ng-template #lifetimeTpl>\n                                <span>Valid Till:</span> Lifetime\n                            </ng-template>\n\n                        </div>\n                    </div>\n                </div>\n\n                <!-- <div class=\"d-flex justify-content-end gap-2\">\n                    <button class=\"btn btn-donate\">Renew Membership</button>\n                    <button class=\"btn btn-black\">Remind Later</button>\n                </div> -->\n            </div>\n        </div>\n        <div class=\"right-side-modules\">\n            <div class=\"all-post-component\">\n                <div class=\"head d-flex align-items-center justify-content-between\">\n                    <h1>Community Highlights</h1>\n                    <h4 routerLink=\"/community\">View All Posts</h4>\n                </div>\n                <div class=\"community my-4\">\n                    <ng-container *ngIf=\"posts && posts.length > 0\">\n                        <div class=\"mb-5\" *ngFor=\"let post of posts\">\n\n                            <div class=\"d-flex align-items-center mb-2\">\n                                <img *ngIf=\"post?.createdBy?.doptOfficer?.profilePic\"\n                                    [src]=\"post?.createdBy?.doptOfficer?.profilePic\" class=\"rounded-circle me-2\"\n                                    alt=\"User\">\n                                <div>\n                                    <h6 class=\"mb-0 fw-semibold\">{{ post?.createdBy?.doptOfficer?.englishName ||\n                                        'Unknown User'}} <small class=\"text-muted\">{{ post.createdAt | timeAgo\n                                            }}</small></h6>\n                                </div>\n                            </div>\n\n                            <div *ngIf=\"post.mediaFile?.length >0\"\n                                class=\"position-relative imgpostscontainer overflow-auto d-flex gap-2 w-100 pb-2\">\n                                <ng-container *ngFor=\"let file of post.mediaFile\">\n                                    <!-- Check if file is an image -->\n                                    <img *ngIf=\"file.endsWith('.jpg') || file.endsWith('.jpeg') || file.endsWith('.png')\"\n                                        [src]=\"s3Url+file\" class=\"img-fluid rounded\" alt=\"Post Image\">\n\n                                    <!-- Check if file is a video -->\n                                    <video *ngIf=\"file.endsWith('.mp4')\" [src]=\"s3Url+file\" class=\"img-fluid rounded\"\n                                        controls>\n                                    </video>\n                                </ng-container>\n                            </div>\n\n\n                            <!-- Post Text -->\n                            <p class=\"mb-2 overflow-auto\">{{ post.caption }}</p>\n                            <hr class=\"my-1\">\n\n                            <div class=\"like-share-div my-3 z-1 d-flex align-items-center gap-3\">\n                                <div class=\"like-div d-flex align-items-center\">\n                                    <div class=\"like-button overflow-visible\" [class.liked]=\"post?.isLiked\"\n                                        [class.animate]=\"post?.animate\" (click)=\"toggleLike(post)\">\n                                        <!-- Heart Icon -->\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"21\" height=\"19\"\n                                            viewBox=\"0 0 21 19\" fill=\"none\">\n                                            <path\n                                                d=\"M10.293 19L8.84297 17.7C7.15964 16.1834 5.76797 14.875 4.66797 13.775C3.56797 12.675 2.69297 11.6875 2.04297 10.8125C1.39297 9.93752 0.938802 9.13336 0.680469 8.40002C0.422135 7.66669 0.292969 6.91669 0.292969 6.15002C0.292969 4.58336 0.817969 3.27502 1.86797 2.22502C2.91797 1.17502 4.2263 0.650024 5.79297 0.650024C6.65964 0.650024 7.48464 0.833358 8.26797 1.20002C9.0513 1.56669 9.7263 2.08336 10.293 2.75002C10.8596 2.08336 11.5346 1.56669 12.318 1.20002C13.1013 0.833358 13.9263 0.650024 14.793 0.650024C16.3596 0.650024 17.668 1.17502 18.718 2.22502C19.768 3.27502 20.293 4.58336 20.293 6.15002C20.293 6.91669 20.1638 7.66669 19.9055 8.40002C19.6471 9.13336 19.193 9.93752 18.543 10.8125C17.893 11.6875 17.018 12.675 15.918 13.775C14.818 14.875 13.4263 16.1834 11.743 17.7L10.293 19ZM10.293 16.3C11.893 14.8667 13.2096 13.6375 14.243 12.6125C15.2763 11.5875 16.093 10.6959 16.693 9.93752C17.293 9.17919 17.7096 8.50419 17.943 7.91252C18.1763 7.32086 18.293 6.73336 18.293 6.15002C18.293 5.15002 17.9596 4.31669 17.293 3.65002C16.6263 2.98336 15.793 2.65002 14.793 2.65002C14.0096 2.65002 13.2846 2.87086 12.618 3.31252C11.9513 3.75419 11.493 4.31669 11.243 5.00002H9.34297C9.09297 4.31669 8.63464 3.75419 7.96797 3.31252C7.3013 2.87086 6.5763 2.65002 5.79297 2.65002C4.79297 2.65002 3.95964 2.98336 3.29297 3.65002C2.6263 4.31669 2.29297 5.15002 2.29297 6.15002C2.29297 6.73336 2.40964 7.32086 2.64297 7.91252C2.8763 8.50419 3.29297 9.17919 3.89297 9.93752C4.49297 10.6959 5.30964 11.5875 6.34297 12.6125C7.3763 13.6375 8.69297 14.8667 10.293 16.3Z\"\n                                                fill=\"black\" />\n                                        </svg>\n                                    </div>\n                                    {{post?.likes}} Likes\n\n                                </div>\n                                <div class=\"share-div\" (click)=\"copyPostLink(userposts.id)\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"19\" height=\"14\" viewBox=\"0 0 19 14\"\n                                        fill=\"none\">\n                                        <path\n                                            d=\"M2.29297 14V10C2.29297 9.16667 2.58464 8.45833 3.16797 7.875C3.7513 7.29167 4.45964 7 5.29297 7H14.468L10.868 10.6L12.293 12L18.293 6L12.293 0L10.868 1.4L14.468 5H5.29297C3.90964 5 2.73047 5.4875 1.75547 6.4625C0.780468 7.4375 0.292969 8.61667 0.292969 10V14H2.29297Z\"\n                                            fill=\"black\" />\n                                    </svg>Copy Link\n                                </div>\n                            </div>\n                        </div>\n                    </ng-container>\n                    <div *ngIf=\"posts?.length === 0 \" class=\"mb-2\">\n                        <p class=\"mb-2\">No recent posts available.</p>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"offcanvas offcanvas-end\" tabindex=\"-1\" id=\"postFormCanvas\" #offcanvasEl\n    aria-labelledby=\"postFormCanvasLabel\">\n    <div class=\"offcanvas-header\">\n        <h5 id=\"postFormCanvasLabel\">Add Post</h5>\n        <button type=\"button\" class=\"btn-close text-reset\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"></button>\n    </div>\n    <div class=\"offcanvas-body\">\n\n        <form [formGroup]=\"postForm\" (ngSubmit)=\"onSubmit()\" class=\"d-flex flex-column justify-content-between h-100\">\n            <div class=\"inner-fields\">\n\n                <!-- Caption -->\n                <div class=\"mb-3\">\n                    <label class=\"form-label\">Caption<span class=\"text-danger\">*</span></label>\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Enter your title here\"\n                        formControlName=\"caption\">\n                    <small class=\"text-danger\" *ngIf=\"postForm.get('caption')?.errors?.['maxlength']\">\n                        Caption must be less than 100 characters.\n                    </small>\n                </div>\n\n                <!-- Description -->\n                <div class=\"mb-3\">\n                    <label class=\"form-label\">Description</label>\n                    <textarea class=\"form-control\" rows=\"3\" placeholder=\"Enter your description here.\"\n                        formControlName=\"description\"></textarea>\n                </div>\n\n                <!-- Post Tag (Selector) -->\n                <div class=\"mb-3\">\n                    <label class=\"form-label\">Post Tag<span class=\"text-danger\">*</span></label>\n                    <select class=\"form-select\" formControlName=\"postTagId\">\n                        <option value=\"0\" disabled selected>Select tag</option>\n                        <option *ngFor=\"let tag of tagsList\" [value]=\"tag.id\">\n                            {{ tag.name }}\n                        </option>\n                    </select>\n\n                </div>\n\n                <!-- Upload Section -->\n                <div class=\"upload-wrapper\">\n                    <label class=\"form-label\">Upload Media</label>\n                    <label for=\"fileUpload\" class=\"upload-box\">\n                        <div class=\"upload-content\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"49\" height=\"48\" viewBox=\"0 0 49 48\"\n                                fill=\"none\">\n                                <circle cx=\"24.7529\" cy=\"24\" r=\"24\" fill=\"url(#paint0_linear_50912_4491)\"\n                                    fill-opacity=\"0.12\" />\n                                <mask id=\"mask0_50912_4491\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"12\"\n                                    y=\"12\" width=\"25\" height=\"24\">\n                                    <rect x=\"12.7529\" y=\"12\" width=\"24\" height=\"24\" fill=\"#D9D9D9\" />\n                                </mask>\n                                <g mask=\"url(#mask0_50912_4491)\">\n                                    <path\n                                        d=\"M23.7529 31H25.7529V26.825L27.3529 28.425L28.7529 27L24.7529 23L20.7529 27L22.1779 28.4L23.7529 26.825V31ZM18.7529 34C18.2029 34 17.7321 33.8042 17.3404 33.4125C16.9488 33.0208 16.7529 32.55 16.7529 32V16C16.7529 15.45 16.9488 14.9792 17.3404 14.5875C17.7321 14.1958 18.2029 14 18.7529 14H26.7529L32.7529 20V32C32.7529 32.55 32.5571 33.0208 32.1654 33.4125C31.7738 33.8042 31.3029 34 30.7529 34H18.7529ZM25.7529 21V16H18.7529V32H30.7529V21H25.7529Z\"\n                                        fill=\"url(#paint1_linear_50912_4491)\" />\n                                </g>\n                                <defs>\n                                    <linearGradient id=\"paint0_linear_50912_4491\" x1=\"5.25293\" y1=\"-7.2\" x2=\"71.3372\"\n                                        y2=\"48.2327\" gradientUnits=\"userSpaceOnUse\">\n                                        <stop stop-color=\"#492FB2\" />\n                                        <stop offset=\"1\" stop-color=\"#492FB2\" stop-opacity=\"0.61\" />\n                                    </linearGradient>\n                                    <linearGradient id=\"paint1_linear_50912_4491\" x1=\"18.2529\" y1=\"11\" x2=\"44.1283\"\n                                        y2=\"28.3638\" gradientUnits=\"userSpaceOnUse\">\n                                        <stop stop-color=\"#492FB2\" />\n                                        <stop offset=\"1\" stop-color=\"#492FB2\" stop-opacity=\"0.61\" />\n                                    </linearGradient>\n                                </defs>\n                            </svg>\n                            <div class=\"\">\n                                <p class=\"m-0\">Click to upload</p>\n                                <small class=\"text-muted\">Max size: 256MB each</small>\n                            </div>\n                        </div>\n                        <input type=\"file\" id=\"fileUpload\" hidden (change)=\"onFileSelected($event)\"\n                            accept=\"image/*,video/*\" [disabled]=\"mediaupload\" />\n                    </label>\n\n                    <div *ngIf=\"previewUrls.length > 0 && !mediaupload\" class=\"preview-box mt-3 d-flex flex-wrap gap-3\">\n                        <ng-container *ngFor=\"let preview of previewUrls; let i = index\">\n                            <div class=\"position-relative\">\n                                <img *ngIf=\"selectedFiles[i].type.startsWith('image/')\" [src]=\"preview\"\n                                    class=\"img-thumbnail\" style=\"width: 120px; height: auto;\" />\n\n                                <video *ngIf=\"selectedFiles[i].type.startsWith('video/')\" [src]=\"preview\" controls\n                                    class=\"img-thumbnail\" style=\"width: 200px; height: auto;\"></video>\n\n                                <!-- Progress -->\n                                <div *ngIf=\"uploadProgress[i] >= 0\">\n                                    <small>Progress: {{ uploadProgress[i] }}%</small>\n                                </div>\n\n                                <!-- Remove button -->\n                                <button type=\"button\" class=\"btn btn-sm btn-danger position-absolute top-0 end-0\"\n                                    (click)=\"removeFile(i)\">\n                                    ✕\n                                </button>\n                            </div>\n                        </ng-container>\n                    </div>\n                    <div *ngIf=\"mediaupload\" class=\"mt-4\">\n                        <div class=\"progress\" style=\"height: 6px;\">\n                            <div class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\"\n                                role=\"progressbar\" style=\"width: 100%\">\n                            </div>\n                        </div>\n                        <small>Uploading media...</small>\n                    </div>\n\n\n\n                </div>\n\n            </div>\n\n            <!-- Buttons -->\n            <div class=\"d-flex justify-content-end gap-3 mt-3\">\n                <button type=\"button\" class=\"btn btn-outline-secondary\" data-bs-dismiss=\"offcanvas\">Back</button>\n                <button type=\"submit\" class=\"btn btn-prime\" [disabled]=\"this.postForm.invalid\">Submit</button>\n            </div>\n        </form>\n    </div>\n</div>"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACgBgB,IAAA,kCAAA,CAAA;AACI,IAAA,oBAAA,GAAA,OAAA,EAAA;;;;;AAAK,IAAA,oBAAA;AAAA,IAAA,qBAAA,OAAA,OAAA,KAAA,eAAA,OAAA,OAAA,OAAA,KAAA,YAAA,YAAA,uBAAA;;;;;AAGL,IAAA,iBAAA,CAAA;;;;AAAA,IAAA,6BAAA,KAAA,OAAA,YAAA,OAAA,IAAA,GAAA,GAAA;;;;;AAMZ,IAAA,yBAAA,GAAA,OAAA,EAAA;AACI,IAAA,iBAAA,GAAA,4BAAA;AACJ,IAAA,uBAAA;;;;;AAfJ,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAyE,GAAA,OAAA,EAAA;AAEjE,IAAA,kCAAA,CAAA;AACI,IAAA,qBAAA,GAAA,iDAAA,GAAA,GAAA,gBAAA,EAAA,EAAuE,GAAA,gDAAA,GAAA,GAAA,eAAA,MAAA,GAAA,gCAAA;;AAO/E,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAwB,IAAA,iBAAA,CAAA;AAAsC,IAAA,uBAAA;AAE9D,IAAA,qBAAA,GAAA,wCAAA,GAAA,GAAA,OAAA,EAAA;AAGJ,IAAA,uBAAA;;;;;AAb2B,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,KAAA,eAAA,OAAA,OAAA,OAAA,KAAA,YAAA,UAAA,EAAoC,YAAA,gBAAA;AAQnC,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,QAAA,OAAA,KAAA,eAAA,OAAA,OAAA,OAAA,KAAA,YAAA,aAAA,GAAA;AAElB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,eAAA;;;;;AAkCc,IAAA,oBAAA,GAAA,OAAA,EAAA;;;;;AACI,IAAA,qBAAA,OAAA,OAAA,QAAA,SAAA,uBAAA;;;;;AAGJ,IAAA,oBAAA,GAAA,SAAA,EAAA;;;;;AAAqC,IAAA,qBAAA,OAAA,OAAA,QAAA,SAAA,uBAAA;;;;;AANzC,IAAA,kCAAA,CAAA;AAEI,IAAA,qBAAA,GAAA,8DAAA,GAAA,GAAA,OAAA,EAAA,EACkE,GAAA,gEAAA,GAAA,GAAA,SAAA,EAAA;;;;;AAD5D,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,QAAA,SAAA,MAAA,KAAA,QAAA,SAAA,OAAA,KAAA,QAAA,SAAA,MAAA,CAAA;AAIE,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,QAAA,SAAA,MAAA,CAAA;;;;;AARhB,IAAA,yBAAA,GAAA,OAAA,EAAA;AAEI,IAAA,qBAAA,GAAA,wDAAA,GAAA,GAAA,gBAAA,EAAA;AASJ,IAAA,uBAAA;;;;AATmC,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,UAAA,SAAA;;;;;;AAVvC,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAmD,GAAA,OAAA,EAAA,EACH,GAAA,KAAA,EACnC,GAAA,SAAA,EAAA;AACyB,IAAA,iBAAA,CAAA;;AAAoC,IAAA,uBAAA,EAAQ,EACpE;AAIV,IAAA,qBAAA,GAAA,yCAAA,GAAA,GAAA,OAAA,EAAA;AAeA,IAAA,yBAAA,GAAA,KAAA,EAAA;AAAgB,IAAA,iBAAA,CAAA;AAAwB,IAAA,uBAAA;AACxC,IAAA,oBAAA,GAAA,MAAA,EAAA;AAEA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAqE,IAAA,OAAA,EAAA,EACjB,IAAA,OAAA,EAAA;AAEH,IAAA,qBAAA,SAAA,SAAA,0DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,WAAA,OAAA,SAAA,CAAqB;IAAA,CAAA;;AAEnE,IAAA,yBAAA,IAAA,OAAA,EAAA;AAEI,IAAA,oBAAA,IAAA,QAAA,EAAA;AAGJ,IAAA,uBAAA,EAAM;;AAEV,IAAA,yBAAA,IAAA,QAAA,EAAA;AAAyB,IAAA,iBAAA,EAAA;AAA4B,IAAA,uBAAA,EAAO;AAGhE,IAAA,yBAAA,IAAA,OAAA,EAAA;AAAuB,IAAA,qBAAA,SAAA,SAAA,0DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,aAAA,OAAA,UAAA,EAAA,CAA0B;IAAA,CAAA;;AACtD,IAAA,yBAAA,IAAA,OAAA,EAAA;AAEI,IAAA,oBAAA,IAAA,QAAA,EAAA;AAGJ,IAAA,uBAAA;AAAM,IAAA,iBAAA,IAAA,YAAA;AACV,IAAA,uBAAA,EAAM,EACJ;;;;AA9C4B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,sBAAA,GAAA,GAAA,OAAA,aAAA,OAAA,OAAA,OAAA,UAAA,SAAA,CAAA;AAK5B,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,aAAA,OAAA,OAAA,OAAA,UAAA,aAAA,OAAA,OAAA,OAAA,UAAA,UAAA,UAAA,CAAA;AAeU,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,OAAA,OAAA,OAAA,UAAA,OAAA;AAKkC,IAAA,oBAAA,CAAA;AAAA,IAAA,sBAAA,SAAA,OAAA,aAAA,OAAA,OAAA,OAAA,UAAA,OAAA,EAAkC,WAAA,OAAA,aAAA,OAAA,OAAA,OAAA,UAAA,OAAA;AAUnD,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,aAAA,OAAA,OAAA,OAAA,UAAA,OAAA,QAAA;;;;;AAarC,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA8C,GAAA,KAAA,EAAA;AAC1B,IAAA,iBAAA,GAAA,4BAAA;AAA0B,IAAA,uBAAA,EAAI;;;;;;AAkC9C,IAAA,yBAAA,GAAA,UAAA,GAAA;AACI,IAAA,qBAAA,SAAA,SAAA,sEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,WAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAA,SAAA,OAAsB,OAAA,UAAA,SAAA,GAAA,CAAoB;IAAA,CAAA;AAAE,IAAA,iBAAA,GAAA,mBAAA;AAAiB,IAAA,uBAAA;;;;;AA3BrE,IAAA,yBAAA,GAAA,OAAA,EAAA,EAC8E,GAAA,OAAA,EAAA,EAGe,GAAA,OAAA,EAAA;AAClE,IAAA,iBAAA,CAAA;;AAA4B,IAAA,uBAAA;AAC/C,IAAA,yBAAA,GAAA,OAAA,EAAA;AAAiB,IAAA,iBAAA,CAAA;;AAA6B,IAAA,uBAAA,EAAM;AAGxD,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAyB,GAAA,MAAA,GAAA;AACJ,IAAA,iBAAA,EAAA;AAAiB,IAAA,uBAAA;AAClC,IAAA,yBAAA,IAAA,KAAA,GAAA;;AACI,IAAA,yBAAA,IAAA,OAAA,GAAA,EACgB,IAAA,QAAA,GAAA;AAGR,IAAA,oBAAA,IAAA,QAAA,GAAA;AACJ,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,KAAA,GAAA;AACI,IAAA,oBAAA,IAAA,QAAA,GAAA;AAGJ,IAAA,uBAAA,EAAI;AACD,IAAA,iBAAA,EAAA;AACX,IAAA,uBAAA,EAAI;AAER,IAAA,qBAAA,IAAA,6CAAA,GAAA,GAAA,UAAA,GAAA;AAEJ,IAAA,uBAAA;;;;;AAxB2C,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,MAAA,IAAA,cAAA,SAAA;AAChB,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,sBAAA,GAAA,GAAA,SAAA,MAAA,KAAA,CAAA;AACF,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,sBAAA,GAAA,GAAA,SAAA,MAAA,IAAA,CAAA;AAIA,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,SAAA,KAAA;AAaN,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,SAAA,UAAA,GAAA;AAGqB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,SAAA,GAAA;;;;;AAOxB,IAAA,kCAAA,CAAA;AACI,IAAA,iBAAA,CAAA;;;;;;AAAA,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,sBAAA,GAAA,GAAA,OAAA,WAAA,aAAA,GAAA,GAAA;;;;;AAHkC,IAAA,yBAAA,GAAA,GAAA,EAAqB,GAAA,MAAA;AACrD,IAAA,iBAAA,GAAA,cAAA;AAAY,IAAA,uBAAA;AAClB,IAAA,qBAAA,GAAA,sDAAA,GAAA,GAAA,gBAAA,EAAA;AAGJ,IAAA,uBAAA;;;;;;AAHmB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,cAAA,UAAA,EAAgC,YAAA,cAAA;;;;;AAsF/C,IAAA,kCAAA,CAAA;AACI,IAAA,iBAAA,CAAA;;;;;;AAAA,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,sBAAA,GAAA,GAAA,OAAA,WAAA,aAAA,GAAA,GAAA;;;;;AAHR,IAAA,yBAAA,GAAA,GAAA,EAAqB,GAAA,MAAA;AACX,IAAA,iBAAA,GAAA,cAAA;AAAY,IAAA,uBAAA;AAClB,IAAA,qBAAA,GAAA,uDAAA,GAAA,GAAA,gBAAA,EAAA;AAGJ,IAAA,uBAAA;;;;;;AAHmB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,cAAA,UAAA,EAAgC,YAAA,cAAA;;;;;AAM/C,IAAA,yBAAA,GAAA,MAAA;AAAM,IAAA,iBAAA,GAAA,aAAA;AAAW,IAAA,uBAAA;AAAQ,IAAA,iBAAA,GAAA,YAAA;;;;;AA/F7C,IAAA,yBAAA,GAAA,OAAA,GAAA,EAAkE,GAAA,IAAA;AAC1D,IAAA,iBAAA,GAAA,yBAAA;AAAuB,IAAA,yBAAA,GAAA,QAAA,EAAA;AAA2B,IAAA,qBAAA,GAAA,uCAAA,GAAA,GAAA,KAAA,EAAA;AAKtC,IAAA,uBAAA,EAAO;AACvB,IAAA,oBAAA,GAAA,IAAA;AACA,IAAA,yBAAA,GAAA,OAAA,GAAA,EAAiC,GAAA,OAAA,GAAA,EACF,GAAA,OAAA,GAAA;;AAEnB,IAAA,yBAAA,GAAA,OAAA,GAAA;AAEI,IAAA,oBAAA,IAAA,QAAA,GAAA;AAGJ,IAAA,uBAAA;;AACA,IAAA,yBAAA,IAAA,GAAA,EAAG,IAAA,MAAA;AACO,IAAA,iBAAA,IAAA,kBAAA;AAAgB,IAAA,uBAAA;AAAO,IAAA,yBAAA,IAAA,QAAA,GAAA;AAAyB,IAAA,iBAAA,EAAA;AAA0B,IAAA,uBAAA,EAAO,EACvF,EACF;AAEV,IAAA,yBAAA,IAAA,OAAA,GAAA,EAA2B,IAAA,OAAA,GAAA;;AAEnB,IAAA,yBAAA,IAAA,OAAA,GAAA,EACgB,IAAA,QAAA,GAAA;AAGR,IAAA,oBAAA,IAAA,QAAA,GAAA;AACJ,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,KAAA,GAAA;AACI,IAAA,oBAAA,IAAA,QAAA,GAAA;AAGJ,IAAA,uBAAA,EAAI;;AAER,IAAA,yBAAA,IAAA,GAAA,EAAG,IAAA,MAAA;AACO,IAAA,iBAAA,IAAA,YAAA;AAAU,IAAA,uBAAA;;AAChB,IAAA,yBAAA,IAAA,OAAA,GAAA,EACsD,IAAA,SAAA,GAAA;AAC3B,IAAA,iBAAA,IAAA,SAAA;AAAO,IAAA,uBAAA;AAC9B,IAAA,yBAAA,IAAA,QAAA,GAAA;AAAqB,IAAA,iBAAA,IAAA,oCAAA;AAAkC,IAAA,uBAAA;AAGvD,IAAA,oBAAA,IAAA,UAAA,GAAA,EAAgD,IAAA,QAAA,GAAA;AAKpD,IAAA,uBAAA,EAAM,EACN,EAEF;;AAEV,IAAA,yBAAA,IAAA,OAAA,GAAA,EAA2B,IAAA,OAAA,GAAA;;AAEnB,IAAA,yBAAA,IAAA,OAAA,GAAA,EACgB,IAAA,QAAA,GAAA;AAGR,IAAA,oBAAA,IAAA,QAAA,GAAA;AACJ,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,KAAA,GAAA;AACI,IAAA,oBAAA,IAAA,QAAA,GAAA;AAGJ,IAAA,uBAAA,EAAI;;AAER,IAAA,yBAAA,IAAA,GAAA,EAAG,IAAA,MAAA;AACO,IAAA,iBAAA,IAAA,eAAA;AAAa,IAAA,uBAAA;AAAQ,IAAA,iBAAA,EAAA;;AAC/B,IAAA,uBAAA,EAAI,EACF;AAEV,IAAA,yBAAA,IAAA,OAAA,GAAA,EAA2B,IAAA,OAAA,GAAA;;AAEnB,IAAA,yBAAA,IAAA,OAAA,GAAA,EACgB,IAAA,QAAA,GAAA;AAGR,IAAA,oBAAA,IAAA,QAAA,GAAA;AACJ,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,KAAA,GAAA;AACI,IAAA,oBAAA,IAAA,QAAA,GAAA;AAGJ,IAAA,uBAAA,EAAI;AAER,IAAA,qBAAA,IAAA,wCAAA,GAAA,GAAA,KAAA,EAAA,EAAqB,IAAA,kDAAA,GAAA,GAAA,eAAA,MAAA,GAAA,gCAAA;AAWzB,IAAA,uBAAA,EAAM,EACJ,EACJ;;;;AAnGoD,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,SAAA;AAiBY,IAAA,oBAAA,EAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,QAAA,OAAA,OAAA,OAAA,KAAA,kBAAA,EAAA;AAmD3B,IAAA,oBAAA,EAAA;AAAA,IAAA,6BAAA,KAAA,sBAAA,IAAA,GAAA,OAAA,QAAA,OAAA,OAAA,OAAA,KAAA,qBAAA,aAAA,GAAA,GAAA;AAkB3B,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,SAAA;;;;;AAgCA,IAAA,oBAAA,GAAA,OAAA,GAAA;;;;AACI,IAAA,qBAAA,OAAA,YAAA,OAAA,OAAA,SAAA,aAAA,OAAA,OAAA,SAAA,UAAA,eAAA,OAAA,OAAA,SAAA,UAAA,YAAA,YAAA,uBAAA;;;;;AAaA,IAAA,oBAAA,GAAA,OAAA,EAAA;;;;;AACI,IAAA,qBAAA,OAAA,OAAA,QAAA,UAAA,uBAAA;;;;;AAGJ,IAAA,oBAAA,GAAA,SAAA,EAAA;;;;;AAAqC,IAAA,qBAAA,OAAA,OAAA,QAAA,UAAA,uBAAA;;;;;AANzC,IAAA,kCAAA,CAAA;AAEI,IAAA,qBAAA,GAAA,6EAAA,GAAA,GAAA,OAAA,EAAA,EACkE,GAAA,+EAAA,GAAA,GAAA,SAAA,EAAA;;;;;AAD5D,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,SAAA,SAAA,MAAA,KAAA,SAAA,SAAA,OAAA,KAAA,SAAA,SAAA,MAAA,CAAA;AAIE,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,SAAA,SAAA,MAAA,CAAA;;;;;AARhB,IAAA,yBAAA,GAAA,OAAA,GAAA;AAEI,IAAA,qBAAA,GAAA,uEAAA,GAAA,GAAA,gBAAA,EAAA;AAUJ,IAAA,uBAAA;;;;AAVmC,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,SAAA,SAAA;;;;;;AAfvC,IAAA,yBAAA,GAAA,OAAA,GAAA,EAA6C,GAAA,OAAA,EAAA;AAGrC,IAAA,qBAAA,GAAA,wDAAA,GAAA,GAAA,OAAA,GAAA;AAGA,IAAA,yBAAA,GAAA,KAAA,EAAK,GAAA,MAAA,GAAA;AAC4B,IAAA,iBAAA,CAAA;AACR,IAAA,yBAAA,GAAA,SAAA,EAAA;AAA0B,IAAA,iBAAA,CAAA;;AACrC,IAAA,uBAAA,EAAQ,EAAK,EACrB;AAGV,IAAA,qBAAA,GAAA,wDAAA,GAAA,GAAA,OAAA,GAAA;AAgBA,IAAA,yBAAA,IAAA,KAAA,GAAA;AAA8B,IAAA,iBAAA,EAAA;AAAkB,IAAA,uBAAA;AAChD,IAAA,oBAAA,IAAA,MAAA,EAAA;AAEA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAqE,IAAA,OAAA,EAAA,EACjB,IAAA,OAAA,EAAA;AAER,IAAA,qBAAA,SAAA,SAAA,yEAAA;AAAA,YAAA,WAAA,wBAAA,IAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,WAAA,QAAA,CAAgB;IAAA,CAAA;;AAEzD,IAAA,yBAAA,IAAA,OAAA,EAAA;AAEI,IAAA,oBAAA,IAAA,QAAA,EAAA;AAGJ,IAAA,uBAAA,EAAM;AAEV,IAAA,iBAAA,EAAA;AAEJ,IAAA,uBAAA;;AACA,IAAA,yBAAA,IAAA,OAAA,EAAA;AAAuB,IAAA,qBAAA,SAAA,SAAA,yEAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,aAAA,OAAA,UAAA,EAAA,CAA0B;IAAA,CAAA;;AACtD,IAAA,yBAAA,IAAA,OAAA,EAAA;AAEI,IAAA,oBAAA,IAAA,QAAA,EAAA;AAGJ,IAAA,uBAAA;AAAM,IAAA,iBAAA,IAAA,YAAA;AACV,IAAA,uBAAA,EAAM,EACJ;;;;AApDI,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,YAAA,OAAA,OAAA,SAAA,aAAA,OAAA,OAAA,SAAA,UAAA,eAAA,OAAA,OAAA,SAAA,UAAA,YAAA,UAAA;AAI2B,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,YAAA,OAAA,OAAA,SAAA,aAAA,OAAA,OAAA,SAAA,UAAA,eAAA,OAAA,OAAA,SAAA,UAAA,YAAA,gBAAA,gBAAA,GAAA;AACkB,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,sBAAA,GAAA,IAAA,SAAA,SAAA,CAAA;AAKjD,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,SAAA,SAAA,aAAA,OAAA,OAAA,SAAA,UAAA,UAAA,CAAA;AAgBwB,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,SAAA,OAAA;AAKoB,IAAA,oBAAA,CAAA;AAAA,IAAA,sBAAA,SAAA,YAAA,OAAA,OAAA,SAAA,OAAA,EAA6B,WAAA,YAAA,OAAA,OAAA,SAAA,OAAA;AAUvE,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,YAAA,OAAA,OAAA,SAAA,OAAA,SAAA;;;;;AA7ChB,IAAA,kCAAA,CAAA;AACI,IAAA,qBAAA,GAAA,kDAAA,IAAA,IAAA,OAAA,GAAA;;;;;AAAmC,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,KAAA;;;;;AA0DvC,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA+C,GAAA,KAAA,EAAA;AAC3B,IAAA,iBAAA,GAAA,4BAAA;AAA0B,IAAA,uBAAA,EAAI;;;;;AAyBlD,IAAA,yBAAA,GAAA,SAAA,EAAA;AACI,IAAA,iBAAA,GAAA,6CAAA;AACJ,IAAA,uBAAA;;;;;AAeI,IAAA,yBAAA,GAAA,UAAA,GAAA;AACI,IAAA,iBAAA,CAAA;AACJ,IAAA,uBAAA;;;;AAFqC,IAAA,qBAAA,SAAA,QAAA,EAAA;AACjC,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,QAAA,MAAA,GAAA;;;;;AAiDI,IAAA,oBAAA,GAAA,OAAA,GAAA;;;;AAAwD,IAAA,qBAAA,OAAA,aAAA,uBAAA;;;;;AAGxD,IAAA,oBAAA,GAAA,SAAA,GAAA;;;;AAA0D,IAAA,qBAAA,OAAA,aAAA,uBAAA;;;;;AAI1D,IAAA,yBAAA,GAAA,KAAA,EAAoC,GAAA,OAAA;AACzB,IAAA,iBAAA,CAAA;AAAkC,IAAA,uBAAA,EAAQ;;;;;AAA1C,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,cAAA,OAAA,eAAA,KAAA,GAAA,GAAA;;;;;;AAVnB,IAAA,kCAAA,CAAA;AACI,IAAA,yBAAA,GAAA,OAAA,GAAA;AACI,IAAA,qBAAA,GAAA,wDAAA,GAAA,GAAA,OAAA,GAAA,EACgE,GAAA,0DAAA,GAAA,GAAA,SAAA,GAAA,EAGF,GAAA,wDAAA,GAAA,GAAA,OAAA,EAAA;AAQ9D,IAAA,yBAAA,GAAA,UAAA,GAAA;AACI,IAAA,qBAAA,SAAA,SAAA,2EAAA;AAAA,YAAA,QAAA,wBAAA,IAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,WAAA,KAAA,CAAa;IAAA,CAAA;AACtB,IAAA,iBAAA,GAAA,UAAA;AACJ,IAAA,uBAAA,EAAS;;;;;;AAfH,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,cAAA,KAAA,EAAA,KAAA,WAAA,QAAA,CAAA;AAGE,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,cAAA,KAAA,EAAA,KAAA,WAAA,QAAA,CAAA;AAIF,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,eAAA,KAAA,KAAA,CAAA;;;;;AAVlB,IAAA,yBAAA,GAAA,OAAA,GAAA;AACI,IAAA,qBAAA,GAAA,kDAAA,GAAA,GAAA,gBAAA,EAAA;AAoBJ,IAAA,uBAAA;;;;AApBsC,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,WAAA;;;;;AAqBtC,IAAA,yBAAA,GAAA,OAAA,GAAA,EAAsC,GAAA,OAAA,GAAA;AAE9B,IAAA,oBAAA,GAAA,OAAA,GAAA;AAGJ,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,OAAA;AAAO,IAAA,iBAAA,GAAA,oBAAA;AAAkB,IAAA,uBAAA,EAAQ;;;AD3ZnD,IAAO,oBAAP,MAAO,mBAAiB;EAU5B,WAAW,MAAS;AAClB,QAAI,CAAC;AAAM;AAGX,SAAK,UAAU;AAGf,UAAM,YAAY,KAAK;AACvB,SAAK,UAAU,CAAC;AAChB,SAAK,SAAS,KAAK,UAAU,IAAI;AAGjC,SAAK,KAAK,KAAU,GAAG,YAAY,MAAM,sBAAsB,EAAE,aAAa,KAAK,GAAE,CAAE,EACpF,UAAU;MACT,MAAM,CAAC,QAAO;AACZ,gBAAQ,IAAI,qBAAqB,GAAG;AACpC,YAAI,KAAK,MAAM,IAAI;AACjB,eAAK,qBAAqB,KAAK,KAAK,EAAE;QACxC;AACA,aAAK,eAAc;MAErB;MACA,OAAO,CAAC,QAAO;AACb,gBAAQ,MAAM,uBAAuB,GAAG;AAExC,aAAK,UAAU;AACf,aAAK,SAAS,KAAK,UAAU,IAAI;MACnC;KACD;AAGH,eAAW,MAAK;AAAG,WAAK,UAAU;IAAO,GAAG,GAAG;EACjD;EAgBA,WAAQ;AACN,SAAK,YAAY,QAAO,EAAG,UAAU,UAAO;AAC1C,WAAK,OAAO;AACZ,cAAQ,IAAI,gBAAgB,KAAK,IAAI;AACrC,WAAK,kBAAkB,MAAM,mBAAmB;AAChD,UAAI,KAAK,MAAM,qBAAqB,YAAY,KAAK,MAAM,qBAAqB;AAC9E,cAAM,QAAQ,IAAI,KAAK,KAAK,KAAK,mBAAmB;AACpD,cAAM,SAAS,IAAI,KAAK,KAAK;AAC7B,eAAO,YAAY,MAAM,YAAW,IAAK,CAAC;AAC1C,aAAK,YAAY,OAAO,YAAW;MACrC,WAAW,KAAK,MAAM,qBAAqB,YAAY;AACrD,aAAK,YAAY;MACnB,OAAO;AACL,aAAK,YAAY;MACnB;AAEA,UAAI,KAAK,MAAM,IAAI;AACjB,aAAK,qBAAqB,KAAK,KAAK,EAAE;MACxC;IACF,CAAC;AACD,SAAK,WAAU;AACf,SAAK,SAAQ;AACb,SAAK,eAAc;EAgBrB;EACA,cAAW;AACT,QAAI,KAAK;AAAQ,WAAK,OAAO,WAAU;EACzC;EACA,qBAAkB;AAChB,UAAM,OAAO,SAAS,cAAc,oBAAoB;AACxD,UAAM,QAAQ,SAAS,cAAc,qBAAqB;AAE1D,QAAI,QAAQ,OAAO;AACjB,YAAM,MAAM,SAAS,KAAK,eAAe;AACzC,YAAM,MAAM,YAAY;IAC1B;EACF;EAIA,YAAoB,aAAkC,MAA0B,IAAyB,cAA0B;AAA/G,SAAA,cAAA;AAAkC,SAAA,OAAA;AAA0B,SAAA,KAAA;AAAyB,SAAA,eAAA;AA9GzG,SAAA,QAAQ;AACR,SAAA,eAAyB,CAAA;AACzB,SAAA,cAA+C,CAAA;AAC/C,SAAA,gBAAwB,CAAA;AAExB,SAAA,YAAoB;AACpB,SAAA,cAAuB;AAqCvB,SAAA,OAAmB;AACnB,SAAA,kBAA2B;AAC3B,SAAA,eAAuB;AACvB,SAAA,aAAoB,CAAA;AACpB,SAAA,WAAkB,CAAA;AAClB,SAAA,iBAA2B,CAAA;AAE3B,SAAA,WAAmB,KAAK,IAAG,EAAG,SAAQ;AACtC,SAAA,QAAe,CAAA;AACf,SAAA,YAAiB;AACjB,SAAA,QAAQ,YAAY;AA2DlB,SAAK,WAAW,KAAK,GAAG,MAAM;MAC5B,SAAS,CAAC,IAAI,CAAC,WAAW,UAAU,WAAW,UAAU,GAAG,CAAC,CAAC;MAC9D,aAAa,CAAC,EAAE;MAChB,WAAW,CAAC,GAAG,CAAC,WAAW,UAAU,KAAK,gBAAgB,CAAC;MAC3D,WAAW,CAAC,CAAA,CAAE;KACf;EAEH;EACA,iBAAiB,SAAY;AAC3B,WAAO,QAAQ,SAAS,QAAQ,UAAU,IAAI,OAAO,EAAE,SAAS,KAAI;EACtE;EACA,aAAU;AACR,UAAM,QAAQ,aAAa,QAAQ,WAAW;AAC9C,YAAQ,IAAI,KAAK;AAEjB,UAAM,UAAU,IAAI,YAAY;MAC9B,iBAAiB,UAAU,KAAK;MAChC,gBAAgB;KACjB;AAED,SAAK,KAAK,IAAS,GAAG,YAAY,MAAM,iCAAiC,EAAE,QAAO,CAAE,EACjF,UAAU;MACT,MAAM,CAAC,QAAO;AACZ,gBAAQ,IAAI,GAAG;AACf,aAAK,aAAa,IAAI,KAAK;AAC3B,gBAAQ,IAAI,KAAK,UAAU;MAC7B;MACA,OAAO,CAAC,QAAO;AACb,gBAAQ,MAAM,0BAA0B,GAAG;MAC7C;KACD;EACL;EACA,WAAQ;AACN,UAAM,QAAQ,aAAa,QAAQ,WAAW;AAC9C,UAAM,UAAU,IAAI,YAAY;MAC9B,iBAAiB,UAAU,KAAK;MAChC,gBAAgB;KACjB;AAED,SAAK,KAAK,IAAS,GAAG,YAAY,MAAM,sBAAsB,EAAE,QAAO,CAAE,EACtE,UAAU;MACT,MAAM,CAAC,QAAO;AACZ,gBAAQ,IAAI,GAAG;AACf,aAAK,WAAW,IAAI,KAAK;AACzB,gBAAQ,IAAI,KAAK,QAAQ;MAC3B;MACA,OAAO,CAAC,QAAO;AACb,gBAAQ,MAAM,0BAA0B,GAAG;MAC7C;KACD;EACL;EACA,aAAa,QAAc;AACzB,UAAM,MAAM,GAAG,OAAO,SAAS,MAAM,YAAY,MAAM;AAEvD,cAAU,UAAU,UAAU,GAAG,EAAE,KAAK,MAAK;AAC3C,WAAK,aAAa,UAAU,mCAA8B,SAAS;IACrE,CAAC,EAAE,MAAM,SAAM;AACb,cAAQ,MAAM,yBAAyB,GAAG;IAC5C,CAAC;EACH;EACA,iBAAc;AACZ,UAAM,QAAQ,aAAa,QAAQ,WAAW;AAC9C,UAAM,UAAU,IAAI,YAAY;MAC9B,iBAAiB,UAAU,KAAK;KACjC;AAED,SAAK,KAAK,IAAS,GAAG,YAAY,MAAM,kDAAkD,EAAE,QAAO,CAAE,EAClG,UAAU;MACT,MAAM,CAAC,QAAO;AACZ,gBAAQ,IAAI,GAAG;AACf,aAAK,QAAQ,IAAI,KAAK;AACtB,gBAAQ,IAAI,aAAa,KAAK,KAAK;MACrC;MACA,OAAO,CAAC,QAAO;AACb,gBAAQ,MAAM,yBAAyB,GAAG;MAC5C;KACD;EACL;EACA,qBAAqB,IAAsB;AACzC,UAAM,QAAQ,aAAa,QAAQ,WAAW;AAC9C,UAAM,UAAU,IAAI,YAAY;MAC9B,iBAAiB,UAAU,KAAK;KACjC;AACD,YAAQ,IAAI,MAAM,EAAE;AAEpB,SAAK,KAAK,IAAS,GAAG,YAAY,MAAM,oEAAoE,EAAE,YAAY,EAAE,QAAO,CAAE,EAClI,UAAU;MACT,MAAM,CAAC,QAAO;AACZ,gBAAQ,IAAI,GAAG;AACf,aAAK,YAAY,IAAI,KAAK,KAAK,CAAC;AAChC,gBAAQ,IAAI,gBAAgB,KAAK,SAAS;MAC5C;MACA,OAAO,CAAC,QAAO;AACb,gBAAQ,MAAM,yBAAyB,GAAG;MAC5C;KACD;EACL;EAEA,YAAY,MAAiB;AAC3B,QAAI,CAAC,MAAM,aAAa;AAAa,aAAO;AAG5C,UAAM,aAAa,CAAC,QAAQ,MAAM,OAAO,MAAM,MAAM,QAAQ,KAAK;AAGlE,UAAM,QAAQ,KAAK,YAAY,YAC5B,KAAI,EACJ,MAAM,KAAK,EACX,OAAO,CAAC,MAAc,CAAC,WAAW,SAAS,EAAE,YAAW,CAAE,CAAC;AAE9D,QAAI,MAAM,WAAW;AAAG,aAAO;AAE/B,QAAI,WAAW;AAEf,QAAI,MAAM,WAAW,GAAG;AAEtB,iBAAW,MAAM,CAAC,EAAE,UAAU,GAAG,CAAC,EAAE,YAAW;IACjD,OAAO;AAEL,iBAAW,MAAM,CAAC,EAAE,CAAC,EAAE,YAAW,IAAK,MAAM,MAAM,SAAS,CAAC,EAAE,CAAC,EAAE,YAAW;IAC/E;AAEA,WAAO;EACT;EAEA,eAAe,OAAY;AACzB,UAAM,QAAQ,MAAM;AACpB,UAAM,QAAQ,MAAM;AACpB,QAAI,CAAC,SAAS,MAAM,WAAW;AAAG;AAElC,UAAM,KAAK,KAAK,EAAE,QAAQ,UAAO;AAE/B,UAAI,EAAE,KAAK,KAAK,WAAW,QAAQ,KAAK,KAAK,KAAK,WAAW,QAAQ,IAAI;AACvE,aAAK,aAAa,UAChB,wCACA,QAAQ;AAEV;MACF;AAGA,UAAI,KAAK,OAAO,MAAM,OAAO,MAAM;AACjC,aAAK,aAAa,UAChB,IAAI,KAAK,IAAI,sCACb,QAAQ;AAEV;MACF;AAGA,UAAI,KAAK,cAAc,KAAK,OAAK,EAAE,SAAS,KAAK,QAAQ,EAAE,SAAS,KAAK,IAAI,GAAG;AAC9E,aAAK,aAAa,UAChB,IAAI,KAAK,IAAI,0BACb,SAAS;AAEX;MACF;AAGA,WAAK,cAAc,KAAK,IAAI;AAG5B,YAAM,SAAS,IAAI,WAAU;AAC7B,aAAO,SAAS,MAAK;AACnB,aAAK,YAAY,KAAK,OAAO,MAAgB;MAC/C;AACA,aAAO,cAAc,IAAI;AAGzB,WAAK,WAAW,IAAI;IACtB,CAAC;AAGD,UAAM,QAAQ;EAChB;EAIA,WAAW,OAAa;AACtB,SAAK,cAAc,OAAO,OAAO,CAAC;AAClC,SAAK,YAAY,OAAO,OAAO,CAAC;AAChC,SAAK,eAAe,OAAO,OAAO,CAAC;AAInC,SAAK,aAAa,OAAO,OAAO,CAAC;AAEjC,SAAK,SAAS,WAAW,EAAE,WAAW,CAAC,GAAG,KAAK,YAAY,EAAC,CAAE;EAChE;EAEA,WAAW,MAAU;AACnB,QAAI,CAAC;AAAM;AAGX,UAAM,WAAW,IAAI,SAAQ;AAC7B,aAAS,OAAO,QAAQ,IAAI;AAE5B,SAAK,cAAc;AACnB,UAAM,QAAQ,aAAa,QAAQ,WAAW;AAC9C,UAAM,UAAU,IAAI,YAAY;MAC9B,iBAAiB,UAAU,KAAK;KACjC;AAGD,SAAK,KAAK,KAAU,GAAG,YAAY,MAAM,WAAW,UAAU,EAAE,QAAO,CAAE,EAAE,UAAU;MACnF,MAAM,CAAC,WAAU;AACf,gBAAQ,IAAI,yBAAoB,MAAM;AACtC,YAAI,OAAO,WAAW,OAAO,MAAM,KAAK;AAEtC,eAAK,cAAc;AACnB,eAAK,aAAa,KAAK,OAAO,KAAK,GAAG;AACtC,eAAK,SAAS,WAAW,EAAE,WAAW,CAAC,GAAG,KAAK,YAAY,EAAC,CAAE;QAChE;MACF;MACA,OAAO,CAAC,QAAO;AACb,gBAAQ,MAAM,yBAAoB,GAAG;MACvC;KACD;EACH;;EAIA,WAAQ;AACN,QAAI,KAAK,SAAS,SAAS;AACzB,WAAK,SAAS,iBAAgB;AAC9B;IACF;AACA,UAAM,OAAO,KAAK,SAAS,IAAI,aAAa,GAAG;AAC/C,UAAM,UAAU;MACd,UAAU;MACV,SAAS,KAAK,SAAS,IAAI,SAAS,GAAG;MACvC,aAAa,QAAQ,KAAK,KAAI,MAAO,KAAK,KAAK,KAAI,IAAK;MACxD,WAAW,OAAO,KAAK,SAAS,IAAI,WAAW,GAAG,KAAK;MACvD,WAAW,KAAK,SAAS,IAAI,WAAW,GAAG;;;AAG7C,YAAQ,IAAI,yBAAoB,OAAO;AAEvC,UAAM,QAAQ,aAAa,QAAQ,WAAW;AAC9C,YAAQ,IAAI,KAAK;AAEjB,UAAM,UAAU,IAAI,YAAY;MAC9B,iBAAiB,UAAU,KAAK;MAChC,gBAAgB;KACjB;AAED,SAAK,KAAK,KAAU,GAAG,YAAY,MAAM,gBAAgB,SAAS,EAAE,QAAO,CAAE,EAC1E,UAAU;MACT,MAAM,CAAC,QAAO;AACZ,gBAAQ,IAAI,GAAG;AACf,aAAK,SAAS,MAAK;AACnB,aAAK,gBAAgB,CAAA;AACrB,aAAK,cAAc,CAAA;AACnB,aAAK,eAAe,CAAA;AACpB,aAAK,SAAS,IAAI,WAAW,GAAG,SAAS,CAAC;AAC1C,aAAK,UAAU,sCAAiC,SAAS;AACzD,aAAK,eAAc;AACnB,YAAI,KAAK,MAAM,IAAI;AACjB,eAAK,qBAAqB,KAAK,KAAK,EAAE;QACxC;AAEA,cAAM,YAAY,UAAU,UAAU,YAAY,KAAK,YAAY,aAAa;AAChF,mBAAW,KAAI;MACjB;MACA,OAAO,CAAC,QAAO;AACb,gBAAQ,MAAM,+BAA+B,GAAG;AAChD,aAAK,UAAU,IAAI,MAAM,SAAS,QAAQ;MAC5C;KACD;EAEL;EACA,UAAU,SAAiB,OAAe,WAAS;AACjD,SAAK,eAAe;AACpB,SAAK,YAAY;AAEjB,UAAM,UAAU,SAAS,eAAe,WAAW;AACnD,QAAI,SAAS;AACX,YAAM,QAAQ,IAAI,UAAU,MAAM,SAAS,EAAE,OAAO,IAAI,CAAE;AAC1D,YAAM,KAAI;IACZ;EACF;EACA,UAAU,KAAW;AACnB,WAAO,KAAK,KAAK,QAAQ;EAC3B;EACA,eAAe,SAAe;AAC5B,SAAK,eAAe;AAEpB,UAAM,eAAe,KAAK,WAAW;AACrC,UAAM,QAAQ,IAAI,UAAU,MAAM,YAAY;AAC9C,UAAM,KAAI;EACZ;;;uBApZW,oBAAiB,4BAAA,WAAA,GAAA,4BAAA,UAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,YAAA,CAAA;IAAA;EAAA;;yEAAjB,oBAAiB,WAAA,CAAA,CAAA,eAAA,CAAA,GAAA,WAAA,SAAA,wBAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;;;;;;;;;;;;ACnB9B,QAAA,yBAAA,GAAA,OAAA,CAAA,EAA4D,GAAA,OAAA,CAAA,EAEX,GAAA,OAAA,CAAA,EACrB,GAAA,OAAA,CAAA;AAEZ,QAAA,iBAAA,CAAA;AACJ,QAAA,uBAAA;AACA,QAAA,oBAAA,GAAA,UAAA,CAAA;AAEJ,QAAA,uBAAA,EAAM,EACJ;AAEV,QAAA,yBAAA,GAAA,OAAA,CAAA;AACI,QAAA,qBAAA,GAAA,kCAAA,GAAA,GAAA,OAAA,CAAA;AAkBA,QAAA,yBAAA,GAAA,OAAA,EAAA,EAAqC,GAAA,OAAA,EAAA,EACF,IAAA,OAAA,EAAA,EACK,IAAA,OAAA,EAAA,EACwC,IAAA,IAAA;AAC5D,QAAA,iBAAA,IAAA,cAAA;AAAY,QAAA,uBAAA;AAChB,QAAA,yBAAA,IAAA,UAAA,EAAA;AACqC,QAAA,iBAAA,IAAA,WAAA;;AACjC,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA+F,IAAA,QAAA,EAAA;AAGvF,QAAA,oBAAA,IAAA,QAAA,EAAA;AACJ,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,KAAA,EAAA;AACI,QAAA,oBAAA,IAAA,QAAA,EAAA;AACJ,QAAA,uBAAA,EAAI,EACF,EAAS;AAEvB,QAAA,qBAAA,IAAA,mCAAA,IAAA,IAAA,OAAA,EAAA,EAAmD,IAAA,mCAAA,GAAA,GAAA,OAAA,EAAA;AAsDvD,QAAA,uBAAA;;AACA,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAyC,IAAA,OAAA,EAAA,EACyC,IAAA,IAAA;AACtE,QAAA,iBAAA,IAAA,iBAAA;AAAe,QAAA,uBAAA;AACnB,QAAA,yBAAA,IAAA,MAAA,EAAA;AAA+D,QAAA,iBAAA,IAAA,iBAAA;AAAe,QAAA,uBAAA,EAAK;AAEvF,QAAA,qBAAA,IAAA,mCAAA,IAAA,IAAA,OAAA,EAAA;AA6BJ,QAAA,uBAAA;AACA,QAAA,qBAAA,IAAA,mCAAA,IAAA,GAAA,OAAA,EAAA;AA2GJ,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAgC,IAAA,OAAA,EAAA,EACI,IAAA,OAAA,EAAA,EACwC,IAAA,IAAA;AAC5D,QAAA,iBAAA,IAAA,sBAAA;AAAoB,QAAA,uBAAA;AACxB,QAAA,yBAAA,IAAA,MAAA,EAAA;AAA4B,QAAA,iBAAA,IAAA,gBAAA;AAAc,QAAA,uBAAA,EAAK;AAEnD,QAAA,yBAAA,IAAA,OAAA,EAAA;AACI,QAAA,qBAAA,IAAA,4CAAA,GAAA,GAAA,gBAAA,EAAA,EAAgD,IAAA,mCAAA,GAAA,GAAA,OAAA,EAAA;AA8DpD,QAAA,uBAAA,EAAM,EAEJ,EACJ,EACJ;AAGV,QAAA,yBAAA,IAAA,OAAA,IAAA,CAAA,EAC0C,IAAA,OAAA,EAAA,EACR,IAAA,MAAA,EAAA;AACG,QAAA,iBAAA,IAAA,UAAA;AAAQ,QAAA,uBAAA;AACrC,QAAA,oBAAA,IAAA,UAAA,EAAA;AACJ,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA4B,IAAA,QAAA,EAAA;AAEK,QAAA,qBAAA,YAAA,SAAA,uDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAY,IAAA,SAAA,CAAU;QAAA,CAAA;AAC/C,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA0B,IAAA,OAAA,EAAA,EAGJ,IAAA,SAAA,EAAA;AACY,QAAA,iBAAA,IAAA,SAAA;AAAO,QAAA,yBAAA,IAAA,QAAA,EAAA;AAA0B,QAAA,iBAAA,IAAA,GAAA;AAAC,QAAA,uBAAA,EAAO;AACnE,QAAA,oBAAA,IAAA,SAAA,EAAA;AAEA,QAAA,qBAAA,IAAA,qCAAA,GAAA,GAAA,SAAA,EAAA;AAGJ,QAAA,uBAAA;AAGA,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAkB,IAAA,SAAA,EAAA;AACY,QAAA,iBAAA,IAAA,aAAA;AAAW,QAAA,uBAAA;AACrC,QAAA,oBAAA,IAAA,YAAA,EAAA;AAEJ,QAAA,uBAAA;AAGA,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAkB,IAAA,SAAA,EAAA;AACY,QAAA,iBAAA,IAAA,UAAA;AAAQ,QAAA,yBAAA,IAAA,QAAA,EAAA;AAA0B,QAAA,iBAAA,IAAA,GAAA;AAAC,QAAA,uBAAA,EAAO;AACpE,QAAA,yBAAA,IAAA,UAAA,EAAA,EAAwD,IAAA,UAAA,EAAA;AAChB,QAAA,iBAAA,IAAA,YAAA;AAAU,QAAA,uBAAA;AAC9C,QAAA,qBAAA,IAAA,sCAAA,GAAA,GAAA,UAAA,EAAA;AAGJ,QAAA,uBAAA,EAAS;AAKb,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA4B,IAAA,SAAA,EAAA;AACE,QAAA,iBAAA,IAAA,cAAA;AAAY,QAAA,uBAAA;AACtC,QAAA,yBAAA,IAAA,SAAA,EAAA,EAA2C,IAAA,OAAA,EAAA;;AAEnC,QAAA,yBAAA,IAAA,OAAA,EAAA;AAEI,QAAA,oBAAA,IAAA,UAAA,EAAA;AAEA,QAAA,yBAAA,IAAA,QAAA,EAAA;AAEI,QAAA,oBAAA,IAAA,QAAA,EAAA;AACJ,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,KAAA,EAAA;AACI,QAAA,oBAAA,IAAA,QAAA,EAAA;AAGJ,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,MAAA,EAAM,IAAA,kBAAA,EAAA;AAGE,QAAA,oBAAA,IAAA,QAAA,EAAA,EAA6B,IAAA,QAAA,EAAA;AAEjC,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,kBAAA,EAAA;AAEI,QAAA,oBAAA,IAAA,QAAA,EAAA,EAA6B,IAAA,QAAA,EAAA;AAEjC,QAAA,uBAAA,EAAiB,EACd;;AAEX,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAc,IAAA,KAAA,EAAA;AACK,QAAA,iBAAA,IAAA,iBAAA;AAAe,QAAA,uBAAA;AAC9B,QAAA,yBAAA,IAAA,SAAA,EAAA;AAA0B,QAAA,iBAAA,IAAA,sBAAA;AAAoB,QAAA,uBAAA,EAAQ,EACpD;AAEV,QAAA,yBAAA,IAAA,SAAA,EAAA;AAA0C,QAAA,qBAAA,UAAA,SAAA,oDAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAU,IAAA,eAAA,MAAA,CAAsB;QAAA,CAAA;AAA1E,QAAA,uBAAA,EACwD;AAG5D,QAAA,qBAAA,IAAA,mCAAA,GAAA,GAAA,OAAA,EAAA,EAAoG,IAAA,mCAAA,GAAA,GAAA,OAAA,EAAA;AAiCxG,QAAA,uBAAA,EAAM;AAKV,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAmD,IAAA,UAAA,EAAA;AACqC,QAAA,iBAAA,IAAA,MAAA;AAAI,QAAA,uBAAA;AACxF,QAAA,yBAAA,IAAA,UAAA,EAAA;AAA+E,QAAA,iBAAA,KAAA,QAAA;AAAM,QAAA,uBAAA,EAAS,EAC5F,EACH,EACL;;;;AA5bc,QAAA,oBAAA;AAAA,QAAA,iCAAA,qCAAA,IAAA,WAAA,WAAA;AAIR,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,cAAA,GAAA;AAQiD,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,IAAA;AAmC3C,QAAA,oBAAA,EAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,cAAA,MAAA;AAmDA,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,cAAA,IAAA;AASiB,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,WAAA,IAAA,UAAA;AA8BrB,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,eAAA;AAmHiB,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,SAAA,IAAA,MAAA,SAAA,CAAA;AA2DT,QAAA,oBAAA;AAAA,QAAA,qBAAA,SAAA,IAAA,SAAA,OAAA,OAAA,IAAA,MAAA,YAAA,CAAA;AAkBZ,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,aAAA,IAAA,QAAA;AAQkC,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,SAAA,WAAA,IAAA,SAAA,IAAA,SAAA,MAAA,OAAA,OAAA,SAAA,UAAA,OAAA,OAAA,SAAA,OAAA,WAAA,CAAA;AAiBA,QAAA,oBAAA,EAAA;AAAA,QAAA,qBAAA,WAAA,IAAA,QAAA;AA4CK,QAAA,oBAAA,EAAA;AAAA,QAAA,qBAAA,YAAA,IAAA,WAAA;AAG3B,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,YAAA,SAAA,KAAA,CAAA,IAAA,WAAA;AAsBA,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,WAAA;AAkBkC,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,YAAA,IAAA,SAAA,OAAA;;sBD3ahD,cAAY,SAAA,SAAA,MAAA,UAAE,qBAAmB,oBAAA,gBAAA,8BAAA,sBAAA,4BAAA,iBAAA,sBAAA,oBAAA,iBAAE,aAAa,UAAU,GAAA,QAAA,CAAA,itMAAA,EAAA,CAAA;EAAA;;;6EAIzD,mBAAiB,EAAA,WAAA,qBAAA,UAAA,8DAAA,YAAA,GAAA,CAAA;AAAA,GAAA;",
  "names": []
}
