{
  "version": 3,
  "sources": ["src/app/website/pages/resources/readmore-news/readmore-news.component.ts", "src/app/website/pages/resources/readmore-news/readmore-news.component.html"],
  "sourcesContent": ["import { CommonModule } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { ActivatedRoute, RouterLink } from '@angular/router';\nimport { environment } from '../../../../../environments/environment';\n\n@Component({\n  selector: 'app-readmore-news',\n  standalone: true,\n  imports: [CommonModule, HttpClientModule, RouterLink],\n  templateUrl: './readmore-news.component.html',\n  styleUrl: './readmore-news.component.scss'\n})\nexport class ReadmoreNewsComponent implements OnInit {\n  mainBlog: any = null;\n  latestBlogs: any[] = [];\n  loading = true;\n\n  constructor(private http: HttpClient, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.queryParamMap.subscribe(params => {\n      const id = params.get('id');\n      if (id) {\n        this.fetchNews(id);\n      }\n    });\n  }\n\n  fetchNews(id: string) {\n    this.http.get<any>(`${environment.apiUrl}/news`).subscribe({\n      next: (res) => {\n        if (res?.success && res.data?.data) {\n          const allNews = res.data.data;\n\n          this.mainBlog = allNews.find((n: any) => String(n.id) === id);\n\n          this.latestBlogs = allNews\n            .filter((n: any) => String(n.id) !== id)\n            .slice(0, 3);\n        }\n        this.loading = false;\n      },\n      error: (err) => {\n        console.error('Error fetching news:', err);\n        this.loading = false;\n      }\n    });\n  }\n}\n", "<div class=\"main-allmembers-section\">\n  <div class=\"main-gradient\">\n    <div class=\"container\">\n      <div class=\"heading-div\">\n        <nav aria-label=\"breadcrumb\">\n          <ol class=\"breadcrumb d-flex align-items-center\">\n            <li class=\"breadcrumb-item m-0\"><a href=\"/homepage\">Home</a></li>\n            <li class=\"breadcrumb-item m-0\"><a [routerLink]=\"'/homepage/news-blogs'\">News</a></li>\n            <li class=\"breadcrumb-item active m-0\" aria-current=\"page\">News reader</li>\n          </ol>\n        </nav>\n        <h1>Latest News</h1>\n        <p>Get the latest updates from IAS associations and official sources.</p>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"coming-soon-di\">\n    <div class=\"container common-text-style\">\n      <div class=\"py-4\">\n        <div class=\"row\" *ngIf=\"!loading; else loadingTpl\">\n\n          <!-- Latest Blogs (top in mobile, right in desktop) -->\n          <aside class=\"col-12 col-lg-3 order-1 order-lg-2 mb-4 mb-lg-0\">\n            <div class=\"d-flex align-items-center mb-3 latest-news-header\">\n              <h5 class=\"mb-0 me-3 read-more-heading\">Latest News</h5>\n              <div class=\"latest-news-line flex-grow-1\"></div>\n            </div>\n\n            <div *ngFor=\"let blog of latestBlogs\" class=\"mb-5\">\n              <p class=\"fw-medium font-size\">{{ blog.title }}</p>\n              <small class=\"published-date common-text-style\">\n                Published On {{ blog.createdAt | date:'dd MMM, yyyy' }}\n              </small>\n              <hr class=\"mt-4\" />\n            </div>\n          </aside>\n\n          <!-- Main Blog Content -->\n          <main class=\"col-12 col-lg-9 order-2 order-lg-1\" *ngIf=\"mainBlog\">\n            <img [src]=\"mainBlog.bannerImage\" alt=\"blog image\" class=\"img-fluid rounded mb-3 blog-img\" />\n\n            <p class=\"mb-1 published-date card-text-news\">\n              Published On {{ mainBlog.createdAt | date:'dd MMMM, yyyy' }}\n            </p>\n            <h2 class=\"fw-bold mb-3 heading-content mt-3\">{{ mainBlog.title }}</h2>\n\n            <!-- Show external link if present -->\n            <a *ngIf=\"mainBlog.newsLink\" [href]=\"mainBlog.newsLink\" target=\"_blank\"\n              class=\"text-decoration-underline news-link truncate mb-5 link:hover\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n                class=\"me-1\">\n                <mask id=\"mask0\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"24\" height=\"24\">\n                  <rect width=\"24\" height=\"24\" fill=\"#D9D9D9\" />\n                </mask>\n                <g mask=\"url(#mask0)\">\n                  <path\n                    d=\"M11 17H7C5.61667 17 4.4375 16.5125 3.4625 15.5375C2.4875 14.5625 2 13.3833 2 12C2 10.6167 2.4875 9.4375 3.4625 8.4625C4.4375 7.4875 5.61667 7 7 7H11V9H7C6.16667 9 5.45833 9.29167 4.875 9.875C4.29167 10.4583 4 11.1667 4 12C4 12.8333 4.29167 13.5417 4.875 14.125C5.45833 14.7083 6.16667 15 7 15H11V17ZM8 13V11H16V13H8ZM13 17V15H17C17.8333 15 18.5417 14.7083 19.125 14.125C19.7083 13.5417 20 12.8333 20 12C20 11.1667 19.7083 10.4583 19.125 9.875C18.5417 9.29167 17.8333 9 17 9H13V7H17C18.3833 7 19.5625 7.4875 20.5375 8.4625C21.5125 9.4375 22 10.6167 22 12C22 13.3833 21.5125 14.5625 20.5375 15.5375C19.5625 16.5125 18.3833 17 17 17H13Z\"\n                    fill=\"white\" />\n                </g>\n              </svg>\n              {{ mainBlog.newsLink }}\n            </a>\n\n            <!-- Blog content -->\n            <p [innerHTML]=\"mainBlog.description || mainBlog.content\" class=\"main-text-content\"></p>\n\n            <!-- Show YouTube embed if link contains youtube -->\n            <!-- <iframe\n              *ngIf=\"mainBlog.newsLink?.includes('youtube.com')\"\n              width=\"100%\" height=\"340\"\n              [src]=\"mainBlog.newsLink | safeUrl\"\n              frameborder=\"0\"\n              allowfullscreen>\n            </iframe> -->\n          </main>\n        </div>\n\n        <!-- Loading Template -->\n        <ng-template #loadingTpl>\n          <div class=\"text-center py-5\">Loading news...</div>\n        </ng-template>\n      </div>\n    </div>\n  </div>\n</div>"],
  "mappings": "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",
  "names": []
}
