{
  "version": 3,
  "sources": ["src/app/IAS-portal/pages/rejected-users/rejected-users.component.ts", "src/app/IAS-portal/pages/rejected-users/rejected-users.component.html"],
  "sourcesContent": ["import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { AccountActivityStatus } from '../dashboard/dashboard.component';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../../../environments/environment';\nimport { CommonModule } from '@angular/common';\ndeclare var bootstrap: any;\n\n@Component({\n  selector: 'app-rejected-users',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './rejected-users.component.html',\n  styleUrl: './rejected-users.component.scss'\n})\nexport class RejectedUsersComponent {\n  users: any[] = [];              // ðŸ‘ˆ currently displayed users\n  allApprovedUsers: any[] = [];   // ðŸ‘ˆ full approved list\n  AccountActivityStatus = AccountActivityStatus;\n  searchText: string = '';\n  pageSize: number = 5;\n  currentPage: number = 1;\n  toastMessage: string = '';\n  toastType: 'success' | 'danger' | 'warning' = 'success';\n\n  pagination = {\n    total: 0,\n    page: 1,\n    limit: 8\n  };\n\n  constructor(private http: HttpClient) { }\n\n  @ViewChild('toastElement') toastElement!: ElementRef;\n\n  ngOnInit(): void {\n    this.loadUsers();\n  }\n\n  // âœ… fetch once, filter approved\n  loadUsers(): void {\n    const token = localStorage.getItem('authToken');\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${token}`\n    });\n\n    // fetch all users (you may need to adjust limit if backend restricts it)\n    this.http.get<any>(`${environment.apiUrl}/admin/users?limit=10000&isActive=false`, { headers })\n      .subscribe({\n        next: (res) => {\n          // keep only approved\n          this.allApprovedUsers = res.data.data.filter(\n            (user: any) => user.status === this.AccountActivityStatus.APPROVED\n          );\n\n          this.pagination.total = this.allApprovedUsers.length;\n          this.pagination.limit = this.pageSize;\n\n          this.updatePage();\n        },\n        error: (err) => {\n          console.error('Error fetching users:', err);\n        }\n      });\n  }\n\n  // âœ… slice approved data according to pagination\n  updatePage(): void {\n    const start = (this.currentPage - 1) * this.pageSize;\n    const end = start + this.pageSize;\n    this.users = this.allApprovedUsers.slice(start, end);\n  }\n\n  get totalPages(): number {\n    return Math.ceil(this.pagination.total / this.pageSize);\n  }\n\n  changePage(page: number) {\n    if (page >= 1 && page <= this.totalPages) {\n      this.currentPage = page;\n      this.updatePage(); // ðŸ‘ˆ now no API call, just slice locally\n    }\n  }\n\n  goPrevious() {\n    this.changePage(this.currentPage - 1);\n  }\n\n  goNext() {\n    this.changePage(this.currentPage + 1);\n  }\n\n  onPageSizeChange(event: any) {\n    this.pageSize = +event.target.value;\n    this.currentPage = 1;\n    this.updatePage();\n  }\n\n  approveUser(user: any): void {\n    const token = localStorage.getItem('authToken');\n    const headers = new HttpHeaders({ Authorization: `Bearer ${token}` });\n\n    const body = {\n      users: [{ id: user.id }],\n      status: 'approved'\n    };\n\n    this.http.put(`${environment.apiUrl}/admin/users`, body, { headers })\n      .subscribe({\n        next: () => {\n          this.showToast(`User ${user.doptOfficer?.englishName} approved successfully`, 'success');\n          this.loadUsers();\n        },\n        error: (err) => {\n          console.error('Error approving user:', err);\n          this.showToast('Failed to approve user', 'danger');\n        }\n      });\n  }\n\n  rejectUser(user: any): void {\n    const token = localStorage.getItem('authToken');\n    const headers = new HttpHeaders({ Authorization: `Bearer ${token}` });\n\n    const body = {\n      users: [{ id: user.id }],\n      status: 'approved'\n    };\n\n    this.http.put(`${environment.apiUrl}/admin/users`, body, { headers })\n      .subscribe({\n        next: () => {\n          this.showToast(`User ${user.doptOfficer?.englishName} Moved to pending list`, 'warning');\n          this.loadUsers();\n        },\n        error: (err) => {\n          console.error('Error approving user:', err);\n          this.showToast('Failed to approve user', 'danger');\n        }\n      });\n  }\n\n  deleteUser(userId: number) {\n    const token = localStorage.getItem('authToken');\n    const headers = new HttpHeaders({ Authorization: `Bearer ${token}` });\n\n    const body = {\n      isActive: true,\n      // status: 'created',\n      account: {\n        id: userId\n      }\n    };\n\n    this.http.patch(`${environment.apiUrl}/admin/user`, body, { headers })\n      .subscribe({\n        next: () => {\n          this.showToast(`User Account Activated successfully`, 'success');\n          this.loadUsers(); // refresh list\n        },\n        error: (err) => {\n          this.showToast('Failed to activate account', 'danger');\n        }\n      });\n  }\n\n  showToast(message: string, type: 'success' | 'danger' | 'warning') {\n    this.toastMessage = message;\n    this.toastType = type;\n\n    const toastBootstrap = new bootstrap.Toast(this.toastElement.nativeElement);\n    toastBootstrap.show();\n  }\n}\n", "<div class=\"toast-container position-fixed top-0 end-0 p-3\">\n    <div #toastElement class=\"toast align-items-center text-bg-{{ toastType }} border-0\" role=\"alert\"\n        aria-live=\"assertive\" aria-atomic=\"true\">\n        <div class=\"d-flex\">\n            <div class=\"toast-body\">\n                {{ toastMessage }}\n            </div>\n            <button type=\"button\" class=\"btn-close btn-close-white me-2 m-auto\" data-bs-dismiss=\"toast\"\n                aria-label=\"Close\"></button>\n        </div>\n    </div>\n</div>\n\n<div class=\"tableheading\">\n    <div class=\"d-flex justify-content-between align-items-center flex-wrap mb-3\">\n        <h5 class=\"mb-1\">Rejected Users</h5>\n\n    </div>\n\n    <!-- Table -->\n    <div class=\"table-responsive custom-table overflow-visible\">\n        <table class=\"table align-middle mb-0\" *ngIf=\"users && users.length; else noUsers\">\n            <thead>\n                <tr>\n                    <th>S.no</th>\n                    <th>Cadre</th>\n                    <th>Batch</th>\n                    <th>Name</th>\n                    <th>Mobile</th>\n                    <th>Account Status</th>\n                    <th>Email</th>\n                    <th>Action</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let user of users; let i = index\">\n                    <td>{{ (currentPage - 1) * pageSize + i + 1 }}</td>\n                    <td>{{ user.doptOfficer?.cadre?.name || 'Not Found' }}</td>\n                    <td>{{ user.doptOfficer?.allotmentYear || 'Not Found'}}</td>\n                    <td>{{ user.doptOfficer?.englishName || 'Not Found'}}</td>\n                    <td>{{ user.mobileNumber || 'Not Found'}}</td>\n                    <td>\n                        <span class=\"badge\" [ngClass]=\"user.isActive ? 'approved' : 'unapproved'\">\n                            {{ user.isActive ? 'Active' : 'Deactivated' }}\n                        </span>\n\n                    </td>\n\n                    <td>{{ user.email || 'Not Found'}}</td>\n                    <td>\n                        <span class=\"p-1 px-2 approved rounded-2 d-flex align-items-center gap-2\"\n                            (click)=\"deleteUser(user.id)\" style=\"cursor: pointer;\"><svg\n                                xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"14\" viewBox=\"0 0 18 14\"\n                                fill=\"none\">\n                                <path\n                                    d=\"M0.666504 13.6668V11.3335C0.666504 10.8752 0.784559 10.4446 1.02067 10.0418C1.25678 9.63905 1.58317 9.3335 1.99984 9.12516C2.70817 8.76405 3.50678 8.4585 4.39567 8.2085C5.28456 7.9585 6.26373 7.8335 7.33317 7.8335C7.74984 7.8335 8.15609 7.85433 8.55192 7.896C8.94775 7.93766 9.33317 8.00016 9.70817 8.0835L8.24984 9.54183C8.09706 9.51405 7.94775 9.50016 7.80192 9.50016H7.33317C6.34706 9.50016 5.46164 9.61822 4.67692 9.85433C3.8922 10.0904 3.24984 10.3474 2.74984 10.6252C2.62484 10.6946 2.52414 10.7918 2.44775 10.9168C2.37137 11.0418 2.33317 11.1807 2.33317 11.3335V12.0002H7.5415L9.20817 13.6668H0.666504ZM11.9582 14.0002L9.08317 11.1252L10.2498 9.9585L11.9582 11.6668L16.1665 7.4585L17.3332 8.62516L11.9582 14.0002ZM7.33317 7.00016C6.4165 7.00016 5.63178 6.67377 4.979 6.021C4.32623 5.36822 3.99984 4.5835 3.99984 3.66683C3.99984 2.75016 4.32623 1.96544 4.979 1.31266C5.63178 0.659885 6.4165 0.333496 7.33317 0.333496C8.24984 0.333496 9.03456 0.659885 9.68734 1.31266C10.3401 1.96544 10.6665 2.75016 10.6665 3.66683C10.6665 4.5835 10.3401 5.36822 9.68734 6.021C9.03456 6.67377 8.24984 7.00016 7.33317 7.00016ZM7.33317 5.3335C7.7915 5.3335 8.18387 5.1703 8.51025 4.84391C8.83664 4.51752 8.99984 4.12516 8.99984 3.66683C8.99984 3.2085 8.83664 2.81613 8.51025 2.48975C8.18387 2.16336 7.7915 2.00016 7.33317 2.00016C6.87484 2.00016 6.48248 2.16336 6.15609 2.48975C5.8297 2.81613 5.6665 3.2085 5.6665 3.66683C5.6665 4.12516 5.8297 4.51752 6.15609 4.84391C6.48248 5.1703 6.87484 5.3335 7.33317 5.3335Z\"\n                                    fill=\"#3C9718\" />\n                            </svg>Activate</span>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n\n    <ng-template #noUsers>\n        <div class=\"text-center p-4 d-flex align-items-center justify-content-center\">\n            <img src=\"../../../../assets/icons/empty-state.png\" alt=\"empty state\">\n        </div>\n    </ng-template>\n\n    <!-- Pagination -->\n    <div class=\"d-flex justify-content-end align-items-center gap-2 mt-3\">\n        <!-- <div>Page {{ currentPage }} of {{ totalPages }}</div> -->\n        <nav>\n            <ul class=\"pagination modern-pagination mb-0\">\n\n                <!-- Previous Button -->\n                <li class=\"page-item\" [class.disabled]=\"currentPage === 1\">\n                    <a class=\"page-link\" (click)=\"goPrevious()\">â€¹</a>\n                </li>\n\n                <!-- Page Numbers -->\n                <li class=\"page-item\" *ngFor=\"let page of [].constructor(totalPages); let i = index\">\n                    <a class=\"page-link\" (click)=\"changePage(i+1)\" [class.active]=\"i + 1 === currentPage\">{{ i+1 }}</a>\n                </li>\n\n                <!-- Next Button -->\n                <li class=\"page-item\" [class.disabled]=\"currentPage === totalPages\">\n                    <a class=\"page-link\" (click)=\"goNext()\">â€º</a>\n                </li>\n            </ul>\n        </nav>\n\n        <div class=\"d-flex align-items-center\">\n            <select class=\"form-select form-select-sm w-auto\" (change)=\"onPageSizeChange($event)\">\n                <option [selected]=\"pageSize===5\" value=\"5\">5 /Page</option>\n                <option [selected]=\"pageSize===10\" value=\"10\">10 /Page</option>\n                <option [selected]=\"pageSize===20\" value=\"20\">20 /Page</option>\n            </select>\n        </div>\n    </div>\n\n</div>"],
  "mappings": "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",
  "names": []
}
