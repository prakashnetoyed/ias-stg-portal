{
  "version": 3,
  "sources": ["src/app/IAS-portal/pages/profile-info/profile-info.component.ts", "src/app/IAS-portal/pages/profile-info/profile-info.component.html"],
  "sourcesContent": ["import { AsyncPipe, CommonModule } from '@angular/common';\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport {\n  FormBuilder, FormGroup, ReactiveFormsModule, Validators,\n  AbstractControl, ValidationErrors, ValidatorFn\n} from '@angular/forms';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../../../environments/environment';\nimport { User, UserService } from '../../../services/user.service';\nimport { ImageCroppedEvent, ImageCropperComponent } from 'ngx-image-cropper';\nimport { ToastService } from '../../../common/toast.service';\n\ndeclare var bootstrap: any;\n\n@Component({\n  selector: 'app-profile-info',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, ImageCropperComponent],\n  templateUrl: './profile-info.component.html',\n  styleUrls: ['./profile-info.component.scss']\n})\nexport class ProfileInfoComponent implements OnInit {\n  user: User | null = null;\n\n  changepassword!: FormGroup;\n  showNewPassword = false;\n  showConfirmPassword = false;\n\n  @ViewChild('successToast', { static: true }) successToast!: ElementRef;\n  @ViewChild('errorToast', { static: true }) errorToast!: ElementRef;\n\n  // ===== Image cropper =====\n  imageChangedEvent: any = '';\n  croppedImage: string | null = null; // live preview in Base64\n  finalImage: string | null = null;   // locked cropped Base64 for API\n  private modalInstance: any;\n\n  constructor(\n    private fb: FormBuilder,\n    private userService: UserService,\n    private http: HttpClient,\n    private toastService: ToastService,\n    \n  ) { }\n\n  ngOnInit(): void {\n    this.userService.getUser().subscribe(u => this.user = u);\n\n    this.changepassword = this.fb.group(\n      {\n        newPassword: [\n          '',\n          [\n            Validators.required,\n            Validators.minLength(8),\n            Validators.pattern(/^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]+$/)\n          ]\n        ],\n        confirmPassword: ['', Validators.required]\n      },\n      { validators: this.passwordsMatchValidator }\n    );\n  }\n\n  // ===== Toast helpers =====\n  showSuccessToast() { new bootstrap.Toast(this.successToast.nativeElement).show(); }\n  showErrorToast() { new bootstrap.Toast(this.errorToast.nativeElement).show(); }\n\n  // ===== Password change =====\n  onSubmit(): void {\n    if (this.changepassword.invalid) { this.showErrorToast(); return; }\n\n    const { newPassword, confirmPassword } = this.changepassword.value;\n    const token = localStorage.getItem('authToken');\n    const headers = new HttpHeaders({ Authorization: `Bearer ${token}` });\n\n    this.http.post(`${environment.apiUrl}/accounts/setup-password`,\n      { password: newPassword, confirmPassword },\n      { headers }\n    ).subscribe({\n      next: () => {\n        this.showSuccessToast();\n        setTimeout(() => { localStorage.clear(); window.location.href = ''; }, 2000);\n      },\n      error: () => this.showErrorToast()\n    });\n  }\n\n  passwordsMatchValidator: ValidatorFn = (group: AbstractControl): ValidationErrors | null => {\n    const np = group.get('newPassword')?.value;\n    const cp = group.get('confirmPassword')?.value;\n    return np === cp ? null : { passwordMismatch: true };\n  };\n\n  toggleNewPassword() { this.showNewPassword = !this.showNewPassword; }\n  toggleConfirmPassword() { this.showConfirmPassword = !this.showConfirmPassword; }\n\n  // ===== Profile Image Cropper =====\n  openModal() {\n    const modalEl = document.getElementById('uploadModal');\n    if (modalEl) {\n      this.modalInstance = new bootstrap.Modal(modalEl);\n      this.modalInstance.show();\n    }\n  }\n\n  onFileChange(event: any): void {\n    this.imageChangedEvent = event;  // raw file change event\n    this.croppedImage = null;\n    this.finalImage = null;\n  }\n\n  // Convert Blob to Base64\n  private blobToBase64(blob: Blob): Promise<string> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onloadend = () => resolve(reader.result as string);\n      reader.onerror = reject;\n      reader.readAsDataURL(blob);\n    });\n  }\n\n  imageCropped(event: ImageCroppedEvent) {\n    if (event.blob) {\n      this.blobToBase64(event.blob)\n        .then(base64 => this.croppedImage = base64)  // live preview in Base64\n        .catch(err => console.error('Blob to Base64 conversion error:', err));\n    }\n  }\n\n  // Lock the cropped Base64 image\n  cropImage() {\n    this.finalImage = this.croppedImage;\n  }\n\n// Send Base64 image to API and refresh user from server\nsaveImage() {\n  if (!this.finalImage) return;\n\n  const body = { profilePic: this.finalImage }; // Base64\n  this.http.patch(`${environment.apiUrl}/accounts/me/profile-pic`, body)\n    .subscribe({\n      next: () => {\n        // ✅ Re-fetch user and update UserService\n        this.userService.refreshUser().subscribe(u => {\n          this.user = u; // update local component if needed\n        });\n\n        this.toastService.showToast('Profile Pic Updated', 'success');\n        this.modalInstance.hide();\n      },\n      error: (err) => {\n        console.error(err);\n        this.showErrorToast();\n      }\n    });\n}\n\n\n}\n", "<!-- Success Toast -->\n<div class=\"toast-container position-fixed top-0 end-0 p-3\">\n    <div #successToast class=\"toast align-items-center text-bg-success border-0\" role=\"alert\" aria-live=\"assertive\"\n        aria-atomic=\"true\">\n        <div class=\"d-flex\">\n            <div class=\"toast-body\">\n                ✅ Password changed successfully. Logging out...\n            </div>\n            <button type=\"button\" class=\"btn-close btn-close-white me-2 m-auto\" data-bs-dismiss=\"toast\"></button>\n        </div>\n    </div>\n</div>\n\n<!-- Error Toast -->\n<div class=\"toast-container position-fixed top-0 end-0 p-3\">\n    <div #errorToast class=\"toast align-items-center text-bg-danger border-0\" role=\"alert\" aria-live=\"assertive\"\n        aria-atomic=\"true\">\n        <div class=\"d-flex\">\n            <div class=\"toast-body\">\n                ❌ Failed to change password. Please try again.\n            </div>\n            <button type=\"button\" class=\"btn-close btn-close-white me-2 m-auto\" data-bs-dismiss=\"toast\"></button>\n        </div>\n    </div>\n</div>\n\n<!-- Upload & Crop Modal -->\n<div class=\"modal fade\" id=\"uploadModal\" tabindex=\"-1\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered\">\n        <div class=\"modal-content p-3\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\">Upload & Crop Image</h5>\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"></button>\n            </div>\n\n            <div class=\"modal-body\">\n                <input type=\"file\" accept=\"image/*\" (change)=\"onFileChange($event)\" class=\"form-control mb-3\" />\n\n                <image-cropper *ngIf=\"imageChangedEvent\" [imageChangedEvent]=\"imageChangedEvent\"\n                    [maintainAspectRatio]=\"true\" [aspectRatio]=\"1/1\" [resizeToWidth]=\"200\" [roundCropper]=\"true\"\n                    format=\"png\" (imageCropped)=\"imageCropped($event)\" [backgroundColor]=\"'rgba(0,0,0,0.6)'\">\n                </image-cropper>\n\n                <div class=\"preview d-flex align-items-center justify-content-between\">\n                    <!-- Live preview -->\n                    <div *ngIf=\"croppedImage\" class=\"text-center mt-3\">\n                        <p class=\"small text-muted mb-1\">Live Preview</p>\n                        <img [src]=\"croppedImage\" class=\"rounded-circle preview-img\" />\n                    </div>\n\n                    <!-- Final cropped image -->\n                    <div *ngIf=\"finalImage\" class=\"text-center mt-3\">\n                        <p class=\"small text-muted mb-1\">Final Cropped Image</p>\n                        <img [src]=\"finalImage\" class=\"rounded-circle preview-img border border-2\" />\n                    </div>\n                </div>\n\n            </div>\n\n            <div class=\"modal-footer d-flex justify-content-between\">\n                <button class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancel</button>\n                <button class=\"btn btn-dark\" (click)=\"cropImage()\" [disabled]=\"!croppedImage\">Crop</button>\n                <button class=\"btn btn-prime\" (click)=\"saveImage()\" [disabled]=\"!finalImage\">Save</button>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n\n\n\n<div class=\"main-profile-info\" *ngIf=\"user\">\n    <div class=\"main-page-heading d-flex align-items-center justify-content-between mb-4\">\n        <h1>Profile</h1>\n        <div class=\"buttonss d-flex gap-3\">\n            <!-- <button class=\"btn btn-black\">Edit Profile</button> -->\n            <button class=\"btn btn-black\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#addNewsDrawer\">Change\n                password</button>\n        </div>\n    </div>\n\n    <div class=\"offcanvas offcanvas-end\" tabindex=\"-1\" id=\"addNewsDrawer\" aria-labelledby=\"addNewsDrawerLabel\">\n        <div class=\"offcanvas-header\">\n            <h5 id=\"addNewsDrawerLabel\">Change Password</h5>\n            <button type=\"button\" class=\"btn-close text-reset\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"></button>\n        </div>\n        <div class=\"offcanvas-body\">\n            <form class=\"d-flex flex-column justify-content-between h-100\" [formGroup]=\"changepassword\"\n                (ngSubmit)=\"onSubmit()\">\n                <div class=\"inner-fields\">\n\n                    <!-- New Password -->\n                    <div class=\"mb-3 position-relative\">\n                        <label class=\"form-label\">New Password</label>\n                        <div class=\"password-input\">\n                            <input [type]=\"showNewPassword ? 'text' : 'password'\" class=\"form-control\"\n                                placeholder=\"Enter new password\" formControlName=\"newPassword\">\n                            <button type=\"button\" class=\"eye-button\" (click)=\"toggleNewPassword()\">\n                                <svg *ngIf=\"!showNewPassword\" xmlns=\"http://www.w3.org/2000/svg\" width=\"19\" height=\"19\"\n                                    viewBox=\"0 0 19 19\" fill=\"none\">\n                                    <g clip-path=\"url(#clip0_50828_258)\">\n                                        <path\n                                            d=\"M9.49996 4.75002C12.5004 4.75002 15.1762 6.43627 16.4825 9.10419C15.1762 11.7721 12.5004 13.4584 9.49996 13.4584C6.49954 13.4584 3.82371 11.7721 2.51746 9.10419C3.82371 6.43627 6.49954 4.75002 9.49996 4.75002ZM9.49996 3.16669C5.54163 3.16669 2.16121 5.62877 0.791626 9.10419C2.16121 12.5796 5.54163 15.0417 9.49996 15.0417C13.4583 15.0417 16.8387 12.5796 18.2083 9.10419C16.8387 5.62877 13.4583 3.16669 9.49996 3.16669ZM9.49996 7.12502C10.5925 7.12502 11.4791 8.01169 11.4791 9.10419C11.4791 10.1967 10.5925 11.0834 9.49996 11.0834C8.40746 11.0834 7.52079 10.1967 7.52079 9.10419C7.52079 8.01169 8.40746 7.12502 9.49996 7.12502ZM9.49996 5.54169C7.53663 5.54169 5.93746 7.14085 5.93746 9.10419C5.93746 11.0675 7.53663 12.6667 9.49996 12.6667C11.4633 12.6667 13.0625 11.0675 13.0625 9.10419C13.0625 7.14085 11.4633 5.54169 9.49996 5.54169Z\"\n                                            fill=\"#A9ACB1\" />\n                                    </g>\n                                    <defs>\n                                        <clipPath id=\"clip0_50828_258\">\n                                            <rect width=\"19\" height=\"19\" fill=\"white\" />\n                                        </clipPath>\n                                    </defs>\n                                </svg>\n                                <svg *ngIf=\"showNewPassword\" xmlns=\"http://www.w3.org/2000/svg\" width=\"19\" height=\"19\"\n                                    viewBox=\"0 0 19 19\" fill=\"none\">\n                                    <g clip-path=\"url(#clip0_50828_300)\">\n                                        <path\n                                            d=\"M9.50008 4.74999C12.5005 4.74999 15.1763 6.43624 16.4826 9.10416C16.0155 10.07 15.3584 10.9012 14.5747 11.5742L15.6909 12.6904C16.7913 11.7167 17.6622 10.4975 18.2084 9.10416C16.8388 5.62874 13.4584 3.16666 9.50008 3.16666C8.49467 3.16666 7.52883 3.32499 6.61841 3.61791L7.92467 4.92416C8.43925 4.82124 8.96175 4.74999 9.50008 4.74999ZM8.653 5.65249L10.2917 7.29124C10.743 7.48916 11.1072 7.85333 11.3051 8.30458L12.9438 9.94333C13.0072 9.67416 13.0547 9.38916 13.0547 9.09624C13.0626 7.13291 11.4634 5.54166 9.50008 5.54166C9.20717 5.54166 8.93008 5.58124 8.653 5.65249ZM1.59133 3.06374L3.713 5.18541C2.42258 6.19874 1.40133 7.54458 0.791748 9.10416C2.16133 12.5796 5.54175 15.0417 9.50008 15.0417C10.7034 15.0417 11.8592 14.8121 12.9201 14.3925L15.6276 17.1L16.7438 15.9837L2.70758 1.93958L1.59133 3.06374ZM7.52883 9.00124L9.59508 11.0675C9.56342 11.0754 9.53175 11.0833 9.50008 11.0833C8.40758 11.0833 7.52092 10.1967 7.52092 9.10416C7.52092 9.06458 7.52883 9.04083 7.52883 9.00124ZM4.83717 6.30958L6.22258 7.69499C6.0405 8.13041 5.93758 8.60541 5.93758 9.10416C5.93758 11.0675 7.53675 12.6667 9.50008 12.6667C9.99883 12.6667 10.4738 12.5637 10.9013 12.3817L11.6772 13.1575C10.9805 13.3475 10.2522 13.4583 9.50008 13.4583C6.49967 13.4583 3.82383 11.7721 2.51758 9.10416C3.07175 7.97208 3.87925 7.03791 4.83717 6.30958Z\"\n                                            fill=\"#222222\" />\n                                    </g>\n                                    <defs>\n                                        <clipPath id=\"clip0_50828_300\">\n                                            <rect width=\"19\" height=\"19\" fill=\"white\" />\n                                        </clipPath>\n                                    </defs>\n                                </svg>\n\n                            </button>\n\n                        </div>\n\n                        <div *ngIf=\"changepassword.get('newPassword')?.touched && changepassword.get('newPassword')?.invalid\"\n                            class=\"text-danger small mt-1\">\n                            <span *ngIf=\"changepassword.get('newPassword')?.errors?.['required']\">Password is\n                                required.</span>\n                            <span *ngIf=\"changepassword.get('newPassword')?.errors?.['minlength']\">Minimum 8 characters\n                                required.</span>\n                            <span *ngIf=\"changepassword.get('newPassword')?.errors?.['pattern']\">\n                                Must include uppercase, number, and special character.\n                            </span>\n                        </div>\n                    </div>\n\n                    <!-- Confirm Password -->\n                    <div class=\"mb-3 position-relative\">\n                        <label class=\"form-label\">Confirm Password</label>\n                        <div class=\"password-input\">\n                            <input [type]=\"showConfirmPassword ? 'text' : 'password'\" class=\"form-control\"\n                                placeholder=\"Re-enter new password\" formControlName=\"confirmPassword\">\n\n                            <!-- Eye toggle -->\n                            <button type=\"button\" class=\"eye-button\" (click)=\"toggleConfirmPassword()\">\n                                <svg *ngIf=\"!showConfirmPassword\" xmlns=\"http://www.w3.org/2000/svg\" width=\"19\"\n                                    height=\"19\" viewBox=\"0 0 19 19\" fill=\"none\">\n                                    <g clip-path=\"url(#clip0_50828_258)\">\n                                        <path\n                                            d=\"M9.49996 4.75002C12.5004 4.75002 15.1762 6.43627 16.4825 9.10419C15.1762 11.7721 12.5004 13.4584 9.49996 13.4584C6.49954 13.4584 3.82371 11.7721 2.51746 9.10419C3.82371 6.43627 6.49954 4.75002 9.49996 4.75002ZM9.49996 3.16669C5.54163 3.16669 2.16121 5.62877 0.791626 9.10419C2.16121 12.5796 5.54163 15.0417 9.49996 15.0417C13.4583 15.0417 16.8387 12.5796 18.2083 9.10419C16.8387 5.62877 13.4583 3.16669 9.49996 3.16669ZM9.49996 7.12502C10.5925 7.12502 11.4791 8.01169 11.4791 9.10419C11.4791 10.1967 10.5925 11.0834 9.49996 11.0834C8.40746 11.0834 7.52079 10.1967 7.52079 9.10419C7.52079 8.01169 8.40746 7.12502 9.49996 7.12502ZM9.49996 5.54169C7.53663 5.54169 5.93746 7.14085 5.93746 9.10419C5.93746 11.0675 7.53663 12.6667 9.49996 12.6667C11.4633 12.6667 13.0625 11.0675 13.0625 9.10419C13.0625 7.14085 11.4633 5.54169 9.49996 5.54169Z\"\n                                            fill=\"#A9ACB1\" />\n                                    </g>\n                                    <defs>\n                                        <clipPath id=\"clip0_50828_258\">\n                                            <rect width=\"19\" height=\"19\" fill=\"white\" />\n                                        </clipPath>\n                                    </defs>\n                                </svg>\n                                <svg *ngIf=\"showConfirmPassword\" xmlns=\"http://www.w3.org/2000/svg\" width=\"19\"\n                                    height=\"19\" viewBox=\"0 0 19 19\" fill=\"none\">\n                                    <g clip-path=\"url(#clip0_50828_300)\">\n                                        <path\n                                            d=\"M9.50008 4.74999C12.5005 4.74999 15.1763 6.43624 16.4826 9.10416C16.0155 10.07 15.3584 10.9012 14.5747 11.5742L15.6909 12.6904C16.7913 11.7167 17.6622 10.4975 18.2084 9.10416C16.8388 5.62874 13.4584 3.16666 9.50008 3.16666C8.49467 3.16666 7.52883 3.32499 6.61841 3.61791L7.92467 4.92416C8.43925 4.82124 8.96175 4.74999 9.50008 4.74999ZM8.653 5.65249L10.2917 7.29124C10.743 7.48916 11.1072 7.85333 11.3051 8.30458L12.9438 9.94333C13.0072 9.67416 13.0547 9.38916 13.0547 9.09624C13.0626 7.13291 11.4634 5.54166 9.50008 5.54166C9.20717 5.54166 8.93008 5.58124 8.653 5.65249ZM1.59133 3.06374L3.713 5.18541C2.42258 6.19874 1.40133 7.54458 0.791748 9.10416C2.16133 12.5796 5.54175 15.0417 9.50008 15.0417C10.7034 15.0417 11.8592 14.8121 12.9201 14.3925L15.6276 17.1L16.7438 15.9837L2.70758 1.93958L1.59133 3.06374ZM7.52883 9.00124L9.59508 11.0675C9.56342 11.0754 9.53175 11.0833 9.50008 11.0833C8.40758 11.0833 7.52092 10.1967 7.52092 9.10416C7.52092 9.06458 7.52883 9.04083 7.52883 9.00124ZM4.83717 6.30958L6.22258 7.69499C6.0405 8.13041 5.93758 8.60541 5.93758 9.10416C5.93758 11.0675 7.53675 12.6667 9.50008 12.6667C9.99883 12.6667 10.4738 12.5637 10.9013 12.3817L11.6772 13.1575C10.9805 13.3475 10.2522 13.4583 9.50008 13.4583C6.49967 13.4583 3.82383 11.7721 2.51758 9.10416C3.07175 7.97208 3.87925 7.03791 4.83717 6.30958Z\"\n                                            fill=\"#222222\" />\n                                    </g>\n                                    <defs>\n                                        <clipPath id=\"clip0_50828_300\">\n                                            <rect width=\"19\" height=\"19\" fill=\"white\" />\n                                        </clipPath>\n                                    </defs>\n                                </svg>\n                            </button>\n                        </div>\n\n                        <div *ngIf=\"changepassword.hasError('passwordMismatch') && changepassword.get('confirmPassword')?.touched\"\n                            class=\"text-danger small mt-1\">\n                            Passwords do not match.\n                        </div>\n                    </div>\n\n                    <div class=\"warning-box\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\">\n                            <path\n                                d=\"M6.33325 10.3333H7.66658V6.33331H6.33325V10.3333ZM6.99992 4.99998C7.18881 4.99998 7.34714 4.93609 7.47492 4.80831C7.6027 4.68053 7.66658 4.5222 7.66658 4.33331C7.66658 4.14442 7.6027 3.98609 7.47492 3.85831C7.34714 3.73054 7.18881 3.66665 6.99992 3.66665C6.81103 3.66665 6.6527 3.73054 6.52492 3.85831C6.39714 3.98609 6.33325 4.14442 6.33325 4.33331C6.33325 4.5222 6.39714 4.68053 6.52492 4.80831C6.6527 4.93609 6.81103 4.99998 6.99992 4.99998ZM6.99992 13.6666C6.0777 13.6666 5.21103 13.4916 4.39992 13.1416C3.58881 12.7916 2.88325 12.3166 2.28325 11.7166C1.68325 11.1166 1.20825 10.4111 0.858252 9.59998C0.508252 8.78887 0.333252 7.9222 0.333252 6.99998C0.333252 6.07776 0.508252 5.21109 0.858252 4.39998C1.20825 3.58887 1.68325 2.88331 2.28325 2.28331C2.88325 1.68331 3.58881 1.20831 4.39992 0.858313C5.21103 0.508313 6.0777 0.333313 6.99992 0.333313C7.92214 0.333313 8.78881 0.508313 9.59992 0.858313C10.411 1.20831 11.1166 1.68331 11.7166 2.28331C12.3166 2.88331 12.7916 3.58887 13.1416 4.39998C13.4916 5.21109 13.6666 6.07776 13.6666 6.99998C13.6666 7.9222 13.4916 8.78887 13.1416 9.59998C12.7916 10.4111 12.3166 11.1166 11.7166 11.7166C11.1166 12.3166 10.411 12.7916 9.59992 13.1416C8.78881 13.4916 7.92214 13.6666 6.99992 13.6666ZM6.99992 12.3333C8.48881 12.3333 9.74992 11.8166 10.7833 10.7833C11.8166 9.74998 12.3333 8.48887 12.3333 6.99998C12.3333 5.51109 11.8166 4.24998 10.7833 3.21665C9.74992 2.18331 8.48881 1.66665 6.99992 1.66665C5.51103 1.66665 4.24992 2.18331 3.21659 3.21665C2.18325 4.24998 1.66659 5.51109 1.66659 6.99998C1.66659 8.48887 2.18325 9.74998 3.21659 10.7833C4.24992 11.8166 5.51103 12.3333 6.99992 12.3333Z\"\n                                fill=\"#A16800\" />\n                        </svg>\n                        <p>\n                            Once your password is changed, you will need to log in again with the new password.\n                        </p>\n                    </div>\n                </div>\n\n                <div class=\"d-flex justify-content-end gap-3 mt-3\">\n                    <button type=\"button\" class=\"btn btn-outline-secondary\" data-bs-dismiss=\"offcanvas\">Back</button>\n                    <button type=\"submit\" class=\"btn btn-prime\" [disabled]=\"changepassword.invalid\">\n                        Submit\n                    </button>\n                </div>\n            </form>\n        </div>\n    </div>\n\n    <div class=\"all-user-deatils-div\">\n\n        <div class=\"profile-photo-div p-2\">\n            <!-- Profile Image -->\n            <div class=\"inner-profile-div position-relative\">\n                <img [src]=\"user.profilePic || 'assets/default-profile.jpg'\" alt=\"profile-image\"\n                    class=\"profile-image\" draggable=\"false\" />\n\n                <!-- Edit Icon Overlay -->\n                <button class=\"edit-icon-btn position-absolute\" (click)=\"openModal()\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n                        <path\n                            d=\"M2.16667 13.8333H3.35417L11.5 5.6875L10.3125 4.5L2.16667 12.6458V13.8333ZM0.5 15.5V11.9583L11.5 0.979167C11.6667 0.826389 11.8507 0.708333 12.0521 0.625C12.2535 0.541667 12.4653 0.5 12.6875 0.5C12.9097 0.5 13.125 0.541667 13.3333 0.625C13.5417 0.708333 13.7222 0.833333 13.875 1L15.0208 2.16667C15.1875 2.31944 15.309 2.5 15.3854 2.70833C15.4618 2.91667 15.5 3.125 15.5 3.33333C15.5 3.55556 15.4618 3.76736 15.3854 3.96875C15.309 4.17014 15.1875 4.35417 15.0208 4.52083L4.04167 15.5H0.5ZM10.8958 5.10417L10.3125 4.5L11.5 5.6875L10.8958 5.10417Z\"\n                            fill=\"#211B3A\" />\n                    </svg> </button>\n            </div>\n        </div>\n        <div class=\"info-div\">\n            <div class=\"info-heading-div\">\n                <h2>Personal Information</h2>\n                <div class=\"inner-info d-flex flex-column gap-3\">\n                    <div class=\"inf\">\n                        <span>Name: </span>\n                        <h5>{{ user.name}}</h5>\n                    </div>\n                    <div class=\"inf\">\n                        <span>Gender: </span>\n                        <h5>{{user.gender}}</h5>\n                    </div>\n                    <div class=\"inf\">\n                        <span>DOB: </span>\n                        <h5>{{ user.dob }}</h5>\n                    </div>\n                </div>\n            </div>\n            <div class=\"info-heading-div\">\n                <h2>Contact Details</h2>\n                <div class=\"inner-info d-flex flex-column gap-3\">\n                    <div class=\"inf d-flex align-items-center\">\n                        <span>E- Mail: </span>\n                        <h5>{{ user.email || 'Not provided'}}</h5>\n                    </div>\n                    <div class=\"inf\">\n                        <span>Mobile No: </span>\n                        <h5>{{user.mobileNumber || 'Not Provided'}}</h5>\n                    </div>\n                </div>\n            </div>\n            <!-- <div class=\"info-heading-div\">\n                <h2>Place Of Domicile</h2>\n                <div class=\"inner-info d-flex flex-column gap-3\">\n                    <div class=\"inf\" *ngIf=\"user.doptOfficer?.placeOfDomicile\">\n                        <span>Address: </span>\n                        <h5>Not provided</h5>\n                    </div>\n                    <div class=\"inf\">\n                        <span>City: </span>\n                        <h5>Not provided</h5>\n                    </div>\n                    <div class=\"inf\" *ngIf=\"user.doptOfficer?.placeOfDomicile\">\n                        <span>State: </span>\n                        <h5>{{user.doptOfficer?.placeOfDomicile || 'Not Provided'}}</h5>\n                    </div>\n                    <div class=\"inf\">\n                        <span>Pincode: </span>\n                        <h5>Not provided</h5>\n                    </div>\n                </div>\n            </div> -->\n        </div>\n\n        <!-- <hr class=\"my-4\"> -->\n\n        <!-- <div class=\"info-heading-div\">\n            <h2>Social Media Handles</h2>\n            <div class=\"inner-info d-flex justify-content-between\">\n                <div class=\"inf \">\n                    <span>Facebook: </span>\n                    <h6> fb.com/adeshk</h6>\n                </div>\n                <div class=\"inf\">\n                    <span>Twitter: </span>\n                    <h6>twitter.com/adeshk</h6>\n                </div>\n                <div class=\"inf\">\n                    <span>LinkedIn: </span>\n                    <h6>linkedin.com/in/adesh-kumar</h6>\n                </div>\n            </div>\n        </div> -->\n    </div>\n</div>"],
  "mappings": "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",
  "names": []
}
