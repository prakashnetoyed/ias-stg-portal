{
  "version": 3,
  "sources": ["src/app/user-portal/pages/user-members/user-members.component.ts", "src/app/user-portal/pages/user-members/user-members.component.html"],
  "sourcesContent": ["import { CommonModule } from '@angular/common';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { environment } from '../../../../environments/environment';\n\n@Component({\n  selector: 'app-user-members',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './user-members.component.html',\n  styleUrl: './user-members.component.scss'\n})\nexport class UserMembersComponent {\n  toastMessage: string = '';\n  users: any[] = [];\n  pageSize: number = 5;\n  currentPage: number = 1;\n  pagination = {\n    total: 0,\n    page: 1,\n    limit: 10\n  };\n  constructor(private http: HttpClient) { }\n  ngOnInit(): void {\n    this.loadUsers();\n  }\n  loadUsers(page: number = this.currentPage, limit: number = this.pageSize) {\n    const token = localStorage.getItem('authToken');\n    console.log(token);\n\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`,\n      'Content-Type': 'application/json'\n    });\n\n    this.http.get<any>(`${environment.apiUrl}/admin/users?isActive=true&page=${page}&limit=${limit}`, { headers })\n      .subscribe({\n        next: (res) => {\n          console.log(res);\n          this.users = res.data.data;\n          this.pagination.total = res.data.pagination.total;\n          this.pagination.limit = limit;\n          this.pagination.page = page;\n          console.log(this.users);\n\n        },\n        error: (err) => {\n          console.error('Error fetching Users:', err);\n        }\n      });\n  }\n  get totalPages(): number {\n    return Math.ceil(this.pagination.total / this.pagination.limit);\n  }\n\n changePage(page: number) {\n  if (page >= 1 && page <= this.totalPages) {\n    this.currentPage = page;\n    this.loadUsers(this.currentPage, this.pageSize); \n  }\n}\n\n  // ðŸ‘ˆ previous\n  goPrevious() {\n    this.changePage(this.currentPage - 1);\n  }\n\n  // ðŸ‘ˆ next\n  goNext() {\n    this.changePage(this.currentPage + 1);\n  }\n\n\n onPageSizeChange(event: any) {\n  this.pageSize = +event.target.value;\n  this.currentPage = 1;\n  this.loadUsers(this.currentPage, this.pageSize);\n}\n}\n", "<div class=\"tableheading\">\n    <div class=\"d-flex justify-content-between align-items-center flex-wrap mb-3\">\n        <h5 class=\"mb-1\">Member Directory</h5>\n\n    </div>\n\n    <!-- Table -->\n    <div class=\"table-responsive custom-table\">\n        <table class=\"table align-middle mb-0\">\n            <thead>\n                <tr>\n                    <th>S.no</th>\n                    <th>Name</th>\n                    <th>Photo</th>\n                    <th>Email</th>\n                    <th>Mobile</th>\n                    <th>Batch Year</th>\n                    <th>Cadre</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let user of users; let i = index\">\n                    <td>{{ (currentPage - 1) * pageSize + i + 1 }}</td>\n                    <td>{{user.doptOfficer?.englishName}}</td>\n                    <td><img [src]=\"user.doptOfficer?.profilePic\" alt=\"profile pic\" class=\"tableprofile\"></td>\n                    <td>{{user?.email}}</td>\n                    <td>\n                        {{\n                        user.mobileNumber\n                        ? user.mobileNumber.slice(0,4) + '****' + user.mobileNumber.slice(-2)\n                        : 'N/A'\n                        }}\n                    </td>                    <td>{{user.doptOfficer?.allotmentYear}}</td>\n                    <td>{{user.doptOfficer?.cadre.name}}</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n\n    <!-- Pagination -->\n    <div class=\"d-flex justify-content-end align-items-center gap-2 mt-3\">\n        <!-- <div>Page {{ currentPage }} of {{ totalPages }}</div> -->\n        <nav>\n            <ul class=\"pagination modern-pagination mb-0\">\n\n                <!-- Previous Button -->\n                <li class=\"page-item\" [class.disabled]=\"currentPage === 1\">\n                    <a class=\"page-link\" (click)=\"goPrevious()\">â€¹</a>\n                </li>\n\n                <!-- Page Numbers -->\n                <li class=\"page-item\" *ngFor=\"let page of [].constructor(totalPages); let i = index\">\n                    <a class=\"page-link\" (click)=\"changePage(i+1)\" [class.active]=\"i + 1 === currentPage\">{{ i+1 }}</a>\n                </li>\n\n                <!-- Next Button -->\n                <li class=\"page-item\" [class.disabled]=\"currentPage === totalPages\">\n                    <a class=\"page-link\" (click)=\"goNext()\">â€º</a>\n                </li>\n            </ul>\n        </nav>\n\n        <div class=\"d-flex align-items-center\">\n            <select class=\"form-select form-select-sm w-auto\" (change)=\"onPageSizeChange($event)\">\n                <option [selected]=\"pageSize===5\" value=\"5\">5 /Page</option>\n                <option [selected]=\"pageSize===10\" value=\"10\">10 /Page</option>\n                <option [selected]=\"pageSize===20\" value=\"20\">20 /Page</option>\n            </select>\n        </div>\n    </div>\n\n</div>"],
  "mappings": "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",
  "names": []
}
