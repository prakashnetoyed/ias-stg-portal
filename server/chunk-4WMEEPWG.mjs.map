{"version":3,"sources":["src/app/common/common-toast/common-toast.component.ts","src/app/common/common-toast/common-toast.component.html","src/app/app.component.ts","src/app/app.component.html","src/app/common/ias-header/ias-header.component.ts","src/app/common/ias-header/ias-header.component.html","src/app/common/ias-footer/ias-footer.component.ts","src/app/common/ias-footer/ias-footer.component.html","src/app/common/accessibility-header/accessibility-header.component.ts","src/app/common/accessibility-header/accessibility-header.component.html","src/app/website/pages/main-page/main-page.component.ts","src/app/website/pages/main-page/main-page.component.html","src/app/authmodule/ias-login/ias-login.component.ts","src/app/authmodule/ias-login/ias-login.component.html","src/app/authmodule/ias-forgotpassword/ias-forgotpassword.component.ts","src/app/authmodule/ias-forgotpassword/ias-forgotpassword.component.html","src/app/authmodule/ias-signup/ias-signup.component.ts","src/app/authmodule/ias-signup/ias-signup.component.html","src/app/authmodule/auth.guard.ts","src/app/authmodule/guards/no-auth.guard.ts","src/app/app.routes.ts","src/app/interceptors/auth.interceptor.ts","node_modules/@angular/platform-browser/fesm2022/animations/async.mjs","src/app/app.config.ts","src/app/app.config.server.ts","src/main.server.ts"],"sourcesContent":["import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { ToastService } from '../toast.service';\ndeclare var bootstrap: any; // import bootstrap JS\n\n@Component({\n  selector: 'app-common-toast',\n  standalone: true,\n  imports: [],\n  templateUrl: './common-toast.component.html',\n  styleUrl: './common-toast.component.scss'\n})\nexport class CommonToastComponent {\n  @ViewChild('errorToast', { static: true }) errorToast!: ElementRef;\n  toastMessage = '';\n  toastType = 'danger';\n\n  constructor(private toastService: ToastService) {}\n\n  ngOnInit(): void {\n    this.toastService.toastMessage$.subscribe(({ message, type }) => {\n      this.toastMessage = message;\n      this.toastType = type || 'danger';\n\n      const toastEl = this.errorToast.nativeElement;\n      const toast = new bootstrap.Toast(toastEl);\n      toast.show();\n    });\n  }\n}\n","<div class=\"toast-container position-fixed top-0 end-0 p-3\">\n    <div #errorToast class=\"toast align-items-center text-bg-{{toastType}} border-0\" role=\"alert\" aria-live=\"assertive\"\n        aria-atomic=\"true\">\n        <div class=\"d-flex\">\n            <div class=\"toast-body\">\n                {{ toastMessage }}\n            </div>\n            <button type=\"button\" class=\"btn-close btn-close-white me-2 m-auto\" data-bs-dismiss=\"toast\"\n                aria-label=\"Close\"></button>\n        </div>\n    </div>\n</div>","import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { CommonToastComponent } from \"./common/common-toast/common-toast.component\";\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet, CommonToastComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})\nexport class AppComponent {\n  title = 'ISDirectory';\n}\n","<router-outlet></router-outlet>\n<app-common-toast></app-common-toast>","import { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { Component, inject, Inject, OnInit, PLATFORM_ID } from '@angular/core';\nimport { Router, RouterModule } from '@angular/router';\nimport { User, UserService } from '../../services/user.service';\nimport { ToastService } from '../toast.service';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-ias-header',\n  standalone: true,\n  imports: [CommonModule, RouterModule],\n  templateUrl: './ias-header.component.html',\n  styleUrl: './ias-header.component.scss'\n})\nexport class IasHeaderComponent implements OnInit {\n  auth = inject(AuthService);\n  dropdownOpen = false;\n  user: User | null = null;\n  private isBrowser: boolean;\n  isLoggedIn: boolean | null = null;  // null by default\n  userRole: string | null = null;\n  constructor(\n    private router: Router,\n    private userService: UserService,\n    private toastService: ToastService,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {\n    this.isBrowser = isPlatformBrowser(this.platformId);\n  }\n\n  toggleDropdown() {\n    this.dropdownOpen = !this.dropdownOpen;\n  }\n\n  logout(): void {\n    if (this.isBrowser) {\n      localStorage.removeItem('authToken'); // ✅ clear only auth token\n      this.auth.checkAuth();\n      this.isLoggedIn = false;\n    }\n    this.router.navigate(['']);\n  }\n\n  ngOnInit(): void {\n    if (this.isBrowser) {\n\n      const token = localStorage.getItem('authToken');\n      this.userRole = localStorage.getItem('userRole') ? atob(localStorage.getItem('userRole')!) : null;\n      this.isLoggedIn = !!token;\n\n      if (this.isLoggedIn) {\n        this.userService.getUser().subscribe({\n          next: (user) => this.user = user,\n          error: () => this.user = null\n        });\n      }\n    }\n  }\n\n  getUserInitials(): string {\n    if (!this.user?.doptOfficer?.englishName) return 'NA';\n\n    // Split name by spaces and filter out honorifics\n    const honorifics = ['shri', 'mr', 'ms', 'mrs', 'dr', 'prof'];\n    const names = this.user.doptOfficer.englishName\n      .trim()\n      .split(/\\s+/)\n      .filter((n: string) => !honorifics.includes(n.toLowerCase()));\n\n    if (names.length === 0) return 'NA';\n\n    // If only one name left, just take first two letters\n    if (names.length === 1) {\n      return names[0].substring(0, 2).toUpperCase();\n    }\n\n    // Otherwise take first and last names\n    const first = names[0].charAt(0).toUpperCase();\n    const last = names[names.length - 1].charAt(0).toUpperCase();\n\n    return first + last;\n  }\n\n  goHome() {\n    if (this.router.url === '/homepage') {\n      this.toastService.showToast('You are already on Webpage', 'success');\n    } else {\n      this.router.navigateByUrl('/homepage');\n    }\n  }\n}\n","<div class=\"main-ncs-header-div\">\n  <div class=\"container d-flex align-items-center justify-content-between\">\n    <div class=\"logo-div\" (click)=\"goHome()\" style=\"cursor: pointer;\">\n      <img src=\"../../../assets/logo/ias-small-logo.png\" alt=\"ias-logo\" draggable=\"false\">\n      <h1>Indian Administrative Service <br>Central Association</h1>\n    </div>\n    <div class=\"navigationmenu d-flex align-items-center\">\n      <nav class=\"navbar navbar-expand-lg\">\n        <div class=\"container-fluid\">\n          <!-- Toggler (shows only below lg) -->\n          <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasNavbar\"\n            aria-controls=\"offcanvasNavbar\">\n            <span class=\"navbar-toggler-icon\"></span>\n          </button>\n\n          <!-- Normal Navbar (visible on lg and up) -->\n          <div class=\"collapse navbar-collapse d-none d-lg-flex\" id=\"navbarNavAltMarkup\">\n            <div class=\"navbar-nav ms-auto\">\n              <!-- <a class=\"nav-link\" [routerLink]=\"'/about-us'\" routerLinkActive=\"active-link\"\n                [routerLinkActiveOptions]=\"{ exact: true }\">About us</a> -->\n\n              <a class=\"nav-link\" [routerLink]=\"'membership'\" routerLinkActive=\"active-link\"\n                [routerLinkActiveOptions]=\"{ exact: true }\">Membership</a>\n\n              <a class=\"nav-link\" [routerLink]=\"'community'\" routerLinkActive=\"active-link\"\n                [routerLinkActiveOptions]=\"{ exact: true }\">Community</a>\n\n              <a class=\"nav-link\" [routerLink]=\"'news-blogs'\" routerLinkActive=\"active-link\"\n                [routerLinkActiveOptions]=\"{ exact: true }\">News</a>\n\n              <!-- <li class=\"nav-item dropdown\">\n                <a class=\"d-flex align-items-center text-decoration-none nav-link\" data-bs-toggle=\"dropdown\"\n                  aria-expanded=\"false\" id=\"dropdownMenuButton\">\n                  <span class=\"me-2\">Resources</span>\n                  <i class=\"arrow-icon\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"10\" fill=\"none\">\n                      <path d=\"M12.6 0.8L14 2.2 7 9.2 0 2.2 1.4 0.8 7 6.375 12.6 0.8Z\" fill=\"#222\" />\n                    </svg>\n                  </i>\n                </a>\n                <ul class=\"dropdown-menu dropdown-menu-dark\" aria-labelledby=\"dropdownMenuButton\">\n                  <li><a class=\"dropdown-item\" [routerLink]=\"'news-blogs'\">News & Blogs</a></li>\n                  <li><a class=\"dropdown-item\" [routerLink]=\"'caruna'\">Caruna</a></li>\n                </ul>\n              </li> -->\n\n              <a class=\"nav-link\" [routerLink]=\"'contact-us'\" routerLinkActive=\"active-link\"\n                [routerLinkActiveOptions]=\"{ exact: true }\">Contact us</a>\n            </div>\n          </div>\n\n          <!-- Offcanvas (only visible on mobile/tablet) -->\n          <div class=\"offcanvas offcanvas-start d-lg-none\" tabindex=\"-1\" id=\"offcanvasNavbar\"\n            aria-labelledby=\"offcanvasNavbarLabel\">\n            <div class=\"offcanvas-header\">\n              <h5 class=\"offcanvas-title\" id=\"offcanvasNavbarLabel\">Menu</h5>\n              <button type=\"button\" class=\"btn-close text-reset\" data-bs-dismiss=\"offcanvas\"\n                aria-label=\"Close\"></button>\n            </div>\n            <div class=\"offcanvas-body\">\n              <div class=\"navbar-nav\">\n                <!-- <a class=\"nav-link\" [routerLink]=\"'/about-us'\" routerLinkActive=\"active-link\"\n                  [routerLinkActiveOptions]=\"{ exact: true }\" data-bs-dismiss=\"offcanvas\">About us</a> -->\n\n                <a class=\"nav-link\" [routerLink]=\"'membership'\" routerLinkActive=\"active-link\"\n                  [routerLinkActiveOptions]=\"{ exact: true }\" data-bs-dismiss=\"offcanvas\">Membership</a>\n\n                <a class=\"nav-link\" [routerLink]=\"'community'\" routerLinkActive=\"active-link\"\n                  [routerLinkActiveOptions]=\"{ exact: true }\" data-bs-dismiss=\"offcanvas\">Community</a>\n\n                <a class=\"nav-link\" [routerLink]=\"'news-blogs'\" routerLinkActive=\"active-link\"\n                  [routerLinkActiveOptions]=\"{ exact: true }\" data-bs-dismiss=\"offcanvas\">News</a>\n\n                <a class=\"nav-link\" [routerLink]=\"'/contact-us'\" routerLinkActive=\"active-link\"\n                  [routerLinkActiveOptions]=\"{ exact: true }\" data-bs-dismiss=\"offcanvas\">Contact us</a>\n\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n\n      <ng-container *ngIf=\"isLoggedIn && isLoggedIn !== null\">\n\n        <ng-container *ngIf=\"userRole === 'admin'; else userMenu\">\n\n          <button class=\"btn btn-prime\" [routerLink]=\"'/home'\">Admin Dashboard</button>\n          <!-- <li><a class=\"dropdown-item\" [routerLink]=\"'/home/profile'\">Admin Profile</a></li>\n          <li><a class=\"dropdown-item\" [routerLink]=\"'/home'\">Admin Dashboard</a></li> -->\n        </ng-container>\n\n\n        <ng-template #userMenu>\n                    <button class=\"btn btn-prime\" [routerLink]=\"'/user-home'\">Member Dashboard</button>\n\n          <!-- <li><a class=\"dropdown-item\" [routerLink]=\"'/user-home/user-profile'\">User Profile</a></li>\n          <li><a class=\"dropdown-item\" [routerLink]=\"'/user-home'\">User Dashboard</a></li> -->\n        </ng-template>\n\n        <!-- <div class=\"dropdown\" *ngIf=\"isLoggedIn\">\n          <button class=\"btn dropdown-toggle user-profile d-flex align-items-center p-0\" type=\"button\"\n            id=\"profileDropdown\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n            <div class=\"avatar\">\n              <ng-container *ngIf=\"user?.doptOfficer?.profilePic; else initials\">\n                <img [src]=\"user?.doptOfficer?.profilePic\" alt=\"User Avatar\" />\n              </ng-container>\n              <ng-template #initials>\n                {{ getUserInitials() }}\n              </ng-template>\n            </div>\n\n          </button>\n\n\n          <ul class=\"dropdown-menu dropdown-menu-end\" aria-labelledby=\"profileDropdown\">\n\n            <ng-container *ngIf=\"userRole === 'admin'; else userMenu\">\n              <li><a class=\"dropdown-item\" [routerLink]=\"'/home/profile'\">Admin Profile</a></li>\n              <li><a class=\"dropdown-item\" [routerLink]=\"'/home'\">Admin Dashboard</a></li>\n            </ng-container>\n\n\n            <ng-template #userMenu>\n              <li><a class=\"dropdown-item\" [routerLink]=\"'/user-home/user-profile'\">User Profile</a></li>\n              <li><a class=\"dropdown-item\" [routerLink]=\"'/user-home'\">User Dashboard</a></li>\n            </ng-template>\n\n\n            <li>\n              <hr class=\"dropdown-divider\" />\n            </li>\n            <li><a class=\"dropdown-item text-danger\" (click)=\"logout()\" style=\"cursor: pointer;\">Logout</a></li>\n          </ul>\n        </div> -->\n      </ng-container>\n      <ng-container *ngIf=\"!isLoggedIn && isLoggedIn !== null\"><button class=\"btn btn-prime\" [routerLink]=\"'/login'\">Log\n          in / Sign up</button></ng-container>\n    </div>\n  </div>\n</div>","import { Component } from '@angular/core';\nimport { RouterLink } from \"@angular/router\";\n\n@Component({\n  selector: 'app-ias-footer',\n  standalone: true,\n  imports: [RouterLink],\n  templateUrl: './ias-footer.component.html',\n  styleUrl: './ias-footer.component.scss'\n})\nexport class IasFooterComponent {\n\n}\n","<footer class=\"footer\">\n  <div class=\"container\">\n    <div class=\"footer-top\">\n      <!-- Left Section -->\n      <div class=\"footer-logo\">\n        <div class=\"sbvhs d-flex align-items-center gap-2\">\n          <img src=\"../../../assets/logo/ias-small-logo.png\" alt=\"IAS Association Logo\" />\n          <p class=\"org-name m-0 p-0\">Indian Administrative Service <br>Central Association</p>\n        </div>\n        <div class=\"last-updated\">Last updated: 22-09-2025</div>\n      </div>\n\n      <!-- IAS Foundation Links -->\n      <div class=\"footer-links\">\n        <h4>Important Links</h4>\n        <!-- <a [routerLink]=\"'about-us'\">About Us</a> -->\n        <a [routerLink]=\"'community'\">Community</a>\n        <a [routerLink]=\"'membership'\">Membership</a>\n        <a [routerLink]=\"'contact-us'\">Contact Us</a>\n      </div>\n\n      <!-- Important Links -->\n      <div class=\"footer-links\">\n        <!-- <h4>Resources</h4> -->\n        <a [routerLink]=\"'news-blogs'\">News</a>\n      </div>\n\n      <!-- Contact & Social -->\n      <div class=\"footer-contact\">\n        <div class=\"social-icons\">\n          <!-- <a href=\"https://x.com/iasassociation\" target=\"_blank\"><i class=\"fab fa-linkedin-in\"></i></a> -->\n          <a href=\"https://x.com/iasassociation\" target=\"_blank\"><i class=\"fab fa-x-twitter\"></i></a>\n          <a href=\"https://www.facebook.com/IASassociation/\" target=\"_blank\"><i class=\"fab fa-facebook-f\"></i></a>\n          <!-- <a href=\"#\"><i class=\"fab fa-instagram\"></i></a>\n          <a href=\"#\"><i class=\"fab fa-youtube\"></i></a> -->\n        </div>\n        <div class=\"contact-info\">\n          <p class=\"d-flex gap-2\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"17\" height=\"18\" viewBox=\"0 0 17 18\" fill=\"none\">\n  <mask id=\"mask0_52081_3854\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"17\" height=\"18\">\n    <rect width=\"17\" height=\"18\" fill=\"#D9D9D9\"/>\n  </mask>\n  <g mask=\"url(#mask0_52081_3854)\">\n    <path d=\"M8.50742 9C8.92164 9 9.27624 8.85313 9.57121 8.55938C9.86618 8.26563 10.0137 7.9125 10.0137 7.5C10.0137 7.0875 9.86618 6.73438 9.57121 6.44063C9.27624 6.14687 8.92164 6 8.50742 6C8.0932 6 7.73861 6.14687 7.44363 6.44063C7.14866 6.73438 7.00117 7.0875 7.00117 7.5C7.00117 7.9125 7.14866 8.26563 7.44363 8.55938C7.73861 8.85313 8.0932 9 8.50742 9ZM8.50742 14.5125C10.0388 13.1125 11.1747 11.8406 11.9153 10.6969C12.6559 9.55312 13.0262 8.5375 13.0262 7.65C13.0262 6.2875 12.59 5.17188 11.7176 4.30312C10.8452 3.43438 9.77518 3 8.50742 3C7.23966 3 6.1696 3.43438 5.29723 4.30312C4.42486 5.17188 3.98867 6.2875 3.98867 7.65C3.98867 8.5375 4.35896 9.55312 5.09953 10.6969C5.8401 11.8406 6.97607 13.1125 8.50742 14.5125ZM8.50742 16.5C6.48654 14.7875 4.97715 13.1969 3.97926 11.7281C2.98137 10.2594 2.48242 8.9 2.48242 7.65C2.48242 5.775 3.08806 4.28125 4.29934 3.16875C5.51061 2.05625 6.91331 1.5 8.50742 1.5C10.1015 1.5 11.5042 2.05625 12.7155 3.16875C13.9268 4.28125 14.5324 5.775 14.5324 7.65C14.5324 8.9 14.0335 10.2594 13.0356 11.7281C12.0377 13.1969 10.5283 14.7875 8.50742 16.5Z\" fill=\"#1C1B1F\"/>\n  </g>\n</svg>\n            <span>Indian Administrative Service <br>Central  Association, New Delhi</span>\n          </p>\n          <div class=\"d-flex gap-2\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\">\n  <mask id=\"mask0_52081_3844\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"18\" height=\"18\">\n    <rect width=\"18\" height=\"18\" fill=\"#D9D9D9\"/>\n  </mask>\n  <g mask=\"url(#mask0_52081_3844)\">\n    <path d=\"M8.25 12.75H9.75V8.25H8.25V12.75ZM9 6.75C9.2125 6.75 9.39063 6.67812 9.53438 6.53438C9.67813 6.39062 9.75 6.2125 9.75 6C9.75 5.7875 9.67813 5.60938 9.53438 5.46562C9.39063 5.32187 9.2125 5.25 9 5.25C8.7875 5.25 8.60938 5.32187 8.46563 5.46562C8.32188 5.60938 8.25 5.7875 8.25 6C8.25 6.2125 8.32188 6.39062 8.46563 6.53438C8.60938 6.67812 8.7875 6.75 9 6.75ZM9 16.5C7.9625 16.5 6.9875 16.3031 6.075 15.9094C5.1625 15.5156 4.36875 14.9813 3.69375 14.3063C3.01875 13.6313 2.48438 12.8375 2.09063 11.925C1.69687 11.0125 1.5 10.0375 1.5 9C1.5 7.9625 1.69687 6.9875 2.09063 6.075C2.48438 5.1625 3.01875 4.36875 3.69375 3.69375C4.36875 3.01875 5.1625 2.48438 6.075 2.09063C6.9875 1.69687 7.9625 1.5 9 1.5C10.0375 1.5 11.0125 1.69687 11.925 2.09063C12.8375 2.48438 13.6313 3.01875 14.3063 3.69375C14.9813 4.36875 15.5156 5.1625 15.9094 6.075C16.3031 6.9875 16.5 7.9625 16.5 9C16.5 10.0375 16.3031 11.0125 15.9094 11.925C15.5156 12.8375 14.9813 13.6313 14.3063 14.3063C13.6313 14.9813 12.8375 15.5156 11.925 15.9094C11.0125 16.3031 10.0375 16.5 9 16.5ZM9 15C10.675 15 12.0938 14.4187 13.2563 13.2563C14.4187 12.0938 15 10.675 15 9C15 7.325 14.4187 5.90625 13.2563 4.74375C12.0938 3.58125 10.675 3 9 3C7.325 3 5.90625 3.58125 4.74375 4.74375C3.58125 5.90625 3 7.325 3 9C3 10.675 3.58125 12.0938 4.74375 13.2563C5.90625 14.4187 7.325 15 9 15Z\" fill=\"#1C1B1F\"/>\n  </g>\n</svg>\n            <div>\n              Need help?<span class=\"text-muted\"> Contact Help Desk:</span>\n              <div class=\"mt-2 needlink\">\n                <a href=\"tel:+919876543210\" class=\"d-block text-primary\">[+91 9910659965]</a>\n                <a href=\"mailto:association.ias@gmail.com\"\n                  class=\"d-block text-primary\">[association.ias&#64;gmail.com]</a>\n              </div>\n            </div>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"footer-bottom\">\n    <div class=\"container d-flex align-items-center justify-content-between\">\n      <p class=\"m-0\">© 2024 - Copyright Ministry of Electronics and Information Technology. All rights reserved.</p>\n      <div class=\"footer-policies\">\n        <a routerLink=\"/Refund-Cancellation-Policy\">Refund & Cancellation Policy</a>\n        <a routerLink=\"/Terms-Conditions\">Terms & Conditions</a>\n        <a routerLink=\"/Privacy-Policy\">Privacy Policy</a>\n      </div>\n    </div>\n  </div>\n</footer>","import { Component } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\n@Component({\n  selector: 'app-accessibility-header',\n  standalone: true,\n  imports: [RouterModule],\n  templateUrl: './accessibility-header.component.html',\n  styleUrl: './accessibility-header.component.scss'\n})\nexport class AccessibilityHeaderComponent {\n    isMirrored: boolean = false;\n  toggleDarkMode(): void {\n    this.isMirrored = !this.isMirrored;\n\n  }\n\n  sendMail() {\nwindow.location.href = \"mailto:association.ias@gmail.com?subject=Help%20Desk%20Support&body=Hello,%0D%0A%0D%0AI am contacting the Help Desk for assistance.%0D%0A%0D%0ARegards,\";\n}\n\nscrollToContent() {\n  const element = document.getElementById('mainContent');\n  if (element) {\n    element.scrollIntoView({ behavior: 'smooth', block: 'center' });\n  }\n}\n\n}\n","<div class=\"main-access-header-div\">\n  <div class=\"inner-access container d-flex align-items-center justify-content-end\">\n    <!-- <div class=\"left-flag-div d-flex align-items-center gap-2\">\n            <img src=\"../../../assets/images/Inidan-Flag.png\" alt=\"india-flag\">\n            <h1 class=\"gov-text m-0\">Government of India</h1>\n        </div> -->\n    <div class=\"right-access-div d-flex align-items-center justify-content-between gap-4\">\n      <!-- <h1 class=\"skip-text\" (click)=\"scrollToContent()\">Skip to Main Content </h1> -->\n      <!-- <div class=\"screen-reader-div d-flex align-items-center gap-1\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"21\" height=\"20\" viewBox=\"0 0 21 20\" fill=\"none\">\n          <mask id=\"mask0_2008_3252\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"21\"\n            height=\"20\">\n            <rect x=\"0.266602\" width=\"20\" height=\"20\" fill=\"#D9D9D9\" />\n          </mask>\n          <g mask=\"url(#mask0_2008_3252)\">\n            <path\n              d=\"M3.85639 17.9166C3.4408 17.9166 3.08583 17.7695 2.7915 17.4751C2.49715 17.1808 2.34998 16.8258 2.34998 16.4102V3.58975C2.34998 3.17415 2.49715 2.81919 2.7915 2.52486C3.08583 2.23051 3.4408 2.08333 3.85639 2.08333H10.7554L9.50541 3.33331H3.85639C3.7816 3.33331 3.72016 3.35736 3.67208 3.40544C3.624 3.45352 3.59995 3.51496 3.59995 3.58975V16.4102C3.59995 16.485 3.624 16.5464 3.67208 16.5945C3.72016 16.6426 3.7816 16.6666 3.85639 16.6666H12.5102C12.585 16.6666 12.6464 16.6426 12.6945 16.5945C12.7426 16.5464 12.7666 16.485 12.7666 16.4102V14.375H14.0166V16.4102C14.0166 16.8258 13.8694 17.1808 13.5751 17.4751C13.2807 17.7695 12.9258 17.9166 12.5102 17.9166H3.85639ZM5.47498 14.7916V13.5417H10.8916V14.7916H5.47498ZM5.47498 12.3878V11.1378H9.22493V12.3878H5.47498ZM12.5583 12.0753L9.52143 9.03844H7.14164V5.28846H9.52143L12.5583 2.25163V12.0753ZM14.2249 9.82209V4.50481C14.6875 4.79113 15.0463 5.17227 15.3011 5.64823C15.5559 6.12419 15.6833 6.62926 15.6833 7.16344C15.6833 7.69762 15.5545 8.2027 15.297 8.67867C15.0396 9.15463 14.6822 9.53577 14.2249 9.82209ZM14.2249 13.2532V11.9359C15.1384 11.5566 15.8876 10.9319 16.4725 10.0617C17.0575 9.1915 17.3499 8.22541 17.3499 7.16344C17.3499 6.10148 17.0575 5.13541 16.4725 4.26521C15.8876 3.39502 15.1384 2.77028 14.2249 2.391V1.07373C15.4877 1.47544 16.5326 2.23666 17.3595 3.35738C18.1864 4.4781 18.5999 5.74679 18.5999 7.16344C18.5999 8.58011 18.1864 9.8488 17.3595 10.9695C16.5326 12.0902 15.4877 12.8515 14.2249 13.2532Z\"\n              fill=\"white\" />\n          </g>\n        </svg>\n        <h1 class=\"skip-text\">Screen Reader</h1>\n      </div>\n      <div class=\"font-inc-dec d-flex align-items-center\">\n        <div class=\"inc-div d-flex align-items-center\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"17\" height=\"16\"\n            viewBox=\"0 0 17 16\" fill=\"none\">\n            <g clip-path=\"url(#clip0_2008_3264)\">\n              <path\n                d=\"M7.92941 2.13395C7.77645 2.14222 7.62909 2.19422 7.50481 2.28377C7.38054 2.37333 7.2846 2.49668 7.22836 2.63916L3.21691 12.7996H2.93253C2.86186 12.7986 2.79169 12.8116 2.72611 12.838C2.66052 12.8643 2.60083 12.9035 2.5505 12.9531C2.50017 13.0027 2.46021 13.0618 2.43293 13.127C2.40565 13.1923 2.3916 13.2622 2.3916 13.3329C2.3916 13.4036 2.40565 13.4736 2.43293 13.5388C2.46021 13.604 2.50017 13.6631 2.5505 13.7127C2.60083 13.7624 2.66052 13.8015 2.72611 13.8278C2.79169 13.8542 2.86186 13.8672 2.93253 13.8662H5.06586C5.13654 13.8672 5.2067 13.8542 5.27229 13.8278C5.33787 13.8015 5.39756 13.7624 5.44789 13.7127C5.49822 13.6631 5.53819 13.604 5.56547 13.5388C5.59275 13.4736 5.60679 13.4036 5.60679 13.3329C5.60679 13.2622 5.59275 13.1923 5.56547 13.127C5.53819 13.0618 5.49822 13.0027 5.44789 12.9531C5.39756 12.9035 5.33787 12.8643 5.27229 12.838C5.2067 12.8116 5.13654 12.7986 5.06586 12.7996H4.9367L5.78045 10.661C5.80873 10.6651 5.8373 10.6668 5.86586 10.6662H10.5846L11.5471 12.7996H11.4659C11.3952 12.7986 11.325 12.8116 11.2594 12.838C11.1939 12.8643 11.1342 12.9035 11.0838 12.9531C11.0335 13.0027 10.9935 13.0618 10.9663 13.127C10.939 13.1923 10.9249 13.2622 10.9249 13.3329C10.9249 13.4036 10.939 13.4736 10.9663 13.5388C10.9935 13.604 11.0335 13.6631 11.0838 13.7127C11.1342 13.7624 11.1939 13.8015 11.2594 13.8278C11.325 13.8542 11.3952 13.8672 11.4659 13.8662H13.5992C13.6699 13.8672 13.74 13.8542 13.8056 13.8278C13.8712 13.8015 13.9309 13.7624 13.9812 13.7127C14.0316 13.6631 14.0715 13.604 14.0988 13.5388C14.1261 13.4736 14.1401 13.4036 14.1401 13.3329C14.1401 13.2622 14.1261 13.1923 14.0988 13.127C14.0715 13.0618 14.0316 13.0027 13.9812 12.9531C13.9309 12.9035 13.8712 12.8643 13.8056 12.838C13.74 12.8116 13.6699 12.7986 13.5992 12.7996H13.3034L8.70128 2.60374C8.63494 2.45677 8.52575 2.33328 8.38801 2.24945C8.25027 2.16562 8.09042 2.12536 7.92941 2.13395ZM11.4659 3.19957C11.3952 3.19858 11.325 3.21163 11.2594 3.23799C11.1939 3.26434 11.1342 3.30347 11.0838 3.35309C11.0335 3.40271 10.9935 3.46184 10.9663 3.52705C10.939 3.59225 10.9249 3.66223 10.9249 3.73291C10.9249 3.80359 10.939 3.87356 10.9663 3.93877C10.9935 4.00397 11.0335 4.0631 11.0838 4.11273C11.1342 4.16235 11.1939 4.20148 11.2594 4.22783C11.325 4.25418 11.3952 4.26724 11.4659 4.26624H15.7325C15.8032 4.26724 15.8734 4.25418 15.939 4.22783C16.0045 4.20148 16.0642 4.16235 16.1146 4.11273C16.1649 4.0631 16.2049 4.00397 16.2321 3.93877C16.2594 3.87356 16.2735 3.80359 16.2735 3.73291C16.2735 3.66223 16.2594 3.59225 16.2321 3.52705C16.2049 3.46184 16.1649 3.40271 16.1146 3.35309C16.0642 3.30347 16.0045 3.26434 15.939 3.23799C15.8734 3.21163 15.8032 3.19858 15.7325 3.19957H11.4659ZM8.02107 4.98707L10.1034 9.59957H6.20024L8.02107 4.98707Z\"\n                fill=\"white\" />\n            </g>\n            <defs>\n              <clipPath id=\"clip0_2008_3264\">\n                <rect width=\"16\" height=\"16\" fill=\"white\" transform=\"translate(0.266602)\" />\n              </clipPath>\n            </defs>\n          </svg></div>\n        <div class=\"inc-div d-flex align-items-center\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"17\" height=\"16\"\n            viewBox=\"0 0 17 16\" fill=\"none\">\n            <path\n              d=\"M7.92941 2.13395C7.77645 2.14222 7.62909 2.19422 7.50481 2.28377C7.38054 2.37333 7.2846 2.49668 7.22836 2.63916L3.21691 12.7996H2.93253C2.86186 12.7986 2.79169 12.8116 2.72611 12.838C2.66052 12.8643 2.60083 12.9035 2.5505 12.9531C2.50017 13.0027 2.46021 13.0618 2.43293 13.127C2.40565 13.1923 2.3916 13.2622 2.3916 13.3329C2.3916 13.4036 2.40565 13.4736 2.43293 13.5388C2.46021 13.604 2.50017 13.6631 2.5505 13.7127C2.60083 13.7624 2.66052 13.8015 2.72611 13.8278C2.79169 13.8542 2.86186 13.8672 2.93253 13.8662H5.06586C5.13654 13.8672 5.2067 13.8542 5.27229 13.8278C5.33787 13.8015 5.39756 13.7624 5.44789 13.7127C5.49822 13.6631 5.53819 13.604 5.56547 13.5388C5.59275 13.4736 5.60679 13.4036 5.60679 13.3329C5.60679 13.2622 5.59275 13.1923 5.56547 13.127C5.53819 13.0618 5.49822 13.0027 5.44789 12.9531C5.39756 12.9035 5.33787 12.8643 5.27229 12.838C5.2067 12.8116 5.13654 12.7986 5.06586 12.7996H4.9367L5.78045 10.661C5.80873 10.6651 5.8373 10.6668 5.86586 10.6662H10.5846L11.5471 12.7996H11.4659C11.3952 12.7986 11.325 12.8116 11.2594 12.838C11.1939 12.8643 11.1342 12.9035 11.0838 12.9531C11.0335 13.0027 10.9935 13.0618 10.9663 13.127C10.939 13.1923 10.9249 13.2622 10.9249 13.3329C10.9249 13.4036 10.939 13.4736 10.9663 13.5388C10.9935 13.604 11.0335 13.6631 11.0838 13.7127C11.1342 13.7624 11.1939 13.8015 11.2594 13.8278C11.325 13.8542 11.3952 13.8672 11.4659 13.8662H13.5992C13.6699 13.8672 13.74 13.8542 13.8056 13.8278C13.8712 13.8015 13.9309 13.7624 13.9812 13.7127C14.0316 13.6631 14.0715 13.604 14.0988 13.5388C14.1261 13.4736 14.1401 13.4036 14.1401 13.3329C14.1401 13.2622 14.1261 13.1923 14.0988 13.127C14.0715 13.0618 14.0316 13.0027 13.9812 12.9531C13.9309 12.9035 13.8712 12.8643 13.8056 12.838C13.74 12.8116 13.6699 12.7986 13.5992 12.7996H13.3034L8.70128 2.60374C8.63494 2.45677 8.52575 2.33328 8.38801 2.24945C8.25027 2.16562 8.09042 2.12536 7.92941 2.13395ZM8.02107 4.98707L10.1034 9.59957H6.20024L8.02107 4.98707Z\"\n              fill=\"white\" />\n          </svg></div>\n        <div class=\"inc-div d-flex align-items-center\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"17\" height=\"16\"\n            viewBox=\"0 0 17 16\" fill=\"none\">\n            <g clip-path=\"url(#clip0_2008_3260)\">\n              <path\n                d=\"M13.5909 1.05866C13.4496 1.06087 13.315 1.11903 13.2165 1.22039C13.1181 1.32175 13.0639 1.45801 13.0659 1.59928V3.19928H11.4659C11.3952 3.19828 11.325 3.21134 11.2594 3.2377C11.1939 3.26405 11.1342 3.30317 11.0838 3.3528C11.0335 3.40242 10.9935 3.46155 10.9663 3.52676C10.939 3.59196 10.9249 3.66194 10.9249 3.73262C10.9249 3.8033 10.939 3.87327 10.9663 3.93848C10.9935 4.00368 11.0335 4.06281 11.0838 4.11244C11.1342 4.16206 11.1939 4.20119 11.2594 4.22754C11.325 4.25389 11.3952 4.26695 11.4659 4.26595H13.0659V5.86595C13.0649 5.93662 13.0779 6.00679 13.1043 6.07237C13.1306 6.13796 13.1698 6.19765 13.2194 6.24798C13.269 6.29831 13.3281 6.33827 13.3933 6.36555C13.4585 6.39283 13.5285 6.40688 13.5992 6.40688C13.6699 6.40688 13.7399 6.39283 13.8051 6.36555C13.8703 6.33827 13.9294 6.29831 13.979 6.24798C14.0286 6.19765 14.0678 6.13796 14.0941 6.07237C14.1205 6.00679 14.1335 5.93662 14.1325 5.86595V4.26595H15.7325C15.8032 4.26695 15.8734 4.25389 15.939 4.22754C16.0045 4.20119 16.0642 4.16206 16.1146 4.11244C16.1649 4.06281 16.2049 4.00368 16.2321 3.93848C16.2594 3.87327 16.2735 3.8033 16.2735 3.73262C16.2735 3.66194 16.2594 3.59196 16.2321 3.52676C16.2049 3.46155 16.1649 3.40242 16.1146 3.3528C16.0642 3.30317 16.0045 3.26405 15.939 3.2377C15.8734 3.21134 15.8032 3.19828 15.7325 3.19928H14.1325V1.59928C14.1335 1.52793 14.1202 1.4571 14.0933 1.391C14.0664 1.3249 14.0265 1.26487 13.976 1.21446C13.9255 1.16404 13.8654 1.12428 13.7992 1.09752C13.7331 1.07076 13.6622 1.05754 13.5909 1.05866ZM7.92941 2.13366C7.77645 2.14193 7.62909 2.19393 7.50481 2.28348C7.38054 2.37304 7.2846 2.49638 7.22836 2.63887L3.21691 12.7993H2.93253C2.86186 12.7983 2.79169 12.8113 2.72611 12.8377C2.66052 12.864 2.60083 12.9032 2.5505 12.9528C2.50017 13.0024 2.46021 13.0616 2.43293 13.1268C2.40565 13.192 2.3916 13.2619 2.3916 13.3326C2.3916 13.4033 2.40565 13.4733 2.43293 13.5385C2.46021 13.6037 2.50017 13.6628 2.5505 13.7124C2.60083 13.7621 2.66052 13.8012 2.72611 13.8275C2.79169 13.8539 2.86186 13.867 2.93253 13.866H5.06586C5.13654 13.867 5.2067 13.8539 5.27229 13.8275C5.33787 13.8012 5.39756 13.7621 5.44789 13.7124C5.49822 13.6628 5.53819 13.6037 5.56547 13.5385C5.59275 13.4733 5.60679 13.4033 5.60679 13.3326C5.60679 13.2619 5.59275 13.192 5.56547 13.1268C5.53819 13.0616 5.49822 13.0024 5.44789 12.9528C5.39756 12.9032 5.33787 12.864 5.27229 12.8377C5.2067 12.8113 5.13654 12.7983 5.06586 12.7993H4.9367L5.78045 10.6607C5.80873 10.6648 5.8373 10.6665 5.86586 10.666H10.5846L11.5471 12.7993H11.4659C11.3952 12.7983 11.325 12.8113 11.2594 12.8377C11.1939 12.864 11.1342 12.9032 11.0838 12.9528C11.0335 13.0024 10.9935 13.0616 10.9663 13.1268C10.939 13.192 10.9249 13.2619 10.9249 13.3326C10.9249 13.4033 10.939 13.4733 10.9663 13.5385C10.9935 13.6037 11.0335 13.6628 11.0838 13.7124C11.1342 13.7621 11.1939 13.8012 11.2594 13.8275C11.325 13.8539 11.3952 13.867 11.4659 13.866H13.5992C13.6699 13.867 13.74 13.8539 13.8056 13.8275C13.8712 13.8012 13.9309 13.7621 13.9812 13.7124C14.0316 13.6628 14.0715 13.6037 14.0988 13.5385C14.1261 13.4733 14.1401 13.4033 14.1401 13.3326C14.1401 13.2619 14.1261 13.192 14.0988 13.1268C14.0715 13.0616 14.0316 13.0024 13.9812 12.9528C13.9309 12.9032 13.8712 12.864 13.8056 12.8377C13.74 12.8113 13.6699 12.7983 13.5992 12.7993H13.3034L8.70128 2.60345C8.63494 2.45648 8.52575 2.33299 8.38801 2.24916C8.25027 2.16532 8.09042 2.12507 7.92941 2.13366ZM8.02107 4.98678L10.1034 9.59928H6.20024L8.02107 4.98678Z\"\n                fill=\"white\" />\n            </g>\n            <defs>\n              <clipPath id=\"clip0_2008_3260\">\n                <rect width=\"16\" height=\"16\" fill=\"white\" transform=\"translate(0.266602)\" />\n              </clipPath>\n            </defs>\n          </svg></div>\n      </div> -->\n      <!-- <svg [class.mirrored]=\"isMirrored\" class=\"dark-mode\" xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"24\"\n        viewBox=\"0 0 25 24\" fill=\"none\">\n        <path\n          d=\"M12.2666 20.3334C16.869 20.3334 20.6 16.6025 20.6 12.0001C20.6 7.39771 16.869 3.66675 12.2666 3.66675C7.66425 3.66675 3.93329 7.39771 3.93329 12.0001C3.93329 16.6025 7.66425 20.3334 12.2666 20.3334ZM12.2666 19.0834V4.91675C16.1786 4.91675 19.35 8.08806 19.35 12.0001C19.35 15.9121 16.1786 19.0834 12.2666 19.0834Z\"\n          fill=\"white\" />\n      </svg> -->\n\n      <div class=\"social-icons\">\n        <a href=\"https://x.com/iasassociation\" target=\"_blank\"><i class=\"fab fa-x-twitter\"></i></a>\n        <a href=\"https://www.facebook.com/IASassociation/\" target=\"_blank\"><i class=\"fab fa-facebook-f\"></i></a>\n      </div>\n\n      <h1 class=\"skip-text d-flex align-items-center gap-2\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\"\n          height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\">\n          <mask _ngcontent-ng-c2485631207=\"\" id=\"mask0_8942_12501\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"18\"\n            height=\"18\" style=\"mask-type: alpha;\">\n            <rect _ngcontent-ng-c2485631207=\"\" width=\"18\" height=\"18\" fill=\"white\"></rect>\n          </mask>\n          <g _ngcontent-ng-c2485631207=\"\" mask=\"url(#mask0_8942_12501)\">\n            <path _ngcontent-ng-c2485631207=\"\"\n              d=\"M14.9625 15.75C13.4 15.75 11.8563 15.4094 10.3313 14.7281C8.80625 14.0469 7.41875 13.0813 6.16875 11.8313C4.91875 10.5813 3.95312 9.19375 3.27188 7.66875C2.59063 6.14375 2.25 4.6 2.25 3.0375C2.25 2.8125 2.325 2.625 2.475 2.475C2.625 2.325 2.8125 2.25 3.0375 2.25H6.075C6.25 2.25 6.40625 2.30937 6.54375 2.42812C6.68125 2.54688 6.7625 2.6875 6.7875 2.85L7.275 5.475C7.3 5.675 7.29375 5.84375 7.25625 5.98125C7.21875 6.11875 7.15 6.2375 7.05 6.3375L5.23125 8.175C5.48125 8.6375 5.77812 9.08437 6.12187 9.51562C6.46562 9.94688 6.84375 10.3625 7.25625 10.7625C7.64375 11.15 8.05 11.5094 8.475 11.8406C8.9 12.1719 9.35 12.475 9.825 12.75L11.5875 10.9875C11.7 10.875 11.8469 10.7906 12.0281 10.7344C12.2094 10.6781 12.3875 10.6625 12.5625 10.6875L15.15 11.2125C15.325 11.2625 15.4688 11.3531 15.5812 11.4844C15.6937 11.6156 15.75 11.7625 15.75 11.925V14.9625C15.75 15.1875 15.675 15.375 15.525 15.525C15.375 15.675 15.1875 15.75 14.9625 15.75Z\"\n              fill=\"white\"></path>\n          </g>\n        </svg>  <a href=\"tel:+919910659965\" class=\"text-white text-decoration-none\">\n    +91&nbsp;9910659965\n  </a></h1>\n      <h1 class=\"skip-text d-flex align-items-center gap-2\" (click)=\"sendMail()\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"24\" viewBox=\"0 0 25 24\" fill=\"none\">\n  <mask id=\"mask0_52583_330\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"25\" height=\"24\">\n    <rect x=\"0.5\" width=\"24\" height=\"24\" fill=\"#fff\"/>\n  </mask>\n  <g mask=\"url(#mask0_52583_330)\">\n    <path d=\"M12.5 1L21.55 6.4C21.85 6.58333 22.0833 6.83333 22.25 7.15C22.4167 7.46667 22.5 7.8 22.5 8.15V19C22.5 19.55 22.3042 20.0208 21.9125 20.4125C21.5208 20.8042 21.05 21 20.5 21H4.5C3.95 21 3.47917 20.8042 3.0875 20.4125C2.69583 20.0208 2.5 19.55 2.5 19V8.15C2.5 7.8 2.58333 7.46667 2.75 7.15C2.91667 6.83333 3.15 6.58333 3.45 6.4L12.5 1ZM12.5 12.65L20.3 8L12.5 3.35L4.7 8L12.5 12.65ZM12.5 15L4.5 10.2V19H20.5V10.2L12.5 15Z\" fill=\"#1C1B1F\"/>\n  </g>\n</svg>Contact Help Desk</h1>\n\n    </div>\n  </div>\n\n</div>","import { Component } from '@angular/core';\nimport { RouterOutlet } from \"@angular/router\";\nimport { IasHeaderComponent } from \"../../../common/ias-header/ias-header.component\";\nimport { IasFooterComponent } from \"../../../common/ias-footer/ias-footer.component\";\nimport { AccessibilityHeaderComponent } from \"../../../common/accessibility-header/accessibility-header.component\";\n\n@Component({\n  selector: 'app-main-page',\n  standalone: true,\n  imports: [RouterOutlet, IasHeaderComponent, IasFooterComponent, AccessibilityHeaderComponent],\n  templateUrl: './main-page.component.html',\n  styleUrl: './main-page.component.scss'\n})\nexport class MainPageComponent {\n\n}\n","<div class=\"layout-wrapper\">\n  <app-accessibility-header></app-accessibility-header>\n  <app-ias-header></app-ias-header>\n  <router-outlet></router-outlet>\n  <app-ias-footer></app-ias-footer>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n  FormControl\n} from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { IasLoaderComponent } from \"../../common/ias-loader/ias-loader.component\";\nimport { environment } from '../../../environments/environment';\nimport { ToastService } from '../../common/toast.service';\ndeclare var bootstrap: any;\n\n@Component({\n  selector: 'app-ias-login',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n    HttpClientModule,\n    IasLoaderComponent\n  ],\n  templateUrl: './ias-login.component.html',\n  styleUrls: ['./ias-login.component.scss'],\n})\nexport class IasLoginComponent {\n  showPassword = false;\n  emailForm: FormGroup;\n  otpForm: FormGroup;\n  loading = false;\n  errorMessage = '';\n  showOtpStep = false;\n  otpControls = ['d1', 'd2', 'd3', 'd4', 'd5', 'd6'];\n  countdown!: number;\n  intervalId: any;\n  isResendDisabled = false;\n  tempToken: string = '';\n  toastMessage = '';\n  toastType: string = 'primary';\n  constructor(\n    private fb: FormBuilder,\n    private http: HttpClient,\n    private router: Router,\n    private toastService: ToastService,\n  ) {\n    this.emailForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email, Validators.pattern(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[A-Za-z]{2,}$/)]],\n      password: ['', Validators.required],\n    });\n\n    this.otpForm = this.fb.group({});\n    this.otpControls.forEach((ctrl) =>\n      this.otpForm.addControl(ctrl, new FormControl('', [Validators.required, Validators.pattern('[0-9]')]))\n    );\n  }\n\n  get email() {\n    return this.emailForm.get('email');\n  }\n\n  get password() {\n    return this.emailForm.get('password');\n  }\n\n  togglePasswordVisibility() {\n    this.showPassword = !this.showPassword;\n  }\n\n  // Step 1: Login\n  onSubmit() {\n    if (this.emailForm.valid) {\n      this.loading = true;\n\n      const payload = {\n        email: this.email?.value,\n        password: this.password?.value,\n      };\n\n      this.http\n        .post(`${environment.apiUrl}/accounts/login`, payload)\n        .subscribe({\n          next: (res: any) => {\n            this.loading = false;\n            const token = res?.data?.token;\n            if (token) {\n              this.tempToken = token;\n              this.showOtpStep = true;\n              this.showToast('✅ Login successful, please verify OTP.', 'success');\n              this.startCountdown(59);\n            } else {\n              this.showToast('⚠️ No access token received.', 'warning');\n            }\n          },\n          error: (err) => {\n            this.loading = false;\n            this.showToast(err.error?.message || '❌ Invalid email or password.', 'danger');\n          },\n        });\n    } else {\n      this.emailForm.markAllAsTouched();\n      this.showToast('⚠️ Please fill in all required fields.', 'warning');\n    }\n  }\n\n  showToast(message: string, type: string = 'primary') {\n    this.toastMessage = message;\n    this.toastType = type;\n\n    const toastEl = document.getElementById('liveToast');\n    if (toastEl) {\n      const toast = new bootstrap.Toast(toastEl, { delay: 3000 });\n      toast.show();\n    }\n  }\n  startCountdown(seconds: number) {\n    this.countdown = seconds;\n    this.isResendDisabled = true;\n\n    clearInterval(this.intervalId);\n    this.intervalId = setInterval(() => {\n      if (this.countdown > 0) {\n        this.countdown--;\n      } else {\n        this.isResendDisabled = false;\n        clearInterval(this.intervalId);\n      }\n    }, 1000);\n  }\n  onResendOtp() {\n    // 👉 call your API to resend OTP here\n\n    this.startCountdown(59); // restart timer\n  }\n  handleKeyDown(event: KeyboardEvent, index: number) {\n    const input = event.target as HTMLInputElement;\n\n    // ✅ allow navigation keys\n    const allowedKeys = ['Backspace', 'Delete', 'ArrowLeft', 'ArrowRight', 'Tab'];\n    if (allowedKeys.includes(event.key)) {\n      // Handle backspace navigation\n      if (event.key === 'Backspace' && !input.value && index > 0) {\n        const prev = input.parentElement?.children[index - 1] as HTMLInputElement | undefined;\n        prev?.focus();\n      }\n      return; // allow\n    }\n\n    // ✅ block non-digits\n    if (!/^[0-9]$/.test(event.key)) {\n      event.preventDefault();\n    }\n  }\n\n\n  // OTP Field Navigation\n  onOtpInput(event: any, index: number) {\n    const input = event.target;\n    if (input.value && index < this.otpControls.length - 1) {\n      const next = document.querySelectorAll<HTMLInputElement>('.otp-inputs input')[index + 1];\n      next?.focus();\n    }\n  }\n\n  // Step 2: Verify OTP\nsubmitOtp() {\n  if (this.otpForm.valid) {\n    this.loading = true;\n\n    const otpValue = this.otpControls\n      .map(ctrl => this.otpForm.get(ctrl)?.value)\n      .join('');\n\n    const otpPayload = {\n      otp: otpValue,\n      action: 'login',\n      token: this.tempToken\n    };\n\n    this.http.patch(`${environment.apiUrl}/accounts/otpverify`, otpPayload)\n      .subscribe({\n        next: (res: any) => {\n          this.loading = false;\n\n          const { sessionToken, userDetails } = res?.data || {};\n          const { email, role, status } = userDetails || {};\n\n          if (sessionToken) {\n            // ✅ Save session token\n            localStorage.setItem('authToken', res.data.sessionToken);\n            localStorage.setItem('refreshToken', res.data.refreshToken);\n            localStorage.setItem('expireAt', res.data.expireAt);\n            localStorage.setItem('isLoggedIn', 'true');\n\n            // Encode email and role in Base64\n            if (email) localStorage.setItem('userEmail', btoa(email));\n            if (role) localStorage.setItem('userRole', btoa(role));\n            if (status) localStorage.setItem('userStatus', btoa(status));\n\n            // ✅ Show success toast\n            this.toastService.showToast('Welcome to IASCA portal', 'success');\n\n            // 🔑 Check for redirectUrl\n            const redirectUrl = localStorage.getItem('redirectUrl');\n\n            if (redirectUrl) {\n              localStorage.removeItem('redirectUrl');\n              this.router.navigateByUrl(redirectUrl);\n            } else {\n              this.router.navigate(['homepage']);\n            }\n\n          } else {\n            this.errorMessage = 'No session token received after OTP verification.';\n          }\n        },\n        error: (err) => {\n          this.loading = false;\n          this.showToast(err.error?.message || '❌ Invalid OTP. Please try again.', 'danger');\n          this.errorMessage = err.error?.message || 'Invalid OTP. Please try again.';\n        }\n      });\n  } else {\n    this.otpForm.markAllAsTouched();\n  }\n}\n\n}\n","<app-ias-loader *ngIf=\"loading\"></app-ias-loader>\n<!-- Bootstrap Toast -->\n<div class=\"toast-container position-fixed top-0 end-0 p-3\">\n  <div id=\"liveToast\" class=\"toast align-items-center text-bg-{{ toastType }} border-0\" role=\"alert\"\n    aria-live=\"assertive\" aria-atomic=\"true\">\n    <div class=\"d-flex\">\n      <div class=\"toast-body\">\n        {{ toastMessage }}\n      </div>\n      <button type=\"button\" class=\"btn-close btn-close-white me-2 m-auto\" data-bs-dismiss=\"toast\"\n        aria-label=\"Close\"></button>\n    </div>\n  </div>\n</div>\n\n<div class=\"main-login-component d-flex align-items-center\">\n  <div class=\"intro-image-div position-relative\" [routerLink]=\"''\" style=\"cursor: pointer;\">\n  </div>\n  <div class=\"login-form-div d-flex flex-column align-items-center\">\n    <div class=\"inneradjustment\" *ngIf=\"!showOtpStep\">\n      <h1>Login to your account</h1>\n\n      <form [formGroup]=\"emailForm\" (ngSubmit)=\"onSubmit()\">\n        <label for=\"email\">Email ID</label>\n        <input type=\"email\" id=\"email\" formControlName=\"email\" placeholder=\"Enter Valid Email Id\" />\n        <div *ngIf=\"email?.touched && email?.invalid\" class=\"error-message\">\n          <small *ngIf=\"email?.errors?.['required']\">Email is required.</small>\n          <small *ngIf=\"email?.errors?.['pattern']\">Enter a Valid Email Id</small>\n        </div>\n\n        <label for=\"password\">Password</label>\n        <div class=\"password-input\">\n          <input [type]=\"showPassword ? 'text' : 'password'\" id=\"password\" formControlName=\"password\"\n            placeholder=\"Enter your password\" />\n          <button type=\"button\" (click)=\"togglePasswordVisibility()\" class=\"eye-button\">\n            <svg *ngIf=\"!showPassword\" xmlns=\"http://www.w3.org/2000/svg\" width=\"19\" height=\"19\" viewBox=\"0 0 19 19\"\n              fill=\"none\">\n              <g clip-path=\"url(#clip0_50828_258)\">\n                <path\n                  d=\"M9.49996 4.75002C12.5004 4.75002 15.1762 6.43627 16.4825 9.10419C15.1762 11.7721 12.5004 13.4584 9.49996 13.4584C6.49954 13.4584 3.82371 11.7721 2.51746 9.10419C3.82371 6.43627 6.49954 4.75002 9.49996 4.75002ZM9.49996 3.16669C5.54163 3.16669 2.16121 5.62877 0.791626 9.10419C2.16121 12.5796 5.54163 15.0417 9.49996 15.0417C13.4583 15.0417 16.8387 12.5796 18.2083 9.10419C16.8387 5.62877 13.4583 3.16669 9.49996 3.16669ZM9.49996 7.12502C10.5925 7.12502 11.4791 8.01169 11.4791 9.10419C11.4791 10.1967 10.5925 11.0834 9.49996 11.0834C8.40746 11.0834 7.52079 10.1967 7.52079 9.10419C7.52079 8.01169 8.40746 7.12502 9.49996 7.12502ZM9.49996 5.54169C7.53663 5.54169 5.93746 7.14085 5.93746 9.10419C5.93746 11.0675 7.53663 12.6667 9.49996 12.6667C11.4633 12.6667 13.0625 11.0675 13.0625 9.10419C13.0625 7.14085 11.4633 5.54169 9.49996 5.54169Z\"\n                  fill=\"#A9ACB1\" />\n              </g>\n              <defs>\n                <clipPath id=\"clip0_50828_258\">\n                  <rect width=\"19\" height=\"19\" fill=\"white\" />\n                </clipPath>\n              </defs>\n            </svg>\n            <svg *ngIf=\"showPassword\" xmlns=\"http://www.w3.org/2000/svg\" width=\"19\" height=\"19\" viewBox=\"0 0 19 19\"\n              fill=\"none\">\n              <g clip-path=\"url(#clip0_50828_300)\">\n                <path\n                  d=\"M9.50008 4.74999C12.5005 4.74999 15.1763 6.43624 16.4826 9.10416C16.0155 10.07 15.3584 10.9012 14.5747 11.5742L15.6909 12.6904C16.7913 11.7167 17.6622 10.4975 18.2084 9.10416C16.8388 5.62874 13.4584 3.16666 9.50008 3.16666C8.49467 3.16666 7.52883 3.32499 6.61841 3.61791L7.92467 4.92416C8.43925 4.82124 8.96175 4.74999 9.50008 4.74999ZM8.653 5.65249L10.2917 7.29124C10.743 7.48916 11.1072 7.85333 11.3051 8.30458L12.9438 9.94333C13.0072 9.67416 13.0547 9.38916 13.0547 9.09624C13.0626 7.13291 11.4634 5.54166 9.50008 5.54166C9.20717 5.54166 8.93008 5.58124 8.653 5.65249ZM1.59133 3.06374L3.713 5.18541C2.42258 6.19874 1.40133 7.54458 0.791748 9.10416C2.16133 12.5796 5.54175 15.0417 9.50008 15.0417C10.7034 15.0417 11.8592 14.8121 12.9201 14.3925L15.6276 17.1L16.7438 15.9837L2.70758 1.93958L1.59133 3.06374ZM7.52883 9.00124L9.59508 11.0675C9.56342 11.0754 9.53175 11.0833 9.50008 11.0833C8.40758 11.0833 7.52092 10.1967 7.52092 9.10416C7.52092 9.06458 7.52883 9.04083 7.52883 9.00124ZM4.83717 6.30958L6.22258 7.69499C6.0405 8.13041 5.93758 8.60541 5.93758 9.10416C5.93758 11.0675 7.53675 12.6667 9.50008 12.6667C9.99883 12.6667 10.4738 12.5637 10.9013 12.3817L11.6772 13.1575C10.9805 13.3475 10.2522 13.4583 9.50008 13.4583C6.49967 13.4583 3.82383 11.7721 2.51758 9.10416C3.07175 7.97208 3.87925 7.03791 4.83717 6.30958Z\"\n                  fill=\"#222222\" />\n              </g>\n              <defs>\n                <clipPath id=\"clip0_50828_300\">\n                  <rect width=\"19\" height=\"19\" fill=\"white\" />\n                </clipPath>\n              </defs>\n            </svg>\n          </button>\n        </div>\n        <div *ngIf=\"password?.touched && password?.invalid\" class=\"error-message\">\n          <small>Password is required.</small>\n        </div>\n\n\n        <div class=\"forgot\">\n          <a [routerLink]=\"'/forget-password'\">Forgot Password?</a>\n        </div>\n\n        <button class=\"login-btn\" type=\"submit\" [disabled]=\"emailForm.invalid\">Login</button>\n\n        <div class=\"signup-text\">\n          Don’t have an account? <a [routerLink]=\"'/signup'\">Sign up</a>\n        </div>\n\n        <div class=\"warning-box\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\">\n            <path\n              d=\"M6.33325 10.3333H7.66658V6.33331H6.33325V10.3333ZM6.99992 4.99998C7.18881 4.99998 7.34714 4.93609 7.47492 4.80831C7.6027 4.68053 7.66658 4.5222 7.66658 4.33331C7.66658 4.14442 7.6027 3.98609 7.47492 3.85831C7.34714 3.73054 7.18881 3.66665 6.99992 3.66665C6.81103 3.66665 6.6527 3.73054 6.52492 3.85831C6.39714 3.98609 6.33325 4.14442 6.33325 4.33331C6.33325 4.5222 6.39714 4.68053 6.52492 4.80831C6.6527 4.93609 6.81103 4.99998 6.99992 4.99998ZM6.99992 13.6666C6.0777 13.6666 5.21103 13.4916 4.39992 13.1416C3.58881 12.7916 2.88325 12.3166 2.28325 11.7166C1.68325 11.1166 1.20825 10.4111 0.858252 9.59998C0.508252 8.78887 0.333252 7.9222 0.333252 6.99998C0.333252 6.07776 0.508252 5.21109 0.858252 4.39998C1.20825 3.58887 1.68325 2.88331 2.28325 2.28331C2.88325 1.68331 3.58881 1.20831 4.39992 0.858313C5.21103 0.508313 6.0777 0.333313 6.99992 0.333313C7.92214 0.333313 8.78881 0.508313 9.59992 0.858313C10.411 1.20831 11.1166 1.68331 11.7166 2.28331C12.3166 2.88331 12.7916 3.58887 13.1416 4.39998C13.4916 5.21109 13.6666 6.07776 13.6666 6.99998C13.6666 7.9222 13.4916 8.78887 13.1416 9.59998C12.7916 10.4111 12.3166 11.1166 11.7166 11.7166C11.1166 12.3166 10.411 12.7916 9.59992 13.1416C8.78881 13.4916 7.92214 13.6666 6.99992 13.6666ZM6.99992 12.3333C8.48881 12.3333 9.74992 11.8166 10.7833 10.7833C11.8166 9.74998 12.3333 8.48887 12.3333 6.99998C12.3333 5.51109 11.8166 4.24998 10.7833 3.21665C9.74992 2.18331 8.48881 1.66665 6.99992 1.66665C5.51103 1.66665 4.24992 2.18331 3.21659 3.21665C2.18325 4.24998 1.66659 5.51109 1.66659 6.99998C1.66659 8.48887 2.18325 9.74998 3.21659 10.7833C4.24992 11.8166 5.51103 12.3333 6.99992 12.3333Z\"\n              fill=\"#A16800\" />\n          </svg>\n          <p>\n            This facility is strictly for serving and retired IAS officers only.\n            Unauthorized access is prohibited.\n          </p>\n        </div>\n      </form>\n    </div>\n    <div class=\"second-step\" *ngIf=\"showOtpStep\">\n      <h1>Enter OTP to Verify</h1>\n      <h4>An OTP has been sent to {{ emailForm.value.email }}</h4>\n      <form [formGroup]=\"otpForm\" (ngSubmit)=\"submitOtp()\">\n        <div class=\"otp-inputs\">\n          <input *ngFor=\"let ctrl of otpControls; let i = index\" type=\"text\" maxlength=\"1\" [formControlName]=\"ctrl\"\n            (input)=\"onOtpInput($event, i)\" (keydown)=\"handleKeyDown($event, i)\" autocomplete=\"off\" />\n\n        </div>\n\n        <button class=\"login-btn\" type=\"submit\" [disabled]=\"otpForm.invalid\">Continue</button>\n\n        <span class=\"d-flex align-items-center gap-2 mt-2\">\n          <p class=\"m-0\">Did not get the OTP?</p><span class=\"resend-text\" (click)=\"!isResendDisabled && onResendOtp()\"\n            [class.disabled]=\"isResendDisabled\">\n            Resend OTP\n          </span> in <span class=\"timer m-0\"> {{ countdown * 1000 | date:'mm:ss':'UTC' }}</span>\n        </span>\n      </form>\n    </div>\n  </div>\n</div>","import { CommonModule } from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { environment } from '../../../environments/environment';\ndeclare var bootstrap: any;\n\n\n@Component({\n  selector: 'app-ias-forgotpassword',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, RouterModule],\n  templateUrl: './ias-forgotpassword.component.html',\n  styleUrl: './ias-forgotpassword.component.scss',\n})\nexport class IasForgotpasswordComponent {\n  currentStep = 1;\n  emailForm: FormGroup;\n  otpForm: FormGroup;\n  passwordForm: FormGroup;\n  otpControls = ['d1', 'd2', 'd3', 'd4', 'd5', 'd6'];\n  showNewPassword = false;\n  showConfirmPassword = false;\n  token!: string;\n  action!: string;\n  sessionToken!: string;\n  countdown!: number;\n  intervalId: any;\n  isResendDisabled = false;\n\n\n\n  constructor(private fb: FormBuilder, private http: HttpClient) {\n    this.emailForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email,Validators.pattern(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[A-Za-z]{2,}$/)]]\n    });\n\n    const otpGroup: any = {};\n    this.otpControls.forEach(ctrl => {\n      otpGroup[ctrl] = ['', Validators.required];\n    });\n    this.otpForm = this.fb.group(otpGroup);\n\n\n    this.passwordForm = this.fb.group({\n      newPassword: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: ['', [Validators.required]]\n    });\n  }\n\n  showToast(message: string, type: 'success' | 'error' = 'success') {\n    const toastEl = document.getElementById('appToast');\n    const toastMsg = document.getElementById('toastMessage');\n\n    if (toastEl && toastMsg) {\n      // Set message\n      toastMsg.textContent = message;\n\n      // Change background color\n      toastEl.classList.remove('text-bg-success', 'text-bg-danger');\n      toastEl.classList.add(type === 'success' ? 'text-bg-success' : 'text-bg-danger');\n\n      // Show toast\n      const toast = new bootstrap.Toast(toastEl);\n      toast.show();\n    }\n  }\n\n\n  submitEmail() {\n    if (this.emailForm.valid) {\n      const payload = { email: this.emailForm.value.email };\n\n      this.http.post<any>(`${environment.apiUrl}/accounts/forgot-password`, payload)\n        .subscribe({\n          next: (res) => {\n            if (res.success) {\n              this.token = res.data.token;\n              this.action = res.data.action;\n              this.currentStep = 2;\n              this.startCountdown(59);\n              this.showToast('✅ Email sent successfully!', 'success');\n            }\n          },\n          error: (err) => {\n            const msg = err.error?.message || '❌ Failed to send email';\n            this.showToast(`❌ ${msg}`, 'error');\n          }\n        });\n    }\n  }\n\n  onOtpInput(event: Event, index: number) {\n    const input = event.target as HTMLInputElement;\n    if (input.value && index < this.otpControls.length - 1) {\n      const next = input.parentElement?.children[index + 1] as HTMLInputElement | undefined;\n      next?.focus();\n    }\n  }\n  startCountdown(seconds: number) {\n    this.countdown = seconds;\n    this.isResendDisabled = true;\n\n    clearInterval(this.intervalId);\n    this.intervalId = setInterval(() => {\n      if (this.countdown > 0) {\n        this.countdown--;\n      } else {\n        this.isResendDisabled = false;\n        clearInterval(this.intervalId);\n      }\n    }, 1000);\n  }\n  onResendOtp() {\n    // 👉 call your API to resend OTP here\n\n    this.startCountdown(59); // restart timer\n  }\nhandleKeyDown(event: KeyboardEvent, index: number) {\n    const input = event.target as HTMLInputElement;\n\n    // ✅ allow navigation keys\n    const allowedKeys = ['Backspace', 'Delete', 'ArrowLeft', 'ArrowRight', 'Tab'];\n    if (allowedKeys.includes(event.key)) {\n      // Handle backspace navigation\n      if (event.key === 'Backspace' && !input.value && index > 0) {\n        const prev = input.parentElement?.children[index - 1] as HTMLInputElement | undefined;\n        prev?.focus();\n      }\n      return; // allow\n    }\n\n    // ✅ block non-digits\n    if (!/^[0-9]$/.test(event.key)) {\n      event.preventDefault();\n    }\n  }\n  submitOtp() {\n    if (this.otpForm.valid) {\n      const otp = this.otpControls.map(ctrl => this.otpForm.get(ctrl)?.value).join('');\n      console.log('OTP entered:', otp);\n\n      if (!this.token || !this.action) {\n        console.error('Token or action not found. Did you call forgot-password first?');\n        return;\n      }\n\n      const payload = {\n        otp: otp,\n        action: this.action,\n        token: this.token\n      };\n\n      this.http.patch<any>(`${environment.apiUrl}/accounts/otpverify`, payload)\n        .subscribe({\n          next: (res) => {\n            if (res.success) {\n              this.sessionToken = res.data?.sessionToken;\n              this.currentStep = 3;\n              this.showToast('✅ OTP verified successfully!', 'success');\n            }\n          },\n        error: (err) => {\n          const msg = err.error?.message || '❌ Invalid OTP. Try again.';\n          this.showToast(`❌ ${msg}`, 'error');\n        }\n\n        });\n    }\n  }\n\n\n  togglePassword(field: 'new' | 'confirm') {\n    if (field === 'new') {\n      this.showNewPassword = !this.showNewPassword;\n    } else {\n      this.showConfirmPassword = !this.showConfirmPassword;\n    }\n  }\n\n\n  submitPassword() {\n    if (this.passwordForm.valid) {\n      const password = this.passwordForm.value.newPassword;\n      const confirmPassword = this.passwordForm.value.confirmPassword;\n\n      if (password !== confirmPassword) {\n        this.showToast('❌ Passwords do not match', 'error');\n        return;\n      }\n\n      if (!this.sessionToken) {\n        console.error('Session token missing. OTP verification must be done first.');\n        return;\n      }\n\n      const payload = {\n        password: password,\n        confirmPassword: confirmPassword\n      };\n\n      this.http.post<any>(\n        `${environment.apiUrl}/accounts/setup-password`,\n        payload,\n        {\n          headers: {\n            Authorization: `Bearer ${this.sessionToken}`\n          }\n        }\n      ).subscribe({\n        next: (res) => {\n          if (res.success) {\n            this.currentStep = 4;\n            this.showToast('✅ Password set successfully!', 'success');\n          }\n        },\n      error: (err) => {\n        const msg = err.error?.message || '❌ Failed to set password';\n        this.showToast(`❌ ${msg}`, 'error');\n      }\n      });\n    }\n  }\n\n}\n","<!-- Toast Container -->\n<div class=\"toast-container position-fixed top-0 end-0 p-3\" style=\"z-index: 1100\">\n  <div \n    id=\"appToast\" \n    class=\"toast align-items-center border-0\" \n    role=\"alert\" \n    aria-live=\"assertive\" \n    aria-atomic=\"true\">\n    <div class=\"d-flex\">\n      <div id=\"toastMessage\" class=\"toast-body\"></div>\n      <button \n        type=\"button\" \n        class=\"btn-close me-2 m-auto\" \n        data-bs-dismiss=\"toast\" \n        aria-label=\"Close\">\n      </button>\n    </div>\n  </div>\n</div>\n\n\n<div class=\"main-login-component d-flex align-items-center\">\n    <div class=\"intro-image-div position-relative\" [routerLink]=\"''\">\n    </div>\n    <div class=\"login-form-div d-flex flex-column align-items-center px-5\">\n\n        <!-- Step 1: Email -->\n        <div *ngIf=\"currentStep === 1\" class=\"first-step w-75\">\n            <h1>Forgot Password</h1>\n            <h4>Reset your password securely using your registered IAS email. </h4>\n            <form [formGroup]=\"emailForm\" (ngSubmit)=\"submitEmail()\">\n                <label for=\"email\">IAS Email ID</label>\n                <input type=\"email\" id=\"email\" formControlName=\"email\" placeholder=\"Enter Valid Email Id\" />\n                <div *ngIf=\"emailForm.get('email')?.touched && emailForm.get('email')?.invalid\" class=\"error-message\">\n                    <small *ngIf=\"emailForm.get('email')?.errors?.['required']\">Email is required.</small>\n                    <small *ngIf=\"emailForm.get('email')?.errors?.['email']\">Enter a valid email.</small>\n                    <small *ngIf=\"emailForm.get('email')?.errors?.['pattern']\">Enter a Valid Email Id</small>\n                </div>\n                <button class=\"login-btn\" type=\"submit\">Continue</button>\n\n                <div class=\"warning-box\">\n                    <!-- SVG Icon -->\n                    <p>\n                        This facility is strictly for serving and retired IAS officers only. A password reset link or\n                        OTP will be sent to your registered personal email, if already added.\n                    </p>\n                </div>\n            </form>\n        </div>\n\n        <!-- Step 2: OTP -->\n        <div *ngIf=\"currentStep === 2\" class=\"second-step w-75\">\n            <h1>Enter OTP to Verify</h1>\n            <h4>OTP has been sent to your registered email ID- {{ emailForm.value.email }}</h4>\n            <form [formGroup]=\"otpForm\" (ngSubmit)=\"submitOtp()\">\n                <div class=\"otp-inputs\">\n                    <input *ngFor=\"let ctrl of otpControls; let i = index\" type=\"text\" maxlength=\"1\"\n                        [formControlName]=\"ctrl\" (input)=\"onOtpInput($event, i)\" (keydown)=\"handleKeyDown($event, i)\" autocomplete=\"off\" />\n\n                </div>\n\n                <button class=\"login-btn\" type=\"submit\" [disabled]=\"otpForm.invalid\">Continue</button>\n\n                <span class=\"d-flex align-items-center gap-2 mt-2\">\n          <p class=\"m-0\">Did not get the OTP?</p><span class=\"resend-text\" (click)=\"!isResendDisabled && onResendOtp()\"\n            [class.disabled]=\"isResendDisabled\">\n            Resend OTP\n          </span> in <span class=\"timer m-0\"> {{ countdown * 1000 | date:'mm:ss':'UTC' }}</span>\n        </span>\n            </form>\n        </div>\n\n        <!-- Step 3: Password -->\n        <div *ngIf=\"currentStep === 3\" class=\"third-step w-75\">\n            <h1>Reset Password</h1>\n            <form [formGroup]=\"passwordForm\" (ngSubmit)=\"submitPassword()\">\n                <label for=\"newPassword\">New Password</label>\n                <div class=\"password-wrapper\">\n                    <input [type]=\"showNewPassword ? 'text' : 'password'\" id=\"newPassword\"\n                        formControlName=\"newPassword\" />\n                    <button type=\"button\" class=\"eye-btn\" (click)=\"togglePassword('new')\">\n                        <svg *ngIf=\"!showNewPassword\" xmlns=\"http://www.w3.org/2000/svg\" width=\"19\" height=\"19\"\n                            viewBox=\"0 0 19 19\" fill=\"none\">\n                            <g clip-path=\"url(#clip0_50828_258)\">\n                                <path\n                                    d=\"M9.49996 4.75002C12.5004 4.75002 15.1762 6.43627 16.4825 9.10419C15.1762 11.7721 12.5004 13.4584 9.49996 13.4584C6.49954 13.4584 3.82371 11.7721 2.51746 9.10419C3.82371 6.43627 6.49954 4.75002 9.49996 4.75002ZM9.49996 3.16669C5.54163 3.16669 2.16121 5.62877 0.791626 9.10419C2.16121 12.5796 5.54163 15.0417 9.49996 15.0417C13.4583 15.0417 16.8387 12.5796 18.2083 9.10419C16.8387 5.62877 13.4583 3.16669 9.49996 3.16669ZM9.49996 7.12502C10.5925 7.12502 11.4791 8.01169 11.4791 9.10419C11.4791 10.1967 10.5925 11.0834 9.49996 11.0834C8.40746 11.0834 7.52079 10.1967 7.52079 9.10419C7.52079 8.01169 8.40746 7.12502 9.49996 7.12502ZM9.49996 5.54169C7.53663 5.54169 5.93746 7.14085 5.93746 9.10419C5.93746 11.0675 7.53663 12.6667 9.49996 12.6667C11.4633 12.6667 13.0625 11.0675 13.0625 9.10419C13.0625 7.14085 11.4633 5.54169 9.49996 5.54169Z\"\n                                    fill=\"#A9ACB1\" />\n                            </g>\n                            <defs>\n                                <clipPath id=\"clip0_50828_258\">\n                                    <rect width=\"19\" height=\"19\" fill=\"white\" />\n                                </clipPath>\n                            </defs>\n                        </svg>\n                        <svg *ngIf=\"showNewPassword\" xmlns=\"http://www.w3.org/2000/svg\" width=\"19\" height=\"19\"\n                            viewBox=\"0 0 19 19\" fill=\"none\">\n                            <g clip-path=\"url(#clip0_50828_300)\">\n                                <path\n                                    d=\"M9.50008 4.74999C12.5005 4.74999 15.1763 6.43624 16.4826 9.10416C16.0155 10.07 15.3584 10.9012 14.5747 11.5742L15.6909 12.6904C16.7913 11.7167 17.6622 10.4975 18.2084 9.10416C16.8388 5.62874 13.4584 3.16666 9.50008 3.16666C8.49467 3.16666 7.52883 3.32499 6.61841 3.61791L7.92467 4.92416C8.43925 4.82124 8.96175 4.74999 9.50008 4.74999ZM8.653 5.65249L10.2917 7.29124C10.743 7.48916 11.1072 7.85333 11.3051 8.30458L12.9438 9.94333C13.0072 9.67416 13.0547 9.38916 13.0547 9.09624C13.0626 7.13291 11.4634 5.54166 9.50008 5.54166C9.20717 5.54166 8.93008 5.58124 8.653 5.65249ZM1.59133 3.06374L3.713 5.18541C2.42258 6.19874 1.40133 7.54458 0.791748 9.10416C2.16133 12.5796 5.54175 15.0417 9.50008 15.0417C10.7034 15.0417 11.8592 14.8121 12.9201 14.3925L15.6276 17.1L16.7438 15.9837L2.70758 1.93958L1.59133 3.06374ZM7.52883 9.00124L9.59508 11.0675C9.56342 11.0754 9.53175 11.0833 9.50008 11.0833C8.40758 11.0833 7.52092 10.1967 7.52092 9.10416C7.52092 9.06458 7.52883 9.04083 7.52883 9.00124ZM4.83717 6.30958L6.22258 7.69499C6.0405 8.13041 5.93758 8.60541 5.93758 9.10416C5.93758 11.0675 7.53675 12.6667 9.50008 12.6667C9.99883 12.6667 10.4738 12.5637 10.9013 12.3817L11.6772 13.1575C10.9805 13.3475 10.2522 13.4583 9.50008 13.4583C6.49967 13.4583 3.82383 11.7721 2.51758 9.10416C3.07175 7.97208 3.87925 7.03791 4.83717 6.30958Z\"\n                                    fill=\"#222222\" />\n                            </g>\n                            <defs>\n                                <clipPath id=\"clip0_50828_300\">\n                                    <rect width=\"19\" height=\"19\" fill=\"white\" />\n                                </clipPath>\n                            </defs>\n                        </svg>\n                    </button>\n                </div>\n                <label for=\"confirmPassword\">Confirm Password</label>\n                <div class=\"password-wrapper\">\n                    <input [type]=\"showConfirmPassword ? 'text' : 'password'\" id=\"confirmPassword\"\n                        formControlName=\"confirmPassword\" />\n                    <button type=\"button\" class=\"eye-btn\" (click)=\"togglePassword('confirm')\">\n                        <svg *ngIf=\"!showConfirmPassword\" xmlns=\"http://www.w3.org/2000/svg\" width=\"19\" height=\"19\"\n                            viewBox=\"0 0 19 19\" fill=\"none\">\n                            <g clip-path=\"url(#clip0_50828_258)\">\n                                <path\n                                    d=\"M9.49996 4.75002C12.5004 4.75002 15.1762 6.43627 16.4825 9.10419C15.1762 11.7721 12.5004 13.4584 9.49996 13.4584C6.49954 13.4584 3.82371 11.7721 2.51746 9.10419C3.82371 6.43627 6.49954 4.75002 9.49996 4.75002ZM9.49996 3.16669C5.54163 3.16669 2.16121 5.62877 0.791626 9.10419C2.16121 12.5796 5.54163 15.0417 9.49996 15.0417C13.4583 15.0417 16.8387 12.5796 18.2083 9.10419C16.8387 5.62877 13.4583 3.16669 9.49996 3.16669ZM9.49996 7.12502C10.5925 7.12502 11.4791 8.01169 11.4791 9.10419C11.4791 10.1967 10.5925 11.0834 9.49996 11.0834C8.40746 11.0834 7.52079 10.1967 7.52079 9.10419C7.52079 8.01169 8.40746 7.12502 9.49996 7.12502ZM9.49996 5.54169C7.53663 5.54169 5.93746 7.14085 5.93746 9.10419C5.93746 11.0675 7.53663 12.6667 9.49996 12.6667C11.4633 12.6667 13.0625 11.0675 13.0625 9.10419C13.0625 7.14085 11.4633 5.54169 9.49996 5.54169Z\"\n                                    fill=\"#A9ACB1\" />\n                            </g>\n                            <defs>\n                                <clipPath id=\"clip0_50828_258\">\n                                    <rect width=\"19\" height=\"19\" fill=\"white\" />\n                                </clipPath>\n                            </defs>\n                        </svg>\n                        <svg *ngIf=\"showConfirmPassword\" xmlns=\"http://www.w3.org/2000/svg\" width=\"19\" height=\"19\"\n                            viewBox=\"0 0 19 19\" fill=\"none\">\n                            <g clip-path=\"url(#clip0_50828_300)\">\n                                <path\n                                    d=\"M9.50008 4.74999C12.5005 4.74999 15.1763 6.43624 16.4826 9.10416C16.0155 10.07 15.3584 10.9012 14.5747 11.5742L15.6909 12.6904C16.7913 11.7167 17.6622 10.4975 18.2084 9.10416C16.8388 5.62874 13.4584 3.16666 9.50008 3.16666C8.49467 3.16666 7.52883 3.32499 6.61841 3.61791L7.92467 4.92416C8.43925 4.82124 8.96175 4.74999 9.50008 4.74999ZM8.653 5.65249L10.2917 7.29124C10.743 7.48916 11.1072 7.85333 11.3051 8.30458L12.9438 9.94333C13.0072 9.67416 13.0547 9.38916 13.0547 9.09624C13.0626 7.13291 11.4634 5.54166 9.50008 5.54166C9.20717 5.54166 8.93008 5.58124 8.653 5.65249ZM1.59133 3.06374L3.713 5.18541C2.42258 6.19874 1.40133 7.54458 0.791748 9.10416C2.16133 12.5796 5.54175 15.0417 9.50008 15.0417C10.7034 15.0417 11.8592 14.8121 12.9201 14.3925L15.6276 17.1L16.7438 15.9837L2.70758 1.93958L1.59133 3.06374ZM7.52883 9.00124L9.59508 11.0675C9.56342 11.0754 9.53175 11.0833 9.50008 11.0833C8.40758 11.0833 7.52092 10.1967 7.52092 9.10416C7.52092 9.06458 7.52883 9.04083 7.52883 9.00124ZM4.83717 6.30958L6.22258 7.69499C6.0405 8.13041 5.93758 8.60541 5.93758 9.10416C5.93758 11.0675 7.53675 12.6667 9.50008 12.6667C9.99883 12.6667 10.4738 12.5637 10.9013 12.3817L11.6772 13.1575C10.9805 13.3475 10.2522 13.4583 9.50008 13.4583C6.49967 13.4583 3.82383 11.7721 2.51758 9.10416C3.07175 7.97208 3.87925 7.03791 4.83717 6.30958Z\"\n                                    fill=\"#222222\" />\n                            </g>\n                            <defs>\n                                <clipPath id=\"clip0_50828_300\">\n                                    <rect width=\"19\" height=\"19\" fill=\"white\" />\n                                </clipPath>\n                            </defs>\n                        </svg> </button>\n                </div>\n                <button class=\"login-btn\" type=\"submit\">Reset password</button>\n            </form>\n        </div>\n\n        <!-- Step 4: Success -->\n        <div *ngIf=\"currentStep === 4\" class=\"fourth-step w-75\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"100\" viewBox=\"0 0 100 100\" fill=\"none\">\n                <circle cx=\"50\" cy=\"50\" r=\"50\" fill=\"#4B9700\" fill-opacity=\"0.3\" />\n                <circle cx=\"50\" cy=\"50\" r=\"45\" fill=\"#4B9700\" fill-opacity=\"0.3\" />\n                <circle cx=\"49.5\" cy=\"49.5\" r=\"39.5\" fill=\"#4B9700\" />\n                <path d=\"M30 51.5L40.2267 62.1713C40.9464 62.9223 42.1216 62.9963 42.9298 62.3414L70.5 40\"\n                    stroke=\"white\" stroke-width=\"5\" stroke-linecap=\"round\" />\n            </svg>\n            <h1 class=\"mt-3\">Your password has been successfully reset.</h1>\n            <h4 class=\"my-4\">You can now login using your IAS email and new password.</h4>\n            <button class=\"login-btn\" type=\"button\" [routerLink]=\"''\">Return to Login</button>\n        </div>\n    </div>\n</div>","import { CommonModule, DatePipe } from '@angular/common';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport {  Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { environment } from '../../../environments/environment';\nimport { IasLoaderComponent } from \"../../common/ias-loader/ias-loader.component\";\n\ndeclare var bootstrap: any;\n@Component({\n  selector: 'app-ias-signup',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, RouterModule, IasLoaderComponent],\n  templateUrl: './ias-signup.component.html',\n  styleUrl: './ias-signup.component.scss',\n  providers: [DatePipe]\n})\nexport class IasSignupComponent implements OnInit, OnDestroy {\n\n  currentStep = 1;\n  emailForm: FormGroup;\n  memberidForm: FormGroup;\n  memberdetailsForm: FormGroup;\n  token: string | null = null;\n  sessionid: any = null;\n  otpForm: FormGroup;\n  passwordForm: FormGroup;\n  otpControls = ['d1', 'd2', 'd3', 'd4', 'd5', 'd6'];\n  countdown!: number;\n  intervalId: any;\n  isResendDisabled = false;\n  showNewPassword = false;\n  showConfirmPassword = false;\n  passwordnotmatch = false;\n  action: string = '';\n  loading: boolean = false;\n  mobilenumber: string | null = null;\n  alternateemail: string | null = null;\n  iasid: string | null = null;\n  iasname: string | null = null;\n  iasbatch: string | null = null;\n  iascadre: string | null = null;\n  iasprofilePic: string | null = null;\n  toastMessage = '';\n  toastType: string = 'primary';\n  private myModal: any;\n  cadrelist: any[] = []; // Example cadre list, replace with actual data\n  maxDOB: string | undefined;\n  constructor(private fb: FormBuilder, private http: HttpClient, private datePipe: DatePipe) {\n    this.emailForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email, Validators.pattern(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[A-Za-z]{2,}$/)]]\n    });\n    this.memberidForm = this.fb.group({\n      name: ['', [Validators.pattern(/^[A-Za-z\\s]+$/)]],\n      identityNumber: ['', [Validators.required,]],\n      alternateEmail: [null, [Validators.pattern(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[A-Za-z]{2,}$/)]],\n      mobilenumber: [null, [Validators.pattern(/^[0-9]{10}$/)]]\n\n    });\n    this.memberdetailsForm = this.fb.group({\n      fullname: [''],\n      cadre: [0, [Validators.required]],\n      allotmentyear: ['', [Validators.required, Validators.pattern(/^[0-9]{4}$/)]],\n      gender: ['', [Validators.required]],\n      dateofbirth: ['', [Validators.required]],\n      mothertongue: ['', [Validators.required]],\n      retirementreason: ['', [Validators.required]],\n      mobilenumber: [null, [Validators.pattern(/^[0-9]{10}$/)]],\n      alternateEmail: [null,  [Validators.pattern(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[A-Za-z]{2,}$/)]],\n    });\n\n    const controls: any = {};\n    this.otpControls.forEach(ctrl => {\n      controls[ctrl] = new FormControl('', [Validators.required, Validators.pattern(/^[0-9]$/)]);\n    });\n    this.otpForm = this.fb.group(controls);\n\n    this.passwordForm = this.fb.group({\n      newPassword: ['', [\n        Validators.required,\n        Validators.minLength(6),\n        Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&#])[A-Za-z\\d@$!%*?&#]{8,}$/)\n      ]\n      ],\n      confirmPassword: ['', [Validators.required]]\n    });\n  }\n  startCountdown(seconds: number) {\n    this.countdown = seconds;\n    this.isResendDisabled = true;\n\n    clearInterval(this.intervalId);\n    this.intervalId = setInterval(() => {\n      if (this.countdown > 0) {\n        this.countdown--;\n      } else {\n        this.isResendDisabled = false;\n        clearInterval(this.intervalId);\n      }\n    }, 1000);\n  }\n  onResendOtp() {\n    // 👉 call your API to resend OTP here\n\n    this.startCountdown(59); // restart timer\n  }\n  ngOnInit() {\n    const url = `${environment.apiUrl}/dopt/cadres?limit=0`;\n    this.http.get(url).subscribe({\n      next: (response: any) => {\n        console.log('cadeeeeessss', response);\n        this.loading = false;\n        this.cadrelist = response.data.data;\n        console.log('Cadre List:', this.cadrelist);\n      },\n    });\n      const today = new Date();\n  today.setFullYear(today.getFullYear() - 21); // subtract 21 years\n  this.maxDOB = today.toISOString().split('T')[0]; // format: YYYY-MM-DD\n  }\n  // ngAfterViewInit(): void {\n  //   const modalEl = document.getElementById('Warning');\n  //   if (modalEl) {\n  //     this.myModal = new bootstrap.Modal(modalEl, {\n  //       backdrop: 'static',\n  //       keyboard: false\n  //     });\n  //     this.myModal.show();\n  //   }\n  // }\n\n  ngOnDestroy(): void {\n    if (this.myModal) {\n      this.myModal.hide();     // hide modal\n      this.myModal.dispose();  // clean up bootstrap instance\n      this.myModal = null;\n    }\n  }\n  // Step 1 - Submit email\n  submitMemberId() {\n    if (this.memberidForm.valid) {\n      console.log('Member ID submitted:', this.memberidForm.value);\n      this.loading = true;\n      const url = `${environment.apiUrl}/dopt/officers?limit=1&identityNo=` + this.memberidForm.value.identityNumber;\n      this.http.get(url).subscribe({\n        next: (response: any) => {\n          console.log('user details', response);\n          this.iasid = response.data.data[0]?.id; // Store the token for later use\n          this.iasname = response.data.data[0]?.englishName;\n          this.iasbatch = response.data.data[0]?.allotmentYear;\n          this.iascadre = response.data.data[0]?.cadreDomicile;\n          this.iasprofilePic = response.data.data[0]?.profilePic;\n          console.log('IAS ID:', this.iasid);\n          this.loading = false;\n          if (this.iasid !== undefined && this.iasid !== null) {\n            console.log('Valid IAS ID found:', this.iasid);\n            this.mobilenumber = this.memberidForm.value.mobilenumber || null;\n            this.alternateemail = this.memberidForm.value.alternateEmail || null;\n            this.showToast('✅ IAS Details Found', 'success');\n            this.currentStep = 6;\n          }\n          else {\n            this.loading = false;\n            this.showToast('IAS Details Not Found', 'danger');\n          }\n        },\n        error: (err) => {\n          this.loading = false;\n          this.showToast('Error fetching IAS details', 'danger');\n        }\n      });\n    }\n  }\n  showToast(message: string, type: string = 'primary') {\n    this.toastMessage = message;\n    this.toastType = type;\n\n    const toastEl = document.getElementById('liveToast');\n    if (toastEl) {\n      const toast = new bootstrap.Toast(toastEl, { delay: 3000 });\n      toast.show();\n    }\n  }\n allow10Numbers(event: KeyboardEvent) {\n  const charCode = event.key;\n\n  // Allow only digits 0–9\n  if (!/^[0-9]$/.test(charCode)) {\n    event.preventDefault();\n  }\n\n  // Limit to 10 digits\n  const input = event.target as HTMLInputElement;\n  if (input.value.length >= 10) {\n    event.preventDefault();\n  }\n}\n\n  allowOnlyLetters(event: KeyboardEvent) {\n  const charCode = event.key.charCodeAt(0);\n  // Allow: a-z, A-Z, and space\n  if (!/[a-zA-Z\\s]/.test(event.key)) {\n    event.preventDefault();\n  }\n}\nvalidateYear(event: any) {\n  const input = event.target as HTMLInputElement;\n  let value = input.value;\n\n  // Allow only 4 digits\n  if (value.length > 4) {\n    value = value.slice(0, 4);\n  }\n\n  // Block future years\n  const currentYear = new Date().getFullYear();\n  if (+value > currentYear) {\n    value = currentYear.toString();\n  }\n\n  input.value = value;\n}\n\n  submitmemberdetails() {\n    if (this.memberdetailsForm.valid) {\n      console.log('Member ID submitted:', this.memberdetailsForm.value);\n      this.loading = true;\n      console.log('Date of Birth:', this.memberdetailsForm.value.dateofbirth);\n\n      const formatted = this.datePipe.transform(this.memberdetailsForm.value.dateofbirth, 'dd/MM/yyyy');\n      console.log('Formatted Date of Birth:', formatted);\n      const url = `${environment.apiUrl}/dopt/officers?limit=1&englishName=` + this.memberdetailsForm.value.fullname + '&populate=cadre' + '&cadre=' + this.memberdetailsForm.value.cadre + '&allotmentYear=' + this.memberdetailsForm.value.allotmentyear + '&gender=' + this.memberdetailsForm.value.gender + '&dob=' + formatted + '&mothertongue=' + this.memberdetailsForm.value.mothertongue + '&retirementreason=' + this.memberdetailsForm.value.retirementreason;\n      this.http.get(url).subscribe({\n        next: (response: any) => {\n          console.log('user details', response);\n          this.iasid = response.data.data[0]?.id; // Store the token for later use\n          this.iasname = response.data.data[0]?.englishName;\n          this.iasbatch = response.data.data[0]?.allotmentYear;\n          this.iascadre = response.data.data[0]?.cadreDomicile;\n          this.iasprofilePic = response.data.data[0]?.profilePic;\n          console.log('IAS ID:', this.iasid);\n          this.loading = false;\n          if (this.iasid !== undefined && this.iasid !== null) {\n            console.log('Valid IAS ID found:', this.iasid);\n            this.mobilenumber = this.memberdetailsForm.value.mobilenumber || null;\n            this.alternateemail = this.memberdetailsForm.value.alternateEmail || null;\n            this.showToast('✅ IAS Details Found', 'success');\n            this.currentStep = 6;\n          }\n          else {\n            this.loading = false;\n            this.showToast('IAS Details Not Found', 'danger');\n          }\n        },\n        error: (err) => {\n          this.loading = false;\n          this.showToast('Error fetching IAS details', 'danger');\n        }\n      });\n    }\n  }\n  submitdetails() {\n    const url = `${environment.apiUrl}/accounts/details`;\n    const payload = {\n      identityNumber: {\n        id: this.iasid\n      },\n      alternateEmail: this.alternateemail !== '' ? this.alternateemail : null,\n      mobileNumber: (this.mobilenumber !== '' && this.mobilenumber != null)\n        ? String(this.mobilenumber)\n        : null\n    }\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${this.sessionid}`,\n      'Content-Type': 'application/json'\n    });\n    this.http.post(url, payload, { headers }).subscribe({\n      next: (response: any) => {\n        console.log('user details', response);\n        console.log('message', response.data.message);\n        this.loading = false;\n        this.showToast('✅ IAS Details submitted successful', 'success');\n        this.currentStep = 7;\n      },\n      error: (err) => {\n        this.loading = false;\n        this.showToast('This Dopt officer is already linked to another user', 'danger');\n      }\n    });\n  }\n  submitEmail() {\n    if (this.emailForm.valid) {\n      this.loading = true;\n      const url = `${environment.apiUrl}/accounts/signup`;\n      const payload = {\n        email: this.emailForm.value.email\n      }\n      this.http.post(url, payload).subscribe({\n        next: (response: any) => {\n          console.log('Signup successful', response);\n          this.token = response.data.token; // Store the token for later use\n          this.action = response.data.action; // Store the action for late\n          this.loading = false;\n          this.showToast('✅ Please check your email for OTP.', 'success');\n          this.currentStep = 2;\n          this.startCountdown(59);\n        },\n        error: (err) => {\n          this.loading = false;\n          this.showToast('Email is already registered.', 'danger');\n        }\n      });\n    }\n  }\n  onOtpInput(event: Event, index: number) {\n    const input = event.target as HTMLInputElement;\n    if (input.value && index < this.otpControls.length - 1) {\n      const next = input.parentElement?.children[index + 1] as HTMLInputElement | undefined;\n      next?.focus();\n    }\n  }\n  handleKeyDown(event: KeyboardEvent, index: number) {\n    const input = event.target as HTMLInputElement;\n\n    // ✅ allow navigation keys\n    const allowedKeys = ['Backspace', 'Delete', 'ArrowLeft', 'ArrowRight', 'Tab'];\n    if (allowedKeys.includes(event.key)) {\n      // Handle backspace navigation\n      if (event.key === 'Backspace' && !input.value && index > 0) {\n        const prev = input.parentElement?.children[index - 1] as HTMLInputElement | undefined;\n        prev?.focus();\n      }\n      return; // allow\n    }\n\n    // ✅ block non-digits\n    if (!/^[0-9]$/.test(event.key)) {\n      event.preventDefault();\n    }\n  }\n\n\n\n\n  togglePassword(field: 'new' | 'confirm') {\n    if (field === 'new') {\n      this.showNewPassword = !this.showNewPassword;\n    } else {\n      this.showConfirmPassword = !this.showConfirmPassword;\n    }\n  }\n  submitOtp() {\n    if (this.otpForm.valid) {\n      this.loading = true;\n      const otp = this.otpControls.map(ctrl => this.otpForm.get(ctrl)?.value).join('');\n      console.log('OTP entered:', otp);\n      const url = `${environment.apiUrl}/accounts/otpverify`;\n      const token = this.token;\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      });\n      const payload = {\n        otp: otp,\n        action: this.action, // Use the action stored from the signup response\n        token: this.token // Include the token in the payload\n      }\n      console.log('otp payload', payload);\n\n      this.http.patch(url, payload, { headers }).subscribe({\n        next: (response: any) => {\n          console.log('otp verified ', response);\n          this.sessionid = response.data.sessionToken; // Store the session ID for later use\n          this.loading = false;\n          this.showToast('✅ OTP verified successfully', 'success');\n          this.currentStep = 3; // ✅ move to password step\n        },\n        error: (err) => {\n          this.loading = false;\n          this.showToast('Failed to verify OTP', 'danger');\n        }\n      });\n    }\n  }\n\n  submitPassword() {\n    if (this.passwordForm.valid) {\n      if (this.passwordForm.value.newPassword !== this.passwordForm.value.confirmPassword) {\n        this.passwordnotmatch = true;\n        return;\n      }\n      console.log('Password created:', this.passwordForm.value);\n      const formdata = this.passwordForm.value;\n      const url = `${environment.apiUrl}/accounts/setup-password`;\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${this.sessionid}`,\n        'Content-Type': 'application/json'\n      });\n      const payload = {\n        password: formdata.newPassword,\n        confirmPassword: formdata.confirmPassword\n      }\n      console.log('payload', payload);\n      this.http.post(url, payload, { headers }).subscribe({\n        next: (response: any) => {\n          console.log('Signup successful:', response);\n          this.showToast('✅ Password setup successfully', 'success');\n          this.currentStep = 8;\n        },\n        error: (err) => {\n          this.loading = false;\n          this.showToast('Failed to set Password', 'danger');\n        }\n      });\n\n    }\n  }\n}\n","<app-ias-loader *ngIf=\"loading\"></app-ias-loader>\n<div class=\"toast-container position-fixed top-0 end-0 p-3\">\n  <div id=\"liveToast\" class=\"toast align-items-center text-bg-{{ toastType }} border-0\" role=\"alert\"\n    aria-live=\"assertive\" aria-atomic=\"true\">\n    <div class=\"d-flex\">\n      <div class=\"toast-body\">\n        {{ toastMessage }}\n      </div>\n      <button type=\"button\" class=\"btn-close btn-close-white me-2 m-auto\" data-bs-dismiss=\"toast\"\n        aria-label=\"Close\"></button>\n    </div>\n  </div>\n</div>\n\n\n<!-- Modal -->\n<!-- <div class=\"modal fade\" id=\"Warning\" tabindex=\"-1\" aria-labelledby=\"WarningLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-dialog-centered\">\n    <div class=\"modal-content p-4 text-center\">\n      <div class=\"modal-body\">\n        <h5 class=\"mb-3\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"44\" height=\"43\" viewBox=\"0 0 44 43\" fill=\"none\">\n            <mask id=\"mask0_51050_5200\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"44\"\n              height=\"43\">\n              <rect x=\"0.5\" width=\"43\" height=\"43\" fill=\"#D9D9D9\" />\n            </mask>\n            <g mask=\"url(#mask0_51050_5200)\">\n              <path\n                d=\"M22.0002 30.4584C22.5078 30.4584 22.9333 30.2867 23.2767 29.9433C23.6201 29.5999 23.7918 29.1743 23.7918 28.6667C23.7918 28.1591 23.6201 27.7335 23.2767 27.3901C22.9333 27.0467 22.5078 26.875 22.0002 26.875C21.4925 26.875 21.067 27.0467 20.7236 27.3901C20.3802 27.7335 20.2085 28.1591 20.2085 28.6667C20.2085 29.1743 20.3802 29.5999 20.7236 29.9433C21.067 30.2867 21.4925 30.4584 22.0002 30.4584ZM20.2085 23.2917H23.7918V12.5417H20.2085V23.2917ZM22.0002 39.4167C19.5217 39.4167 17.1925 38.9464 15.0127 38.0058C12.8328 37.0651 10.9366 35.7886 9.32412 34.1761C7.71162 32.5636 6.43506 30.6674 5.49443 28.4875C4.55381 26.3077 4.0835 23.9785 4.0835 21.5C4.0835 19.0216 4.55381 16.6924 5.49443 14.5125C6.43506 12.3327 7.71162 10.4365 9.32412 8.824C10.9366 7.2115 12.8328 5.93494 15.0127 4.99431C17.1925 4.05369 19.5217 3.58337 22.0002 3.58337C24.4786 3.58337 26.8078 4.05369 28.9877 4.99431C31.1675 5.93494 33.0637 7.2115 34.6762 8.824C36.2887 10.4365 37.5653 12.3327 38.5059 14.5125C39.4465 16.6924 39.9168 19.0216 39.9168 21.5C39.9168 23.9785 39.4465 26.3077 38.5059 28.4875C37.5653 30.6674 36.2887 32.5636 34.6762 34.1761C33.0637 35.7886 31.1675 37.0651 28.9877 38.0058C26.8078 38.9464 24.4786 39.4167 22.0002 39.4167ZM22.0002 35.8334C26.0016 35.8334 29.3908 34.4448 32.1679 31.6677C34.945 28.8907 36.3335 25.5014 36.3335 21.5C36.3335 17.4987 34.945 14.1094 32.1679 11.3323C29.3908 8.55525 26.0016 7.16671 22.0002 7.16671C17.9988 7.16671 14.6095 8.55525 11.8325 11.3323C9.05537 14.1094 7.66683 17.4987 7.66683 21.5C7.66683 25.5014 9.05537 28.8907 11.8325 31.6677C14.6095 34.4448 17.9988 35.8334 22.0002 35.8334Z\"\n                fill=\"#C82F2F\" />\n            </g>\n          </svg> Impersonation Warning</h5>\n        <h6 class=\"mb-2\">\n          Impersonating an IAS officer or providing false information to obtain IAS Association membership is a criminal\n          offence under:\n        </h6>\n        <p>\n          Section 170 of the Indian Penal Code (IPC) - Personating a public servant\n        </p>\n      </div>\n      <button type=\"button\" class=\"btn login-btn w-75 mx-auto mb-4\" data-bs-dismiss=\"modal\">Continue</button>\n    </div>\n  </div>\n</div> -->\n\n\n<div class=\"main-login-component d-flex align-items-center\">\n  <div class=\"intro-image-div position-relative\" [routerLink]=\"''\">\n  </div>\n  <div class=\"login-form-div d-flex flex-column align-items-center px-5\">\n\n    <!-- Step 1: Email -->\n    <div *ngIf=\"currentStep === 1\" class=\"stepcontainer\">\n      <h1 class=\"mb-4\">Create Account</h1>\n      <form [formGroup]=\"emailForm\" (ngSubmit)=\"submitEmail()\">\n        <label for=\"email\">Email ID</label>\n        <input type=\"email\" class=\"mb-1\" id=\"email\" formControlName=\"email\" placeholder=\"Enter Valid Email Id\" />\n        <div *ngIf=\"emailForm.get('email')?.touched && emailForm.get('email')?.invalid\" class=\"error-message\">\n          <small *ngIf=\"emailForm.get('email')?.errors?.['required']\">Email is required.</small>\n          <small *ngIf=\"emailForm.get('email')?.errors?.['pattern']\">Enter a Valid Email Id</small>\n        </div>\n        <button class=\"login-btn my-4\" type=\"submit\" [disabled]=\"emailForm.invalid\">Sign up</button>\n\n        <div class=\"warning-box\">\n          <span><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n              <path\n                d=\"M7.3335 11.3333H8.66683V7.33331H7.3335V11.3333ZM8.00016 5.99998C8.18905 5.99998 8.34738 5.93609 8.47516 5.80831C8.60294 5.68053 8.66683 5.5222 8.66683 5.33331C8.66683 5.14442 8.60294 4.98609 8.47516 4.85831C8.34738 4.73054 8.18905 4.66665 8.00016 4.66665C7.81127 4.66665 7.65294 4.73054 7.52516 4.85831C7.39738 4.98609 7.3335 5.14442 7.3335 5.33331C7.3335 5.5222 7.39738 5.68053 7.52516 5.80831C7.65294 5.93609 7.81127 5.99998 8.00016 5.99998ZM8.00016 14.6666C7.07794 14.6666 6.21127 14.4916 5.40016 14.1416C4.58905 13.7916 3.8835 13.3166 3.2835 12.7166C2.6835 12.1166 2.2085 11.4111 1.8585 10.6C1.5085 9.78887 1.3335 8.9222 1.3335 7.99998C1.3335 7.07776 1.5085 6.21109 1.8585 5.39998C2.2085 4.58887 2.6835 3.88331 3.2835 3.28331C3.8835 2.68331 4.58905 2.20831 5.40016 1.85831C6.21127 1.50831 7.07794 1.33331 8.00016 1.33331C8.92238 1.33331 9.78905 1.50831 10.6002 1.85831C11.4113 2.20831 12.1168 2.68331 12.7168 3.28331C13.3168 3.88331 13.7918 4.58887 14.1418 5.39998C14.4918 6.21109 14.6668 7.07776 14.6668 7.99998C14.6668 8.9222 14.4918 9.78887 14.1418 10.6C13.7918 11.4111 13.3168 12.1166 12.7168 12.7166C12.1168 13.3166 11.4113 13.7916 10.6002 14.1416C9.78905 14.4916 8.92238 14.6666 8.00016 14.6666ZM8.00016 13.3333C9.48905 13.3333 10.7502 12.8166 11.7835 11.7833C12.8168 10.75 13.3335 9.48887 13.3335 7.99998C13.3335 6.51109 12.8168 5.24998 11.7835 4.21665C10.7502 3.18331 9.48905 2.66665 8.00016 2.66665C6.51127 2.66665 5.25016 3.18331 4.21683 4.21665C3.1835 5.24998 2.66683 6.51109 2.66683 7.99998C2.66683 9.48887 3.1835 10.75 4.21683 11.7833C5.25016 12.8166 6.51127 13.3333 8.00016 13.3333Z\"\n                fill=\"#A16800\" />\n            </svg></span>\n          <p>\n            This facility is strictly for serving and retired IAS officers only.\n            Unauthorized access is prohibited.\n          </p>\n        </div>\n      </form>\n    </div>\n\n    <!-- Step 2: OTP -->\n    <div *ngIf=\"currentStep === 2\" class=\"stepcontainer\">\n      <h1>Enter OTP to Verify</h1>\n      <h4>OTP has been sent to your registered email ID- {{ emailForm.value.email }}</h4>\n      <form [formGroup]=\"otpForm\" (ngSubmit)=\"submitOtp()\">\n        <div class=\"otp-inputs\">\n          <input *ngFor=\"let ctrl of otpControls; let i = index\" type=\"text\" maxlength=\"1\" [formControlName]=\"ctrl\"\n            (input)=\"onOtpInput($event, i)\" (keydown)=\"handleKeyDown($event, i)\" autocomplete=\"off\" />\n        </div>\n        <button class=\"login-btn\" type=\"submit\" [disabled]=\"otpForm.invalid\">Continue</button>\n\n        <span class=\"d-flex align-items-center gap-2 mt-2\">\n          <p class=\"m-0\">Did not get the OTP?</p><span class=\"resend-text\" (click)=\"!isResendDisabled && onResendOtp()\"\n            [class.disabled]=\"isResendDisabled\">\n            Resend OTP\n          </span> in <span class=\"timer m-0\"> {{ countdown * 1000 | date:'mm:ss':'UTC' }}</span>\n        </span>\n      </form>\n    </div>\n    <div *ngIf=\"currentStep === 3\" class=\"stepcontainer\">\n      <h1 class=\"mb-4\">Sign up your account</h1>\n      <button class=\"login-btn mt-4\" type=\"submit\" (click)=\"currentStep = 4\">Get Details from DOPT</button>\n      <p class=\"text-center my-3\">or</p>\n      <button class=\"white-btn\" type=\"button\" (click)=\"currentStep = 5\">Fill Details Manually</button>\n    </div>\n    <!-- auto  form  -->\n    <div *ngIf=\"currentStep === 4\" class=\"stepcontainer\">\n      <p><span class=\"cursor-pointer fs-5 fw-bold\" (click)=\"currentStep = 3\"><i class=\"fas fa-arrow-left\"></i>\n          back</span>\n      </p>\n      <h1 class=\"mb-4\">Get Details from DOPT</h1>\n      <form [formGroup]=\"memberidForm\" (ngSubmit)=\"submitMemberId()\">\n        <label for=\"name\">Full Name<span class=\"redstar\">*</span></label>\n        <input type=\"text\" id=\"name\" formControlName=\"name\" maxlength=\"80\" placeholder=\"Enter Your Name\"\n          (keypress)=\"allowOnlyLetters($event)\" />\n\n        <div *ngIf=\" memberidForm.get('name')?.invalid\" class=\"error-message\">\n          <small *ngIf=\"memberidForm.get('name')?.errors?.['pattern']\">\n            Only letters are allowed.\n          </small>\n        </div>\n        <label class=\"mt-3\" for=\"identityNumber\">Identity No.<span class=\"redstar\">*</span></label>\n        <input type=\"text\" id=\"identityNumber\" formControlName=\"identityNumber\" placeholder=\"Enter Your Identity No.\" />\n        <div *ngIf=\"memberidForm.get('identityNumber')?.touched &&  memberidForm.get('identityNumber')?.invalid\"\n          class=\"error-message\">\n          <small *ngIf=\"memberidForm.get('identityNumber')?.errors?.['required']\">\n            Identity Number is required.\n          </small>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n\n            <label for=\"alternateEmail\" class=\"mt-3\">Alternate Email ID </label>\n            <input type=\"email\" id=\"alternateEmail\" formControlName=\"alternateEmail\" placeholder=\"Enter Email ID\"\n              maxlength=\"100\" />\n            <div *ngIf=\"memberidForm.get('alternateEmail')?.touched &&  memberidForm.get('alternateEmail')?.invalid\"\n              class=\"error-message\">\n              <small *ngIf=\"memberidForm.get('alternateEmail')?.errors?.['pattern']\">\n                Enter a valid email\n              </small>\n            </div>\n          </div>\n          <div class=\"col-md-6\">\n            <label for=\"mobilenumber \" class=\"mt-3\"> Mobile Number</label>\n            <input type=\"number\" id=\"mobilenumber\" formControlName=\"mobilenumber\" placeholder=\"Enter Mobile Number\"\n              (keypress)=\"allow10Numbers($event)\" />\n            <div *ngIf=\"memberidForm.get('mobilenumber')?.touched &&  memberidForm.get('mobilenumber')?.invalid\"\n              class=\"error-message\">\n              <small *ngIf=\"memberidForm.get('mobilenumber')?.errors?.['pattern']\">\n                Enter a valid Mobile Number\n              </small>\n            </div>\n          </div>\n        </div>\n        <button class=\"login-btn my-3 mt-4\" type=\"submit\" [disabled]=\"memberidForm.invalid\">Continue</button>\n      </form>\n    </div>\n\n    <!-- memberformmm -->\n    <div *ngIf=\"currentStep === 5\" class=\"stepcontainer\">\n      <p><span class=\"cursor-pointer fs-5 fw-bold\" (click)=\"currentStep = 3\"><i class=\"fas fa-arrow-left\"></i>\n          back</span>\n      </p>\n      <h1 class=\"mb-4\">Fill You Details Manually</h1>\n      <form [formGroup]=\"memberdetailsForm\" (ngSubmit)=\"submitmemberdetails()\">\n        <label for=\"FullName\">Full Name<span class=\"redstar\">*</span></label>\n        <input type=\"text\" id=\"FullName\" formControlName=\"fullname\" maxlength=\"80\" placeholder=\"Enter Your Name\"\n          (keypress)=\"allowOnlyLetters($event)\" />\n\n        <div class=\"row mt-3\">\n          <div class=\"col-md-6\">\n            <label for=\"Cadre\">Cadre<span class=\"redstar\">*</span></label>\n            <select class=\"form-select\" id=\"Cadre\" aria-label=\"Default select example\" formControlName=\"cadre\">\n              <option value=\"0\" disabled>Enter Cadre</option>\n              @for( cadre of cadrelist; track $index) {\n              <option [value]=\"cadre.id\">{{ cadre.name }}</option>\n              }\n            </select>\n          </div>\n          <div class=\"col-md-6\">\n            <label for=\"allotmentyear\">Allotment Year<span class=\"redstar\">*</span></label>\n            <input type=\"number\" class=\"mb-3\" id=\"allotmentyear\" formControlName=\"allotmentyear\"\n              placeholder=\"Enter Allotment Year\" (input)=\"validateYear($event)\" />\n          </div>\n          <div class=\"col-md-6\">\n            <label for=\"Gender\">Gender<span class=\"redstar\">*</span></label>\n            <select class=\"form-select\" id=\"Gender\" formControlName=\"gender\">\n              <option value=\"\" disabled>Select Gender</option>\n              <option value=\"Male\">Male</option>\n              <option value=\"Female\">Female</option>\n              <option value=\"\">Other</option>\n            </select>\n          </div>\n          <div class=\"col-md-6\">\n            <label for=\"dob\">Date of Birth<span class=\"redstar\">*</span></label>\n            <input type=\"date\" class=\"mb-3\" id=\"dob\" formControlName=\"dateofbirth\" placeholder=\"Select Date of Birth\"\n              [max]=\"maxDOB\" />\n          </div>\n          <div class=\"col-md-6\">\n            <label for=\"mothertongue\">Mother Tongue<span class=\"redstar\">*</span></label>\n            <input type=\"text\" class=\"mb-3\" id=\"mothertongue\" formControlName=\"mothertongue\"\n              placeholder=\"Enter Language\" maxlength=\"40\" (keypress)=\"allowOnlyLetters($event)\" />\n          </div>\n          <div class=\"col-md-6\">\n            <label for=\"retirementreason\">Retirement Status<span class=\"redstar\">*</span></label>\n            <select class=\"form-select\" id=\"retirementreason\" formControlName=\"retirementreason\">\n              <option value=\"\" disabled>Select Reason</option>\n              <option value=\"Serving\">Serving</option>\n              <option value=\"Superannuated\">Superannuated</option>\n            </select>\n          </div>\n          <div class=\"col-md-6\">\n            <label for=\"alternateEmail\">Alternate Email ID</label>\n            <input type=\"text\" class=\"mb-1\" id=\"alternateEmail\" formControlName=\"alternateEmail\"\n              placeholder=\"Enter your Email ID\" maxlength=\"100\" />\n            <div\n              *ngIf=\"memberdetailsForm.get('alternateEmail')?.touched &&  memberdetailsForm.get('alternateEmail')?.invalid\"\n              class=\"error-message\">\n              <small *ngIf=\"memberdetailsForm.get('alternateEmail')?.errors?.['pattern']\">\n                Enter a valid email\n              </small>\n            </div>\n          </div>\n          <div class=\"col-md-6\">\n            <label for=\"mobilenumber\">Mobile Number</label>\n            <input type=\"number\" class=\"mb-1\" id=\"mobilenumber\" formControlName=\"mobilenumber\"\n              placeholder=\"Enter Your Number\" (keypress)=\"allow10Numbers($event)\" />\n            <div\n              *ngIf=\"memberdetailsForm.get('mobilenumber')?.touched &&  memberdetailsForm.get('mobilenumber')?.invalid\"\n              class=\"error-message\">\n              <small *ngIf=\"memberdetailsForm.get('mobilenumber')?.errors?.['pattern']\">\n                Enter a valid Mobile Number\n              </small>\n            </div>\n          </div>\n        </div>\n        <button class=\"login-btn mt-4\" type=\"submit\" [disabled]=\"memberdetailsForm.invalid\">Continue</button>\n      </form>\n    </div>\n\n    <!-- your details  -->\n    <div *ngIf=\"currentStep === 6\" class=\"stepcontainer\">\n      <h1 class=\"mb-4\">Your Details</h1>\n      <div class=\"detailscard shadow-sm border rounded-4\">\n        <div class=\"d-flex align-items-center\">\n          <!-- Profile Image -->\n          <img [src]=\"iasprofilePic\" class=\"rounded-circle me-4\" alt=\"Profile Image\"\n            style=\"width:80px; height:80px; object-fit:cover; object-position: center;\">\n\n          <!-- Details -->\n          <div>\n            <h3 class=\"mb-3\">{{iasname}}</h3>\n            <div class=\"d-flex flex-wrap gap-2 text-muted\">\n              <span>IAS Batch Year:<strong> {{iasbatch}}</strong></span>\n              <span class=\"mx-2\">|</span>\n              <span>Cadre Domicile: <strong>{{iascadre}}</strong></span>\n            </div>\n          </div>\n        </div>\n      </div>\n      <button class=\"login-btn mt-4\" (click)=\"submitdetails()\">Continue</button>\n      <p class=\"mt-3\">Wrong profile or incorrect information? <span class=\"text-danger cursor-pointer\"\n          (click)=\"currentStep = 3\"> Retry.</span></p>\n    </div>\n\n    <div *ngIf=\"currentStep === 7\" class=\"stepcontainer\">\n      <h1 class=\"mb-4\">Create Password</h1>\n      <form [formGroup]=\"passwordForm\" (ngSubmit)=\"submitPassword()\">\n        <label for=\"newPassword\">Create Password</label>\n        <div class=\"password-wrapper my-1\">\n          <input [type]=\"showNewPassword ? 'text' : 'password'\" id=\"newPassword\" formControlName=\"newPassword\" />\n          <button type=\"button\" class=\"eye-btn\" (click)=\"togglePassword('new')\">\n            <svg *ngIf=\"!showNewPassword\" xmlns=\"http://www.w3.org/2000/svg\" width=\"19\" height=\"19\" viewBox=\"0 0 19 19\"\n              fill=\"none\">\n              <g clip-path=\"url(#clip0_50828_258)\">\n                <path\n                  d=\"M9.49996 4.75002C12.5004 4.75002 15.1762 6.43627 16.4825 9.10419C15.1762 11.7721 12.5004 13.4584 9.49996 13.4584C6.49954 13.4584 3.82371 11.7721 2.51746 9.10419C3.82371 6.43627 6.49954 4.75002 9.49996 4.75002ZM9.49996 3.16669C5.54163 3.16669 2.16121 5.62877 0.791626 9.10419C2.16121 12.5796 5.54163 15.0417 9.49996 15.0417C13.4583 15.0417 16.8387 12.5796 18.2083 9.10419C16.8387 5.62877 13.4583 3.16669 9.49996 3.16669ZM9.49996 7.12502C10.5925 7.12502 11.4791 8.01169 11.4791 9.10419C11.4791 10.1967 10.5925 11.0834 9.49996 11.0834C8.40746 11.0834 7.52079 10.1967 7.52079 9.10419C7.52079 8.01169 8.40746 7.12502 9.49996 7.12502ZM9.49996 5.54169C7.53663 5.54169 5.93746 7.14085 5.93746 9.10419C5.93746 11.0675 7.53663 12.6667 9.49996 12.6667C11.4633 12.6667 13.0625 11.0675 13.0625 9.10419C13.0625 7.14085 11.4633 5.54169 9.49996 5.54169Z\"\n                  fill=\"#A9ACB1\" />\n              </g>\n              <defs>\n                <clipPath id=\"clip0_50828_258\">\n                  <rect width=\"19\" height=\"19\" fill=\"white\" />\n                </clipPath>\n              </defs>\n            </svg>\n            <svg *ngIf=\"showNewPassword\" xmlns=\"http://www.w3.org/2000/svg\" width=\"19\" height=\"19\" viewBox=\"0 0 19 19\"\n              fill=\"none\">\n              <g clip-path=\"url(#clip0_50828_300)\">\n                <path\n                  d=\"M9.50008 4.74999C12.5005 4.74999 15.1763 6.43624 16.4826 9.10416C16.0155 10.07 15.3584 10.9012 14.5747 11.5742L15.6909 12.6904C16.7913 11.7167 17.6622 10.4975 18.2084 9.10416C16.8388 5.62874 13.4584 3.16666 9.50008 3.16666C8.49467 3.16666 7.52883 3.32499 6.61841 3.61791L7.92467 4.92416C8.43925 4.82124 8.96175 4.74999 9.50008 4.74999ZM8.653 5.65249L10.2917 7.29124C10.743 7.48916 11.1072 7.85333 11.3051 8.30458L12.9438 9.94333C13.0072 9.67416 13.0547 9.38916 13.0547 9.09624C13.0626 7.13291 11.4634 5.54166 9.50008 5.54166C9.20717 5.54166 8.93008 5.58124 8.653 5.65249ZM1.59133 3.06374L3.713 5.18541C2.42258 6.19874 1.40133 7.54458 0.791748 9.10416C2.16133 12.5796 5.54175 15.0417 9.50008 15.0417C10.7034 15.0417 11.8592 14.8121 12.9201 14.3925L15.6276 17.1L16.7438 15.9837L2.70758 1.93958L1.59133 3.06374ZM7.52883 9.00124L9.59508 11.0675C9.56342 11.0754 9.53175 11.0833 9.50008 11.0833C8.40758 11.0833 7.52092 10.1967 7.52092 9.10416C7.52092 9.06458 7.52883 9.04083 7.52883 9.00124ZM4.83717 6.30958L6.22258 7.69499C6.0405 8.13041 5.93758 8.60541 5.93758 9.10416C5.93758 11.0675 7.53675 12.6667 9.50008 12.6667C9.99883 12.6667 10.4738 12.5637 10.9013 12.3817L11.6772 13.1575C10.9805 13.3475 10.2522 13.4583 9.50008 13.4583C6.49967 13.4583 3.82383 11.7721 2.51758 9.10416C3.07175 7.97208 3.87925 7.03791 4.83717 6.30958Z\"\n                  fill=\"#222222\" />\n              </g>\n              <defs>\n                <clipPath id=\"clip0_50828_300\">\n                  <rect width=\"19\" height=\"19\" fill=\"white\" />\n                </clipPath>\n              </defs>\n            </svg>\n          </button>\n        </div>\n        <div *ngIf=\"passwordForm.get('newPassword')?.touched && passwordForm.get('newPassword')?.hasError('pattern')\"\n          class=\"error-message\">\n          Password must have 8 characters, contain at least one uppercase letter, one lowercase letter, one number, and\n          one special\n          character.\n        </div>\n        <label for=\"confirmPassword\" class=\"mt-3\">Confirm Password</label>\n        <div class=\"password-wrapper  my-1\">\n          <input [type]=\"showConfirmPassword ? 'text' : 'password'\" id=\"confirmPassword\"\n            formControlName=\"confirmPassword\" />\n          <button type=\"button\" class=\"eye-btn\" (click)=\"togglePassword('confirm')\">\n            <svg *ngIf=\"!showConfirmPassword\" xmlns=\"http://www.w3.org/2000/svg\" width=\"19\" height=\"19\"\n              viewBox=\"0 0 19 19\" fill=\"none\">\n              <g clip-path=\"url(#clip0_50828_258)\">\n                <path\n                  d=\"M9.49996 4.75002C12.5004 4.75002 15.1762 6.43627 16.4825 9.10419C15.1762 11.7721 12.5004 13.4584 9.49996 13.4584C6.49954 13.4584 3.82371 11.7721 2.51746 9.10419C3.82371 6.43627 6.49954 4.75002 9.49996 4.75002ZM9.49996 3.16669C5.54163 3.16669 2.16121 5.62877 0.791626 9.10419C2.16121 12.5796 5.54163 15.0417 9.49996 15.0417C13.4583 15.0417 16.8387 12.5796 18.2083 9.10419C16.8387 5.62877 13.4583 3.16669 9.49996 3.16669ZM9.49996 7.12502C10.5925 7.12502 11.4791 8.01169 11.4791 9.10419C11.4791 10.1967 10.5925 11.0834 9.49996 11.0834C8.40746 11.0834 7.52079 10.1967 7.52079 9.10419C7.52079 8.01169 8.40746 7.12502 9.49996 7.12502ZM9.49996 5.54169C7.53663 5.54169 5.93746 7.14085 5.93746 9.10419C5.93746 11.0675 7.53663 12.6667 9.49996 12.6667C11.4633 12.6667 13.0625 11.0675 13.0625 9.10419C13.0625 7.14085 11.4633 5.54169 9.49996 5.54169Z\"\n                  fill=\"#A9ACB1\" />\n              </g>\n              <defs>\n                <clipPath id=\"clip0_50828_258\">\n                  <rect width=\"19\" height=\"19\" fill=\"white\" />\n                </clipPath>\n              </defs>\n            </svg>\n            <svg *ngIf=\"showConfirmPassword\" xmlns=\"http://www.w3.org/2000/svg\" width=\"19\" height=\"19\"\n              viewBox=\"0 0 19 19\" fill=\"none\">\n              <g clip-path=\"url(#clip0_50828_300)\">\n                <path\n                  d=\"M9.50008 4.74999C12.5005 4.74999 15.1763 6.43624 16.4826 9.10416C16.0155 10.07 15.3584 10.9012 14.5747 11.5742L15.6909 12.6904C16.7913 11.7167 17.6622 10.4975 18.2084 9.10416C16.8388 5.62874 13.4584 3.16666 9.50008 3.16666C8.49467 3.16666 7.52883 3.32499 6.61841 3.61791L7.92467 4.92416C8.43925 4.82124 8.96175 4.74999 9.50008 4.74999ZM8.653 5.65249L10.2917 7.29124C10.743 7.48916 11.1072 7.85333 11.3051 8.30458L12.9438 9.94333C13.0072 9.67416 13.0547 9.38916 13.0547 9.09624C13.0626 7.13291 11.4634 5.54166 9.50008 5.54166C9.20717 5.54166 8.93008 5.58124 8.653 5.65249ZM1.59133 3.06374L3.713 5.18541C2.42258 6.19874 1.40133 7.54458 0.791748 9.10416C2.16133 12.5796 5.54175 15.0417 9.50008 15.0417C10.7034 15.0417 11.8592 14.8121 12.9201 14.3925L15.6276 17.1L16.7438 15.9837L2.70758 1.93958L1.59133 3.06374ZM7.52883 9.00124L9.59508 11.0675C9.56342 11.0754 9.53175 11.0833 9.50008 11.0833C8.40758 11.0833 7.52092 10.1967 7.52092 9.10416C7.52092 9.06458 7.52883 9.04083 7.52883 9.00124ZM4.83717 6.30958L6.22258 7.69499C6.0405 8.13041 5.93758 8.60541 5.93758 9.10416C5.93758 11.0675 7.53675 12.6667 9.50008 12.6667C9.99883 12.6667 10.4738 12.5637 10.9013 12.3817L11.6772 13.1575C10.9805 13.3475 10.2522 13.4583 9.50008 13.4583C6.49967 13.4583 3.82383 11.7721 2.51758 9.10416C3.07175 7.97208 3.87925 7.03791 4.83717 6.30958Z\"\n                  fill=\"#222222\" />\n              </g>\n              <defs>\n                <clipPath id=\"clip0_50828_300\">\n                  <rect width=\"19\" height=\"19\" fill=\"white\" />\n                </clipPath>\n              </defs>\n            </svg> </button>\n        </div>\n        <div *ngIf=\"passwordnotmatch\" class=\"error-message\">\n          Passwords do not match.\n        </div>\n        <button class=\"login-btn mt-4\" type=\"submit\">Create password</button>\n      </form>\n    </div>\n\n    <!-- Step 8: Success -->\n    <div *ngIf=\"currentStep === 8\" class=\"stepcontainer\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"100\" viewBox=\"0 0 100 100\" fill=\"none\">\n        <circle cx=\"50\" cy=\"50\" r=\"50\" fill=\"#4B9700\" fill-opacity=\"0.3\" />\n        <circle cx=\"50\" cy=\"50\" r=\"45\" fill=\"#4B9700\" fill-opacity=\"0.3\" />\n        <circle cx=\"49.5\" cy=\"49.5\" r=\"39.5\" fill=\"#4B9700\" />\n        <path d=\"M30 51.5L40.2267 62.1713C40.9464 62.9223 42.1216 62.9963 42.9298 62.3414L70.5 40\" stroke=\"white\"\n          stroke-width=\"5\" stroke-linecap=\"round\" />\n      </svg>\n      <h1 class=\"mt-3\">You have successfully signed up</h1>\n      <h4 class=\"mb-4\">You can now login using your IAS email and password.</h4>\n      <button class=\"login-btn\" type=\"button\" [routerLink]=\"''\">Return to Login</button>\n    </div>\n  </div>\n</div>","import { CanActivateFn, Router } from '@angular/router';\nimport { inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { ToastService } from '../common/toast.service';\n\nexport const authGuard: CanActivateFn = (route, state) => {\n  const router = inject(Router);\n  const platformId = inject(PLATFORM_ID);\n\n  if (isPlatformBrowser(platformId)) {\n    const token = localStorage.getItem('authToken');\n    const role = localStorage.getItem('userRole') ? atob(localStorage.getItem('userRole')!) : '';\n    const status = localStorage.getItem('userStatus') ? atob(localStorage.getItem('userStatus')!) : '';\n      const toastService = inject(ToastService); // ✅ inject service here\n    if (token) {\n      const expectedRoles = route.data?.['roles'] as string[];\n      const expectedStatuses = route.data?.['statuses'] as string[];\n\n      // ❌ Role mismatch\n      if (expectedRoles && !expectedRoles.includes(role)) {\n        if (role === 'admin' && expectedRoles.includes('user')) {\n          // ✅ Show popup for admin trying to access user side\n          toastService.showToast(\n            'You are logged in as admin. To visit this page, login with member credentials.',\n            'danger'\n          );\n        } else {\n          router.navigateByUrl('/unauthorized', { replaceUrl: true });\n        }\n        return false;\n      }\n\n      // ❌ Status mismatch\n      if (expectedStatuses && !expectedStatuses.includes(status)) {\n        if (status === 'created') {\n          router.navigateByUrl('/user-not-aproved', { replaceUrl: true });\n        } else {\n          router.navigateByUrl('/unauthorized', { replaceUrl: true });\n        }\n        return false;\n      }\n\n      return true; // ✅ Allowed\n    }\n\n    // Not logged in → save URL & redirect\n    localStorage.setItem('redirectUrl', state.url);\n    router.navigateByUrl('', { replaceUrl: true });\n    return false;\n  }\n\n  return false;\n};\n","import { CanActivateFn, Router } from '@angular/router';\nimport { inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nexport const noAuthGuard: CanActivateFn = (route, state) => {\n  const router = inject(Router);\n  const platformId = inject(PLATFORM_ID);\n\n  if (isPlatformBrowser(platformId)) {\n    const token = localStorage.getItem('authToken');\n    const role = atob(localStorage.getItem('userRole') || '');\n\n    if (token) {\n      // Redirect based on role\n      if (role === 'admin') {\n        router.navigateByUrl('/home', { replaceUrl: true }); // admin home\n      } else if (role === 'user') {\n        router.navigateByUrl('/user-home', { replaceUrl: true }); // user home\n      } else {\n        router.navigateByUrl('/', { replaceUrl: true }); // fallback\n      }\n      return false;\n    }\n\n    // User not logged in → allow access\n    return true;\n  }\n\n  // On server-side, block access by default\n  return false;\n};\n","import { Routes } from '@angular/router';\nimport { IasHomepageComponent } from './website/pages/main-page/ias-homepage/ias-homepage.component';\nimport { MainPageComponent } from './website/pages/main-page/main-page.component';\nimport { IasLoginComponent } from './authmodule/ias-login/ias-login.component';\nimport { IasForgotpasswordComponent } from './authmodule/ias-forgotpassword/ias-forgotpassword.component';\nimport { IasSignupComponent } from './authmodule/ias-signup/ias-signup.component';\nimport { authGuard } from './authmodule/auth.guard';\nimport { noAuthGuard } from './authmodule/guards/no-auth.guard';\n\nexport const routes: Routes = [\n\n    {\n        path: 'homepage',\n        canActivate: [authGuard],\n        component: MainPageComponent,\n        children: [\n            {\n                path: '',\n                // component:IasHomepageComponent,\n                loadComponent: () => import('./website/pages/main-page/ias-homepage/ias-homepage.component').then(m => m.IasHomepageComponent)\n            },\n            {\n                path: 'about-us',\n                // component:IasHomepageComponent,\n                loadComponent: () => import('./website/pages/ias-aboutus/ias-aboutus.component').then(m => m.IasAboutusComponent)\n            },\n            {\n                path: 'contact-us',\n                // component:IasHomepageComponent,\n                loadComponent: () => import('./website/pages/ias-contactus/ias-contactus.component').then(m => m.IasContactusComponent)\n            },\n            {\n                path: 'community',\n                // component:IasHomepageComponent,\n                loadComponent: () => import('./website/pages/ias-community/ias-community.component').then(m => m.IasCommunityComponent)\n            },\n            {\n                path: 'post',\n                // component:IasHomepageComponent,\n                loadComponent: () => import('./website/pages/post/post.component').then(m => m.PostComponent)\n            },\n            {\n                path: 'caruna',\n                loadComponent: () => import('./website/pages/resources/ias-caruna/ias-caruna.component').then(m => m.IasCarunaComponent)\n            },\n            {\n                path: 'all-members',\n                // component:IasHomepageComponent,\n                loadComponent: () => import('./website/pages/membership/all-members/all-members.component').then(m => m.AllMembersComponent)\n            },\n            {\n                path: 'news-blogs',\n                // component:IasHomepageComponent,\n                loadComponent: () => import('./website/pages/resources/news-blogs/news-blogs.component').then(m => m.NewsBlogsComponent)\n            },\n            {\n                path: 'caruna',\n                // component:IasHomepageComponent,\n                loadComponent: () => import('./website/pages/resources/ias-caruna/ias-caruna.component').then(m => m.IasCarunaComponent)\n            },\n            {\n                path: 'welfare-membership',\n                // component:IasHomepageComponent,\n                loadComponent: () => import('./website/pages/membership/welfare-membership/welfare-membership.component').then(m => m.WelfareMembershipComponent)\n            },\n            {\n                path: 'lifetime-membership',\n                // component:IasHomepageComponent,\n                loadComponent: () => import('./website/pages/membership/lifetime-membership/lifetime-membership.component').then(m => m.LifetimeMembershipComponent)\n            },\n            {\n                path: 'readmorenews',\n                // component:IasHomepageComponent,\n                loadComponent: () => import('./website/pages/resources/readmore-news/readmore-news.component').then(m => m.ReadmoreNewsComponent)\n            },\n            {\n                path: 'readmoreblogs',\n                // component:IasHomepageComponent,\n                loadComponent: () => import('./website/pages/resources/readmore-blogs/readmore-blogs.component').then(m => m.ReadmoreBlogsComponent)\n            },\n            {\n                path: 'membership',\n                // component:IasHomepageComponent,\n                loadComponent: () => import('./website/pages/membership/combined-member-page/combined-member-page.component').then(m => m.CombinedMemberPageComponent)\n            },\n            {\n                path: 'Terms-Conditions',\n                // component:IasHomepageComponent,\n                loadComponent: () => import('./website/pages/terms-conditions/terms-conditions.component').then(m => m.TermsConditionsComponent)\n            },\n            {\n                path: 'Refund-Cancellation-Policy',\n                // component:IasHomepageComponent,\n                loadComponent: () => import('./website/pages/refund-cancellation-policy/refund-cancellation-policy.component').then(m => m.RefundCancellationPolicyComponent)\n            },\n            {\n                path: 'Privacy-Policy',\n                // component:IasHomepageComponent,\n                loadComponent: () => import('./website/pages/privacy-policy/privacy-policy.component').then(m => m.PrivacyPolicyComponent)\n            },\n        ],\n    },\n    {\n        path: '',\n        canActivate: [noAuthGuard],\n        component: IasLoginComponent,\n    },\n    {\n        path: 'signup',\n        canActivate: [noAuthGuard],\n        component: IasSignupComponent,\n    },\n    {\n        path: 'forget-password',\n        canActivate: [noAuthGuard],\n        component: IasForgotpasswordComponent,\n    },\n\n    {\n        path: 'home',\n        canActivate: [authGuard],\n        data: { roles: ['admin'] },\n        loadComponent: () =>\n            import('./IAS-portal/dashboard-layout/dashboard-layout.component')\n                .then(m => m.DashboardLayoutComponent),\n        children: [\n            {\n                path: '',\n                loadComponent: () =>\n                    import('./IAS-portal/pages/dashboard/dashboard.component')\n                        .then(m => m.DashboardComponent)\n            },\n            {\n                path: 'profile',\n                loadComponent: () =>\n                    import('./IAS-portal/pages/profile-info/profile-info.component')\n                        .then(m => m.ProfileInfoComponent)\n            },\n            {\n                path: 'publications',\n                loadComponent: () =>\n                    import('./IAS-portal/pages/publications/publications.component')\n                        .then(m => m.PublicationsComponent)\n            },\n            {\n                path: 'blogs',\n                loadComponent: () =>\n                    import('./IAS-portal/pages/blogs/blogs.component')\n                        .then(m => m.BlogsComponent)\n            },\n            {\n                path: 'news',\n                loadComponent: () =>\n                    import('./IAS-portal/pages/news/news.component')\n                        .then(m => m.NewsComponent)\n            },\n            {\n                path: 'mom',\n                loadComponent: () =>\n                    import('./IAS-portal/pages/mo-m/mo-m.component')\n                        .then(m => m.MoMComponent)\n            },\n            {\n                path: 'feedbacks',\n                loadComponent: () =>\n                    import('./IAS-portal/pages/feedbacks/feedbacks.component')\n                        .then(m => m.FeedbacksComponent)\n            },\n            {\n                path: 'my-transaction',\n                loadComponent: () =>\n                    import('./IAS-portal/pages/my-transaction/my-transaction.component')\n                        .then(m => m.MyTransactionComponent)\n            },\n            {\n                path: 'approved-user',\n                loadComponent: () =>\n                    import('./IAS-portal/pages/approved-user/approved-user.component')\n                        .then(m => m.ApprovedUserComponent)\n            },\n            {\n                path: 'pending-approval-user',\n                loadComponent: () =>\n                    import('./IAS-portal/pages/not-approved-user/not-approved-user.component')\n                        .then(m => m.NotApprovedUserComponent)\n            },\n            {\n                path: 'rejected-user',\n                loadComponent: () =>\n                    import('./IAS-portal/pages/rejected-users/rejected-users.component')\n                        .then(m => m.RejectedUsersComponent)\n            },\n        ]\n    },\n\n    {\n        path: 'user-home',\n        canActivate: [authGuard],\n        data: { roles: ['user'], statuses: ['approved'] },\n        loadComponent: () =>\n            import('./user-portal/user-dashboard/user-dashboard.component')\n                .then(m => m.UserDashboardComponent),\n        children: [\n            {\n                path: '',\n                loadComponent: () =>\n                    import('./user-portal/pages/user-home/user-home.component')\n                        .then(m => m.UserHomeComponent)\n            },\n            {\n                path: 'user-profile',\n                loadComponent: () =>\n                    import('./user-portal/pages/user-profile/user-profile.component')\n                        .then(m => m.UserProfileComponent)\n            },\n            {\n                path: 'user-events',\n                loadComponent: () =>\n                    import('./user-portal/pages/user-events/user-events.component')\n                        .then(m => m.UserEventsComponent)\n            },\n            {\n                path: 'user-membership',\n                loadComponent: () =>\n                    import('./user-portal/pages/user-membership/user-membership.component')\n                        .then(m => m.UserMembershipComponent)\n            },\n            {\n                path: 'user-members',\n                loadComponent: () =>\n                    import('./user-portal/pages/user-members/user-members.component')\n                        .then(m => m.UserMembersComponent)\n            },\n            {\n                path: 'user-transactions',\n                loadComponent: () =>\n                    import('./user-portal/pages/my-transactions/my-transactions.component')\n                        .then(m => m.MyTransactionsComponent)\n            },\n            {\n                path: 'payment-status',\n                loadComponent: () =>\n                    import('./user-portal/pages/payment-status/payment-status.component')\n                        .then(m => m.PaymentStatusComponent)\n            },\n        ]\n    },\n\n    {\n        path: 'user-not-aproved',\n        data: { statuses: ['created'] },\n        loadComponent: () => import('./common/user-not-approved-layout/user-not-approved-layout.component').then(m => m.UserNotApprovedLayoutComponent)\n    },\n    \n    {\n        path: '**', // wildcard → catch all unknown routes\n        loadComponent: () => import('./common/route-error/route-error.component').then(m => m.RouteErrorComponent)\n    },\n\n];\n","import { HttpInterceptorFn, HttpErrorResponse } from '@angular/common/http';\nimport { inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { environment } from '../../environments/environment'; \nimport { HttpClient } from '@angular/common/http';\nimport { catchError, switchMap } from 'rxjs/operators';\nimport { throwError, from } from 'rxjs';\n\nexport const authInterceptor: HttpInterceptorFn = (req, next) => {\n  const platformId = inject(PLATFORM_ID);\n  const router = inject(Router);\n  const http = inject(HttpClient);\n\n  let token: string | null = null;\n  let expireAt: string | null = null;\n  let refreshToken: string | null = null;\n\n  if (isPlatformBrowser(platformId)) {\n    token = localStorage.getItem('authToken');\n    expireAt = localStorage.getItem('expireAt');\n    refreshToken = localStorage.getItem('refreshToken');\n  }\n\n  // ✅ Attach token if available\n  if (token) {\n    req = req.clone({\n      setHeaders: { Authorization: `Bearer ${token}` },\n    });\n  }\n\n  // ✅ Check expiry before sending request\n  if (expireAt && new Date(expireAt) <= new Date() && refreshToken) {\n    return from(\n      http.post(`${environment.apiUrl}/auth/refresh`, { refreshToken }).toPromise()\n    ).pipe(\n      switchMap((res: any) => {\n        if (res?.success && res.data?.sessionToken) {\n          // 🔄 Save new tokens\n          localStorage.setItem('authToken', res.data.sessionToken);\n          localStorage.setItem('expireAt', res.data.expireAt);\n          localStorage.setItem('refreshToken', res.data.refreshToken);\n\n          // Retry original request with new token\n          const clonedReq = req.clone({\n            setHeaders: { Authorization: `Bearer ${res.data.sessionToken}` },\n          });\n          return next(clonedReq);\n        } else {\n          // ❌ Refresh failed → clear + redirect\n          localStorage.clear();\n          router.navigateByUrl('');\n          return throwError(() => new Error('Refresh token failed'));\n        }\n      }),\n      catchError(() => {\n        // ❌ Refresh request failed\n        localStorage.clear();\n        router.navigateByUrl('');\n        return throwError(() => new Error('Refresh token failed'));\n      })\n    );\n  }\n\n  // ✅ Normal flow, but catch 401\n  return next(req).pipe(\n    catchError((error: HttpErrorResponse) => {\n      if (error.status === 401) {\n        localStorage.clear();\n        router.navigateByUrl('/logi');\n      }\n      return throwError(() => error);\n    })\n  );\n};\n","/**\n * @license Angular v17.3.12\n * (c) 2010-2024 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, ɵChangeDetectionScheduler, ɵRuntimeError, Injectable, ɵperformanceMarkFeature, makeEnvironmentProviders, RendererFactory2, NgZone, ANIMATION_MODULE_TYPE } from '@angular/core';\nimport { ɵDomRendererFactory2 } from '@angular/platform-browser';\nconst ANIMATION_PREFIX = '@';\nclass AsyncAnimationRendererFactory {\n  /**\n   *\n   * @param moduleImpl allows to provide a mock implmentation (or will load the animation module)\n   */\n  constructor(doc, delegate, zone, animationType, moduleImpl) {\n    this.doc = doc;\n    this.delegate = delegate;\n    this.zone = zone;\n    this.animationType = animationType;\n    this.moduleImpl = moduleImpl;\n    this._rendererFactoryPromise = null;\n    this.scheduler = inject(ɵChangeDetectionScheduler, {\n      optional: true\n    });\n  }\n  /** @nodoc */\n  ngOnDestroy() {\n    // When the root view is removed, the renderer defers the actual work to the\n    // `TransitionAnimationEngine` to do this, and the `TransitionAnimationEngine` doesn't actually\n    // remove the DOM node, but just calls `markElementAsRemoved()`. The actual DOM node is not\n    // removed until `TransitionAnimationEngine` \"flushes\".\n    // Note: we already flush on destroy within the `InjectableAnimationEngine`. The injectable\n    // engine is not provided when async animations are used.\n    this._engine?.flush();\n  }\n  /**\n   * @internal\n   */\n  loadImpl() {\n    const moduleImpl = this.moduleImpl ?? import('@angular/animations/browser');\n    return moduleImpl.catch(e => {\n      throw new ɵRuntimeError(5300 /* RuntimeErrorCode.ANIMATION_RENDERER_ASYNC_LOADING_FAILURE */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Async loading for animations package was ' + 'enabled, but loading failed. Angular falls back to using regular rendering. ' + 'No animations will be displayed and their styles won\\'t be applied.');\n    }).then(({\n      ɵcreateEngine,\n      ɵAnimationRendererFactory\n    }) => {\n      // We can't create the renderer yet because we might need the hostElement and the type\n      // Both are provided in createRenderer().\n      this._engine = ɵcreateEngine(this.animationType, this.doc, this.scheduler);\n      const rendererFactory = new ɵAnimationRendererFactory(this.delegate, this._engine, this.zone);\n      this.delegate = rendererFactory;\n      return rendererFactory;\n    });\n  }\n  /**\n   * This method is delegating the renderer creation to the factories.\n   * It uses default factory while the animation factory isn't loaded\n   * and will rely on the animation factory once it is loaded.\n   *\n   * Calling this method will trigger as side effect the loading of the animation module\n   * if the renderered component uses animations.\n   */\n  createRenderer(hostElement, rendererType) {\n    const renderer = this.delegate.createRenderer(hostElement, rendererType);\n    if (renderer.ɵtype === 0 /* AnimationRendererType.Regular */) {\n      // The factory is already loaded, this is an animation renderer\n      return renderer;\n    }\n    // We need to prevent the DomRenderer to throw an error because of synthetic properties\n    if (typeof renderer.throwOnSyntheticProps === 'boolean') {\n      renderer.throwOnSyntheticProps = false;\n    }\n    // Using a dynamic renderer to switch the renderer implementation once the module is loaded.\n    const dynamicRenderer = new DynamicDelegationRenderer(renderer);\n    // Kick off the module loading if the component uses animations but the module hasn't been\n    // loaded yet.\n    if (rendererType?.data?.['animation'] && !this._rendererFactoryPromise) {\n      this._rendererFactoryPromise = this.loadImpl();\n    }\n    this._rendererFactoryPromise?.then(animationRendererFactory => {\n      const animationRenderer = animationRendererFactory.createRenderer(hostElement, rendererType);\n      dynamicRenderer.use(animationRenderer);\n    }).catch(e => {\n      // Permanently use regular renderer when loading fails.\n      dynamicRenderer.use(renderer);\n    });\n    return dynamicRenderer;\n  }\n  begin() {\n    this.delegate.begin?.();\n  }\n  end() {\n    this.delegate.end?.();\n  }\n  whenRenderingDone() {\n    return this.delegate.whenRenderingDone?.() ?? Promise.resolve();\n  }\n  static {\n    this.ɵfac = function AsyncAnimationRendererFactory_Factory(t) {\n      i0.ɵɵinvalidFactory();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: AsyncAnimationRendererFactory,\n      factory: AsyncAnimationRendererFactory.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AsyncAnimationRendererFactory, [{\n    type: Injectable\n  }], () => [{\n    type: Document\n  }, {\n    type: i0.RendererFactory2\n  }, {\n    type: i0.NgZone\n  }, {\n    type: undefined\n  }, {\n    type: Promise\n  }], null);\n})();\n/**\n * The class allows to dynamicly switch between different renderer implementations\n * by changing the delegate renderer.\n */\nclass DynamicDelegationRenderer {\n  constructor(delegate) {\n    this.delegate = delegate;\n    // List of callbacks that need to be replayed on the animation renderer once its loaded\n    this.replay = [];\n    this.ɵtype = 1 /* AnimationRendererType.Delegated */;\n  }\n  use(impl) {\n    this.delegate = impl;\n    if (this.replay !== null) {\n      // Replay queued actions using the animation renderer to apply\n      // all events and properties collected while loading was in progress.\n      for (const fn of this.replay) {\n        fn(impl);\n      }\n      // Set to `null` to indicate that the queue was processed\n      // and we no longer need to collect events and properties.\n      this.replay = null;\n    }\n  }\n  get data() {\n    return this.delegate.data;\n  }\n  destroy() {\n    this.replay = null;\n    this.delegate.destroy();\n  }\n  createElement(name, namespace) {\n    return this.delegate.createElement(name, namespace);\n  }\n  createComment(value) {\n    return this.delegate.createComment(value);\n  }\n  createText(value) {\n    return this.delegate.createText(value);\n  }\n  get destroyNode() {\n    return this.delegate.destroyNode;\n  }\n  appendChild(parent, newChild) {\n    this.delegate.appendChild(parent, newChild);\n  }\n  insertBefore(parent, newChild, refChild, isMove) {\n    this.delegate.insertBefore(parent, newChild, refChild, isMove);\n  }\n  removeChild(parent, oldChild, isHostElement) {\n    this.delegate.removeChild(parent, oldChild, isHostElement);\n  }\n  selectRootElement(selectorOrNode, preserveContent) {\n    return this.delegate.selectRootElement(selectorOrNode, preserveContent);\n  }\n  parentNode(node) {\n    return this.delegate.parentNode(node);\n  }\n  nextSibling(node) {\n    return this.delegate.nextSibling(node);\n  }\n  setAttribute(el, name, value, namespace) {\n    this.delegate.setAttribute(el, name, value, namespace);\n  }\n  removeAttribute(el, name, namespace) {\n    this.delegate.removeAttribute(el, name, namespace);\n  }\n  addClass(el, name) {\n    this.delegate.addClass(el, name);\n  }\n  removeClass(el, name) {\n    this.delegate.removeClass(el, name);\n  }\n  setStyle(el, style, value, flags) {\n    this.delegate.setStyle(el, style, value, flags);\n  }\n  removeStyle(el, style, flags) {\n    this.delegate.removeStyle(el, style, flags);\n  }\n  setProperty(el, name, value) {\n    // We need to keep track of animation properties set on default renderer\n    // So we can also set them also on the animation renderer\n    if (this.shouldReplay(name)) {\n      this.replay.push(renderer => renderer.setProperty(el, name, value));\n    }\n    this.delegate.setProperty(el, name, value);\n  }\n  setValue(node, value) {\n    this.delegate.setValue(node, value);\n  }\n  listen(target, eventName, callback) {\n    // We need to keep track of animation events registred by the default renderer\n    // So we can also register them against the animation renderer\n    if (this.shouldReplay(eventName)) {\n      this.replay.push(renderer => renderer.listen(target, eventName, callback));\n    }\n    return this.delegate.listen(target, eventName, callback);\n  }\n  shouldReplay(propOrEventName) {\n    //`null` indicates that we no longer need to collect events and properties\n    return this.replay !== null && propOrEventName.startsWith(ANIMATION_PREFIX);\n  }\n}\n\n/**\n * Returns the set of [dependency-injection providers](guide/glossary#provider)\n * to enable animations in an application. See [animations guide](guide/animations)\n * to learn more about animations in Angular.\n *\n * When you use this function instead of the eager `provideAnimations()`, animations won't be\n * renderered until the renderer is loaded.\n *\n * @usageNotes\n *\n * The function is useful when you want to enable animations in an application\n * bootstrapped using the `bootstrapApplication` function. In this scenario there\n * is no need to import the `BrowserAnimationsModule` NgModule at all, just add\n * providers returned by this function to the `providers` list as show below.\n *\n * ```typescript\n * bootstrapApplication(RootComponent, {\n *   providers: [\n *     provideAnimationsAsync()\n *   ]\n * });\n * ```\n *\n * @param type pass `'noop'` as argument to disable animations.\n *\n * @publicApi\n * @developerPreview\n */\nfunction provideAnimationsAsync(type = 'animations') {\n  ɵperformanceMarkFeature('NgAsyncAnimations');\n  return makeEnvironmentProviders([{\n    provide: RendererFactory2,\n    useFactory: (doc, renderer, zone) => {\n      return new AsyncAnimationRendererFactory(doc, renderer, zone, type);\n    },\n    deps: [DOCUMENT, ɵDomRendererFactory2, NgZone]\n  }, {\n    provide: ANIMATION_MODULE_TYPE,\n    useValue: type === 'noop' ? 'NoopAnimations' : 'BrowserAnimations'\n  }]);\n}\n\n/**\n * @module\n * @description\n * Entry point for all animation APIs of the animation browser package.\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n\n// This file is not used to build this module. It is only used during editing\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { provideAnimationsAsync, AsyncAnimationRendererFactory as ɵAsyncAnimationRendererFactory };\n","import { ApplicationConfig } from '@angular/core';\nimport { provideRouter, withInMemoryScrolling } from '@angular/router';\nimport { routes } from './app.routes';\nimport { provideClientHydration } from '@angular/platform-browser';\nimport { provideHttpClient, withInterceptors, withFetch } from '@angular/common/http';\nimport { authInterceptor } from './interceptors/auth.interceptor';\nimport { provideAnimationsAsync } from '@angular/platform-browser/animations/async';\n\nexport const appConfig: ApplicationConfig = {\n  providers: [\n    provideRouter(\n      routes,\n      withInMemoryScrolling({\n        scrollPositionRestoration: 'enabled',\n        anchorScrolling: 'enabled',\n      })\n    ),\n    provideClientHydration(),\n    provideHttpClient(\n      withInterceptors([authInterceptor]), \n      withFetch() // ✅ enable Fetch API for SSR\n    ),\n    provideAnimationsAsync() // ✅ keep only once\n  ]\n};\n","import { mergeApplicationConfig, ApplicationConfig } from '@angular/core';\nimport { provideServerRendering } from '@angular/platform-server';\nimport { appConfig } from './app.config';\n\nconst serverConfig: ApplicationConfig = {\n  providers: [\n    provideServerRendering()\n  ]\n};\n\nexport const config = mergeApplicationConfig(appConfig, serverConfig);\n","import { bootstrapApplication } from '@angular/platform-browser';\nimport { AppComponent } from './app/app.component';\nimport { config } from './app/app.config.server';\n\nconst bootstrap = () => bootstrapApplication(AppComponent, config);\n\nexport default bootstrap;\n"],"mappings":"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","names":["_c0","bootstrap"],"x_google_ignoreList":[22]}