{
  "version": 3,
  "sources": ["src/app/website/pages/post/post.component.ts", "src/app/website/pages/post/post.component.html"],
  "sourcesContent": ["import { HttpClient } from '@angular/common/http';\nimport { Component, inject, OnInit } from '@angular/core';\nimport { ActivatedRoute, RouterModule } from '@angular/router';\nimport { environment } from '../../../../environments/environment';\nimport { TimeAgoPipe } from \"../../../common/time-ago.pipe\";\nimport { CommonModule } from '@angular/common';\nimport { ToastService } from '../../../common/toast.service';\nimport { AuthService } from '../../../services/auth.service';\n\n@Component({\n  selector: 'app-post',\n  standalone: true,\n  imports: [TimeAgoPipe, RouterModule, CommonModule],\n  templateUrl: './post.component.html',\n  styleUrl: './post.component.scss'\n})\nexport class PostComponent implements OnInit {\n  auth = inject(AuthService);\n  postId!: string;\n  postData: any = null;\n   animate = false;\ns3Url = environment.s3Url;\n  constructor(private route: ActivatedRoute, private http: HttpClient,private toastService: ToastService) { }\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe(params => {\n      this.postId = params['id'];  // ðŸ‘ˆ Get post id from query\n      if (this.postId) {\n        this.auth.checkAuth();\n        this.singleposts(+this.postId);\n      }\n    });\n  }\n singleposts(id: number) {\n  let URL;\nif (this.auth.isLoggedIn() === true) {\n    URL =`${environment.apiUrl}/communities/users?populate=postTag&populate=createdBy&id=${id}`\n  }\n  else {\n    URL =`${environment.apiUrl}/communities?populate=postTag&populate=createdBy&id=${id}`\n  }\n    this.http.get<any>(URL)\n      .subscribe({\n        next: (res) => {\n          console.log(res);\n          this.postData = res.data.data[0];\n          console.log(\"postdata\", this.postData);\n        },\n        error: (err) => {\n          console.error('Error fetching Events:', err);\n        }\n      });\n  }\n  copyPostLink(postId: string) {\n    const url = `${window.location.origin}/post?id=${postId}`;\n\n    navigator.clipboard.writeText(url).then(() => {\n      this.toastService.showToast('Link copied to clipboard âœ…', 'success');\n    }).catch(err => {\n      console.error('Failed to copy link: ', err);\n    });\n  }\n  \n  toggleLike(post: any) {\n  if (!post) return;\n  const token = localStorage.getItem('authToken');\n  if (!token) {\n    this.toastService.showToast('Please login to like the posts.', 'success');\n    return; // stop here\n  }\n\n  // trigger animation\n  post.animate = true;\n\n  // optimistic UI update\n  const prevLiked = post.isLiked;\n  post.isLiked = !prevLiked;\n  post.likes += post.isLiked ? 1 : -1;\n\n  // call API\n  this.http.post<any>(`${environment.apiUrl}/communities/likes`, { communityId: post.id })\n    .subscribe({\n      next: (res) => {\n        console.log(\"Like API success:\", res);\n      },\n      error: (err) => {\n        console.error(\"Error in Like post:\", err);\n        // revert if failed\n        post.isLiked = prevLiked;\n        post.likes += post.isLiked ? 1 : -1;\n      }\n    });\n\n  // reset animate flag after animation\n  setTimeout(() => { post.animate = false; }, 300);\n}\n}\n", "<div class=\"singlepost-section\">\n    <div class=\"container\">\n        <div class=\"post-tabs-div mb-5\">\n            <p>\n                <span class=\"cursor-pointer fs-5 fw-bold text-white\" [routerLink]=\"['/homepage/community']\">\n                    <i class=\"fas fa-arrow-left\"></i> Back to Community\n                </span>\n            </p>\n\n        </div>\n\n        <h2 class=\"featured-heade\">Featured Posts</h2>\n        <div class=\"post-content-div d-flex align-items-start gap-5 mt-4\">\n            <div class=\"left-posts w-75\">\n                <div class=\"allpost-div d-flex flex-column gap-5\">\n                    <div class=\"post\"  *ngIf=\"postData !== null \">\n\n                        <div class=\"image-name-div d-flex align-items-center gap-2 mb-3 z-1\">\n                            <img *ngIf=\"postData?.createdBy?.doptOfficer?.profilePic\"\n                                    [src]=\"postData.createdBy.doptOfficer.profilePic\" class=\"rounded-circle me-2\"\n                                alt=\"User\">\n                            <h3>{{ postData?.createdBy?.doptOfficer?.englishName }}</h3>\n                            <h4>{{ postData.createdAt | timeAgo }}</h4>\n                        </div>\n                        <div *ngIf=\"postData.mediaFile.length >0\"\n                            class=\"position-relative imgcontainer overflow-auto d-flex gap-3 w-100 pb-2\">\n                            <ng-container *ngFor=\"let file of postData.mediaFile\">\n                                <!-- Check if file is an image -->\n                                <img *ngIf=\"file.endsWith('.jpg') || file.endsWith('.jpeg') || file.endsWith('.png')\"\n                                    [src]=\"s3Url +file\"\n                                    class=\"img-fluid rounded\" alt=\"Post Image\">\n\n                                <!-- Check if file is a video -->\n                                <video *ngIf=\"file.endsWith('.mp4')\"\n                                    [src]=\"s3Url +file\"\n                                    class=\"img-fluid rounded\" controls>\n                                </video>\n                            </ng-container>\n                        </div>\n                        <div class=\"post-title-desc my-4 z-1\">\n                            <h1>{{ postData.caption }}</h1>\n                            <p>{{ postData.description}}</p>\n                        </div>\n                        <div class=\"divider z-1\"></div>\n\n                        <div class=\"like-share-div my-3 z-1 d-flex align-items-center gap-3\">\n                            <div class=\"like-div d-flex align-items-center\">\n                                    <div class=\"like-button overflow-visible\" [class.liked]=\"postData?.isLiked\"\n                                        [class.animate]=\"postData?.animate\" (click)=\"toggleLike(postData)\">\n                                        <!-- Heart Icon -->\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"21\" height=\"19\"\n                                            viewBox=\"0 0 21 19\" fill=\"none\">\n                                            <path\n                                                d=\"M10.293 19L8.84297 17.7C7.15964 16.1834 5.76797 14.875 4.66797 13.775C3.56797 12.675 2.69297 11.6875 2.04297 10.8125C1.39297 9.93752 0.938802 9.13336 0.680469 8.40002C0.422135 7.66669 0.292969 6.91669 0.292969 6.15002C0.292969 4.58336 0.817969 3.27502 1.86797 2.22502C2.91797 1.17502 4.2263 0.650024 5.79297 0.650024C6.65964 0.650024 7.48464 0.833358 8.26797 1.20002C9.0513 1.56669 9.7263 2.08336 10.293 2.75002C10.8596 2.08336 11.5346 1.56669 12.318 1.20002C13.1013 0.833358 13.9263 0.650024 14.793 0.650024C16.3596 0.650024 17.668 1.17502 18.718 2.22502C19.768 3.27502 20.293 4.58336 20.293 6.15002C20.293 6.91669 20.1638 7.66669 19.9055 8.40002C19.6471 9.13336 19.193 9.93752 18.543 10.8125C17.893 11.6875 17.018 12.675 15.918 13.775C14.818 14.875 13.4263 16.1834 11.743 17.7L10.293 19ZM10.293 16.3C11.893 14.8667 13.2096 13.6375 14.243 12.6125C15.2763 11.5875 16.093 10.6959 16.693 9.93752C17.293 9.17919 17.7096 8.50419 17.943 7.91252C18.1763 7.32086 18.293 6.73336 18.293 6.15002C18.293 5.15002 17.9596 4.31669 17.293 3.65002C16.6263 2.98336 15.793 2.65002 14.793 2.65002C14.0096 2.65002 13.2846 2.87086 12.618 3.31252C11.9513 3.75419 11.493 4.31669 11.243 5.00002H9.34297C9.09297 4.31669 8.63464 3.75419 7.96797 3.31252C7.3013 2.87086 6.5763 2.65002 5.79297 2.65002C4.79297 2.65002 3.95964 2.98336 3.29297 3.65002C2.6263 4.31669 2.29297 5.15002 2.29297 6.15002C2.29297 6.73336 2.40964 7.32086 2.64297 7.91252C2.8763 8.50419 3.29297 9.17919 3.89297 9.93752C4.49297 10.6959 5.30964 11.5875 6.34297 12.6125C7.3763 13.6375 8.69297 14.8667 10.293 16.3Z\"\n                                                fill=\"white\" />\n                                        </svg>\n                                    </div>\n                                    <span class=\"like-count\">{{ postData?.likes }} Likes</span>\n\n                                </div>\n                            <div class=\"share-div\" (click)=\"copyPostLink(postData.id)\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"19\" height=\"14\" viewBox=\"0 0 19 14\"\n                                    fill=\"none\">\n                                    <path\n                                        d=\"M2.29297 14V10C2.29297 9.16667 2.58464 8.45833 3.16797 7.875C3.7513 7.29167 4.45964 7 5.29297 7H14.468L10.868 10.6L12.293 12L18.293 6L12.293 0L10.868 1.4L14.468 5H5.29297C3.90964 5 2.73047 5.4875 1.75547 6.4625C0.780468 7.4375 0.292969 8.61667 0.292969 10V14H2.29297Z\"\n                                        fill=\"white\" />\n                                </svg>Copy Link\n                            </div>\n                        </div>\n\n                        <div class=\"gradient-div\"></div>\n                    </div>\n                     <div *ngIf=\"postData === null \" class=\"mb-2\">\n                    <p class=\"mb-2\">posts unavailable.</p>\n                </div>\n                </div>\n            </div>\n            <div class=\"right-addpost w-25\">\n                <h1>Your Stories Deserve the Spotlight Too.</h1>\n                <h4>Join and Get Featured !</h4>\n                <button class=\"btn btn-light\" routerLink=\"/\">Submit Now</button>\n            </div>\n        </div>\n    </div>\n</div>"],
  "mappings": "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",
  "names": []
}
